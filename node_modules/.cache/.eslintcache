[{"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/index.js":"1","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/reportWebVitals.js":"2","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/app/App.js":"3","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/SideMenu.js":"4","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/App/App.js":"5","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Header.js":"6","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/PageHeader.js":"7","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/useForm.js":"8","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/input.js":"9","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Controls.js":"10","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Input.js":"11","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Select.js":"12","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/Supplier.js":"13","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/services/supplierService.js":"14","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/DatePicker.js":"15","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Button.js":"16","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/useTable.js":"17","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Popup.js":"18","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/ActionButton.js":"19","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Notification.js":"20","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/ConfirmDialog.js":"21","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/SupplierForm.js":"22","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/customer/Customer.js":"23","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/customer/CustomerForm.js":"24","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Loader.js":"25","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/NavBar.js":"26","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/NavBarElements.js":"27","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/Item.js":"28","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/ItemForm.js":"29","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/Stock.js":"30","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/StockForm.js":"31","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/Invoice.js":"32","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js":"33","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/ViewDetail.js":"34","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Login/LoginForm.js":"35","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/User.js":"36","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/UserForm.js":"37","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/RadioGroup.js":"38","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/enum/urls.js":"39"},{"size":460,"mtime":1633704717866,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1633498327439,"results":"42","hashOfConfig":"41"},{"size":221,"mtime":1633618145940,"results":"43","hashOfConfig":"41"},{"size":491,"mtime":1634983755770,"results":"44","hashOfConfig":"41"},{"size":3789,"mtime":1636459371926,"results":"45","hashOfConfig":"41"},{"size":542,"mtime":1633756240029,"results":"46","hashOfConfig":"41"},{"size":1411,"mtime":1633756221774,"results":"47","hashOfConfig":"41"},{"size":1134,"mtime":1633778156034,"results":"48","hashOfConfig":"41"},{"size":349,"mtime":1633698328715,"results":"49","hashOfConfig":"41"},{"size":343,"mtime":1636447764004,"results":"50","hashOfConfig":"41"},{"size":609,"mtime":1636258794864,"results":"51","hashOfConfig":"41"},{"size":975,"mtime":1636205636531,"results":"52","hashOfConfig":"41"},{"size":10978,"mtime":1637069112882,"results":"53","hashOfConfig":"41"},{"size":2451,"mtime":1634571042273,"results":"54","hashOfConfig":"41"},{"size":1041,"mtime":1635220851800,"results":"55","hashOfConfig":"41"},{"size":507,"mtime":1636197593948,"results":"56","hashOfConfig":"41"},{"size":3709,"mtime":1636273126176,"results":"57","hashOfConfig":"41"},{"size":1656,"mtime":1636203161816,"results":"58","hashOfConfig":"41"},{"size":869,"mtime":1634131437693,"results":"59","hashOfConfig":"41"},{"size":792,"mtime":1636203143763,"results":"60","hashOfConfig":"41"},{"size":1155,"mtime":1634052639738,"results":"61","hashOfConfig":"41"},{"size":4074,"mtime":1636451249547,"results":"62","hashOfConfig":"41"},{"size":11730,"mtime":1637068566968,"results":"63","hashOfConfig":"41"},{"size":4403,"mtime":1636590095083,"results":"64","hashOfConfig":"41"},{"size":470,"mtime":1636202994951,"results":"65","hashOfConfig":"41"},{"size":1235,"mtime":1636458925297,"results":"66","hashOfConfig":"41"},{"size":1858,"mtime":1636459166988,"results":"67","hashOfConfig":"41"},{"size":10883,"mtime":1637069300430,"results":"68","hashOfConfig":"41"},{"size":3336,"mtime":1636248871418,"results":"69","hashOfConfig":"41"},{"size":12230,"mtime":1637074967923,"results":"70","hashOfConfig":"41"},{"size":3830,"mtime":1636251210535,"results":"71","hashOfConfig":"41"},{"size":13041,"mtime":1637075152832,"results":"72","hashOfConfig":"41"},{"size":7451,"mtime":1636344359397,"results":"73","hashOfConfig":"41"},{"size":2009,"mtime":1636251307693,"results":"74","hashOfConfig":"41"},{"size":5581,"mtime":1636342600196,"results":"75","hashOfConfig":"41"},{"size":11806,"mtime":1637075349025,"results":"76","hashOfConfig":"41"},{"size":4480,"mtime":1636591185264,"results":"77","hashOfConfig":"41"},{"size":943,"mtime":1636450736481,"results":"78","hashOfConfig":"41"},{"size":802,"mtime":1637075556653,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"6fe1na",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"82"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/index.js",[],["173","174"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/reportWebVitals.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/app/App.js",["175"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/SideMenu.js",[],["176","177"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/App/App.js",["178"],"import React, {useState} from \"react\";\nimport './App.css';\nimport {makeStyles} from \"@mui/styles\";\nimport {CssBaseline} from \"@material-ui/core\";\nimport Supplier from \"../pages/supplier/Supplier\";\nimport Customer from \"../pages/customer/Customer\";\nimport Item from \"../pages/Item/Item\";\nimport Stock from \"../pages/Stock/Stock\";\nimport Invoice from \"../pages/Invoice/Invoice\";\nimport NavBar from \"../components/NavBar\";\nimport Loader from \"../components/Loader\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginForm from \"../pages/Login/LoginForm\";\nimport { useHistory } from \"react-router-dom\";\nimport User from \"../pages/user/User\";\n\nconst useStyles = makeStyles({\n    appMain: {\n        // paddingLeft: '320px',\n        width: '100%'\n    }\n})\n\nfunction App() {\n    const classes = useStyles();\n    const[loading, setLoading] = useState(false);\n    const[user, setUser] = useState({});\n    \n  return (\n      <>\n        {/* <SideMenu/> */}\n        <Loader\n            loading = {loading}\n        />\n        <div className={classes.appMain}>\n        <Router>\n            \n                <Switch>\n                \n                    <Route path='/' exact>\n                        <LoginForm\n                        setLoading = {setLoading}\n                        setUser = {setUser}\n                        />\n                    </Route>\n                    <Route path='/supplier'>\n                        <NavBar\n                            user = {user}\n                        />\n                        <Supplier\n                            setLoading = {setLoading}\n                            user = {user}\n                            // loading = {loading}\n                        />\n                    </Route>\n                    <Route path='/customer'>\n                        <NavBar\n                            user = {user}\n                        />\n                        <Customer\n                            setLoading = {setLoading}\n                            user = {user}\n                        />\n                    </Route>\n                    <Route path='/item'>\n                        <NavBar\n                            user = {user}\n                        />\n                        <Item\n                            setLoading = {setLoading}\n                            user = {user}\n                        />\n                    </Route>\n                    <Route path='/stock'>\n                        <NavBar\n                            user = {user}\n                        />\n                        <Stock\n                            setLoading = {setLoading}\n                            user = {user}\n                        />\n                    </Route>\n                    <Route path='/invoice'>\n                        <NavBar\n                            user = {user}\n                        />\n                        <Invoice\n                            setLoading = {setLoading}\n                            user = {user}\n                        />\n                    </Route>\n                    <Route path='/user'>\n                        <NavBar\n                            user = {user}\n                        />\n                        <User\n                            setLoading = {setLoading}\n                            user = {user}\n                        />\n                    </Route>\n                    <Route path='/logout'>\n                        <LoginForm\n                            setLoading = {setLoading}\n                            setUser = {setUser}\n                        />\n                    </Route>\n                </Switch>\n        </Router>\n            {/* <Header/> */}\n        </div>\n          <CssBaseline/>\n      </>\n  );\n}\n\nexport default App;\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Header.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/PageHeader.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/useForm.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/input.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Controls.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Input.js",["179","180"],"import React from 'react';\nimport {TextField} from \"@mui/material\";\n\nexport default function Input(props) {\n\n    const{name, label, value , error = null, onChange, disabled, type, ...other} = props\n\n    return (\n        <TextField\n            disabled={disabled ? true : false}\n            variant=\"outlined\"\n            name={name}\n            label={label}\n            value={value}\n            onChange={onChange}\n            type={type == 'password' ? 'password' : type == 'number' ? 'number' : 'text'}\n            {...other}\n            {...(error && {error:true, helperText:error})}\n        />\n    );\n}\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Select.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/Supplier.js",["181","182","183","184","185","186","187","188","189"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/services/supplierService.js",["190","191","192"],"import axios from \"axios\";\nimport React, {useEffect, useState} from 'react';\n\nconst KEYS ={\n    suppliers: 'suppliers',\n    supplierId: 'supplierId'\n}\n\nexport const getDepartmentCollection = () => ([\n    {id: '1', title:'Development'},\n    {id: '2', title:'Marketing'},\n    {id: '3', title:'IT'},\n    {id: '4', title:'Accounting'},\n    {id: '5', title:'HR'},\n    {id: '6', title:'Finance'}\n])\n\nexport function insertSupplier(data){\n    // axios.post('http://localhost:8080/api/v1/supplier', data)\n    // .then(response => {\n    //   console.log(\"Status: \", response.status);\n    //   console.log(\"Message: \", response);\n    // }).catch(error => {\n    //   console.error('Something went wrong!', error);\n    // });\n}\n// export function insertSupplier(data){\n//     console.log('data', data)\n//     let suppliers = getAllSuppliers();\n//     data['id'] = generateSupplierId();\n//     suppliers.push(data);\n//     localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n// }\n\nexport function updateSupplier(data){\n    // axios.put('http://localhost:8080/api/v1/supplier/'+ data.id, data)\n    // .then(response => {\n    //   console.log(\"Status: \", response.status);\n    //   console.log(\"Message: \", response);\n    // }).catch(error => {\n    //   console.error('Something went wrong!', error);\n    // });\n}\n\nexport function deleteSupplier(id){\n    axios.delete('http://localhost:8080/api/v1/supplier/'+ id)\n    .then(response => {\n      console.log(\"Status: \", response.status);\n      console.log(\"Message: \", response);\n    }).catch(error => {\n      console.error('Something went wrong!', error);\n    });\n}\n\nexport function generateSupplierId(){\n    if(localStorage.getItem(KEYS.supplierId) == null){\n        localStorage.setItem(KEYS.supplierId, '0')\n    }\n    var id = parseInt(localStorage.getItem(KEYS.supplierId))\n    localStorage.setItem(KEYS.supplierId, (++id).toString())\n    return id;\n}\n\nexport function getAllSuppliers(){\n    if(localStorage.getItem(KEYS.suppliers) == null){\n        localStorage.setItem(KEYS.suppliers, JSON.stringify([]))\n    }\n    return JSON.parse(localStorage.getItem(KEYS.suppliers));\n}\n\nexport async function getAllSuppliersAPI(setRecords){\n    // await axios.get('http://localhost:8080/api/v1/supplier/all')\n    //     .then((function (response){\n    //         console.log(\"response.data.data\", response.data.data)\n    //         setRecords(response.data.data)\n    //         // return list;\n    //     }))\n}\n",["193","194"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/DatePicker.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/Button.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/useTable.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Popup.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/ActionButton.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Notification.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/ConfirmDialog.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/SupplierForm.js",["195","196","197","198"],"import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    supName: '',\n    address1:'',\n    address2:'',\n    address3:'',\n    email:'',\n    contact:'',\n    gender:'male',\n    departmentId:'',\n}\n\nexport default function SupplierForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('supName' in fieldValues) {\n            temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        }\n        if('contact' in fieldValues) {\n            temp.contact = fieldValues.contact.length == 10 ? \"\" : \"This field is required\"\n        }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"supName\"\n                        label=\"Supplier Name\"\n                        value={values.supName}\n                        onChange={handleInputChange}\n                        error={errors.supName}\n                    />\n\n                    <Controls.Input\n                        name=\"address1\"\n                        label=\"Address Line 1\"\n                        value={values.address1}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address2\"\n                        label=\"Address Line 2\"\n                        value={values.address2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address3\"\n                        label=\"Address Line 3\"\n                        value={values.address3}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact Number\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                        type='number'\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/customer/Customer.js",["199","200","201","202","203","204","205","206"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/customer/CustomerForm.js",["207","208","209","210"],"import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    firstName: '',\n    lastName: '',\n    address1:'',\n    address2:'',\n    address3:'',\n    email:'',\n    contact:''\n}\n\nexport default function CustomerForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('firstName' in fieldValues) {\n            temp.firstName = fieldValues.firstName ? \"\" : \"This field is required\"\n        }\n        if('contact' in fieldValues) {\n            temp.contact = fieldValues.contact.length == 10 ? \"\" : \"Invalid Contact Number\"\n        }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit} style={{ overflow: \"hidden\" }}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"firstName\"\n                        label=\"First Name\"\n                        value={values.firstName}\n                        onChange={handleInputChange}\n                        error={errors.firstName}\n                    />\n\n                    <Controls.Input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        value={values.lastName}\n                        onChange={handleInputChange}\n                        error={errors.lastName}\n                    />\n\n                    <Controls.Input\n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact Number\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                        type='number'\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    \n                    <Controls.Input\n                        name=\"address1\"\n                        label=\"Address Line 1\"\n                        value={values.address1}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address2\"\n                        label=\"Address Line 2\"\n                        value={values.address2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address3\"\n                        label=\"Address Line 3\"\n                        value={values.address3}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/Loader.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/NavBar.js",["211"],"import React from 'react';\nimport {\n  Nav,\n  NavLink,\n  Bars,\n  NavMenu,\n  NavBtnLink,\n} from './NavBarElements';\n\nexport default function Navbar (props) {\n\n  const {user} = props;\n  \n  return (\n    <>\n      <Nav>\n        {/* <NavLink to='/'> */}\n          {/* <img src={require('../../images/logo.svg')} alt='logo' /> */}\n        {/* </NavLink> */}\n        <Bars />\n        <NavMenu>\n          <h1 style={{color:'white', fontWeight:'bold', marginRight: '100px'}}>Inventory Management System </h1>\n          <NavLink to='/supplier' activeStyle>\n            Suppliers\n          </NavLink>\n          <NavLink to='/customer' activeStyle>\n            Customers\n          </NavLink>\n          <NavLink to='/item' activeStyle>\n            Items\n          </NavLink>\n          <NavLink to='/stock' activeStyle>\n            Stocks\n          </NavLink>\n          <NavLink to='/invoice' activeStyle>\n            Invoices\n          </NavLink>\n          <NavLink to='/user' activeStyle>\n            {\n            user ? user.level == 'admin' ? 'Users' : 'Profile' : null\n            }\n          </NavLink>\n          {/* Second Nav */}\n          <NavBtnLink to='/logout'>Logout</NavBtnLink>\n        </NavMenu>\n        \n      </Nav>\n    </>\n  );\n};\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/NavBarElements.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/Item.js",["212","213","214","215","216","217","218","219","220"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/ItemForm.js",["221","222","223"],"import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    name: '',\n    price:'',\n    quantity: 0,\n    warranty:'',\n}\n\nexport default function ItemForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('name' in fieldValues) {\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\n        }\n        if('price' in fieldValues) {\n            temp.price = fieldValues.price ? \"\" : \"This field is required\"\n        }\n        \n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid \n                container\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                style={{width:'400px'}}\n                >\n                    <Controls.Input\n                        name=\"name\"\n                        label=\"Item Name\"\n                        value={values.name}\n                        onChange={handleInputChange}\n                        error={errors.name}\n                    />\n\n                    <Controls.Input\n                        name=\"price\"\n                        label=\"Item Price\"\n                        value={values.price}\n                        onChange={handleInputChange}\n                        error={errors.price}\n                    />\n\n                    <Controls.Input\n                        name=\"quantity\"\n                        label=\"Item Quantity\"\n                        value={values.quantity}\n                        onChange={handleInputChange} \n                        error={errors.quantity}\n                    />\n\n                    <Controls.Input\n                        name=\"warranty\"\n                        label=\"Item warranty (months)\"\n                        value={values.warranty}\n                        onChange={handleInputChange} \n                        error={errors.warranty}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />  \n\n                    <Controls.Button\n                        style={{marginLeft: 10, marginTop: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            \n            </Grid>\n        </Form>\n    );\n}\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/Stock.js",["224","225","226","227","228","229","230","231","232"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/StockForm.js",["233","234","235"],"import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    stockDate: new Date(),\n    quantity:0,\n    supplierId:'',\n    supplierName:'',\n    itemId:'',\n    itemName:'',\n    // itemId:''\n}\n\nexport default function StockForm(props) {\n\n    const {addOrEdit, recordForEdit, supplierOptions, itemOptions, disabled} = props\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('stockDate' in fieldValues) {\n            temp.stockDate = fieldValues.stockDate ? \"\" : \"This field is required\"\n        }\n        if('quantity' in fieldValues) {\n            temp.quantity = fieldValues.quantity ? \"\" : \"This field is required\"\n        }\n        if('supplierId' in fieldValues) {\n            temp.supplierId = fieldValues.supplierId ? \"\" : \"This field is required\"\n        }\n        if('itemId' in fieldValues) {\n            temp.itemId = fieldValues.itemId ? \"\" : \"This field is required\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.DatePicker\n                        name=\"stockDate\"\n                        label=\"Select Stock Date\"\n                        value={values.stockDate}\n                        onChange={handleInputChange}\n                        error={errors.stockDate}\n                    />\n\n                    <Controls.Input\n                        name=\"quantity\"\n                        label=\"Enter Stock Quantity\"\n                        value={values.quantity}\n                        onChange={handleInputChange}\n                        error={errors.quantity}\n                        disabled={disabled}\n                        type='number'\n                    />\n\n                    <Controls.Select\n                        name=\"supplierId\"\n                        label=\"Select Supplier\"\n                        options={supplierOptions}\n                        value={values.supplierId}\n                        onChange={handleInputChange}\n                        error={errors.supplierId}\n                        disabled={disabled}\n                    />\n\n                    <Controls.Select\n                        name=\"itemId\"\n                        label=\"Select Item\"\n                        options={itemOptions}\n                        value={values.itemId}\n                        onChange={handleInputChange}\n                        error={errors.itemId}\n                        disabled={disabled}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/Invoice.js",["236","237","238","239"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js",["240","241","242","243","244","245","246","247"],"import React, {useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport {Paper, TableBody, TableCell, TableRow} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport useTable from \"../../components/useTable\"\n\nconst initialFValues = {\n    id: 0,\n    customerId: '',\n    customerName: '',\n    itemId:'',\n    itemName:'',\n    quantity:'',\n    amount:'',\n    availableQty:'',\n    userId:'',\n}\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\nconst headCells = [\n    {id: 'itemName', label:'Item Name'},\n    {id: 'quantity', label:'Quantity'},\n    {id: 'amount', label:'Amount'},\n]\n\nexport default function InvoiceForm(props) {\n\n    // const classes = useStyles();\n    const {addOrEdit, addToTable, recordList, customerOptions, itemOptions, itemQty} = props\n    const [disableCustomer, setDisableCustomer] = useState(false);\n    const [disableSubmit, setDisableSubmit] = useState(true);\n    const [filterFn] = useState({fn: items => {return items;}})\n    // console.log('itemQty', itemQty)\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        \n        if(recordList.length == 0){\n            if('customerId' in fieldValues) {\n                temp.customerId = fieldValues.customerId ? \"\" : \"This field is required\"\n            }\n        }\n        if('itemId' in fieldValues) {\n            temp.itemId = fieldValues.itemId ? \"\" : \"This field is required\"\n        }\n        if('quantity' in fieldValues) {\n            temp.quantity = fieldValues.quantity ? \"\" : fieldValues.quantity < 0 ? \"Invalid Quantity\" : \"\"\n        }\n        if('availableQty' in fieldValues) {\n            temp.quantity = values.quantity <= values.availableQty ? \"\" : \"Invalid Quantityy\"\n        }\n        if('amount' in fieldValues) {\n            temp.amount = fieldValues.amount ? \"\" : \"Invalid Amount\"\n        }\n        setErrors({\n            ...temp\n        })\n        \n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(recordList, headCells, filterFn);\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        console.log('recordList', recordList)\n        addOrEdit(recordList, resetForm);\n    }\n\n    const setQty = e => {\n        if(values.itemId){\n            let qty = itemQty.filter( function (i) {\n                return i.id == values.itemId;\n            })[0].quantity;\n\n            values.availableQty = qty;\n        }\n    }\n\n    const setPrice = e => {\n        if(values.itemId && values.quantity && values.quantity > 0) {\n            let price = itemQty.filter( function (i) {\n                return i.id == values.itemId;\n            })[0].price;\n\n            values.amount = values.quantity * price;\n        } \n    }\n\n    const addValue = e =>{\n        if(validate()){\n            addToTable(values, resetForm);\n            setDisableSubmit(false);\n            setDisableCustomer(true);\n        }\n    }\n\n    // useEffect(() =>{\n    //     if(recordForEdit != null){\n    //         setValues({\n    //             ...recordForEdit\n    //         })\n    //     }\n    // }, [recordForEdit])\n    // console.log('values.itemId', values.itemId)\n    return (\n        <Paper>\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={8}>\n                <Controls.Select\n                        name=\"customerId\"\n                        label=\"Select Customer\"\n                        options={customerOptions}\n                        value={recordList.length > 0 ? recordList[0].customerId : values.customerId}\n                        onChange={handleInputChange}\n                        error={errors.customerId}\n                        disabled={disableCustomer}\n                        error={errors.customerId}\n                    />\n\n                    <Controls.Select\n                        name=\"itemId\"\n                        label=\"Select Item\"\n                        options={itemOptions}\n                        value={values.itemId}\n                        onChange={handleInputChange}\n                        error={errors.itemId}\n                        onClick={setQty()}\n                    />\n\n                    <Controls.Input\n                        name=\"availableQty\"\n                        label=\"Available Quantity\"\n                        value={values.availableQty}\n                        onChange={handleInputChange}\n                        type='number'\n                        error={errors.availableQty}\n                        disabled={true}\n                    />\n\n                    <Controls.Input\n                        name=\"quantity\"\n                        label=\"Quantity\"\n                        value={values.quantity}\n                        onChange={handleInputChange}\n                        type='number'\n                        error={errors.quantity}\n                        onClick={setPrice()}\n                    />\n\n                    <Controls.Input\n                        name=\"amount\"\n                        label=\"Amount\"\n                        value={values.amount}\n                        onChange={handleInputChange}\n                        type='number'\n                        error={errors.amount}\n                    />\n                </Grid>\n                \n                <Grid item xs={4}>\n                    <Controls.Button\n                        style={{margin: 10, marginTop:'70px', maxWidth: '60px', minWidth: '100px'}}\n                        text=\"Add\"\n                        onClick={addValue}\n                    />\n                    <Controls.Button\n                        style={{margin: 10}}\n                        color=\"error\"\n                        onClick={handleSubmit}\n                        text=\"Submit\"\n                        disabled={disableSubmit}\n                    />\n\n                    <Controls.Button\n                        style={{margin: 10, maxWidth: '60px', minWidth: '100px'}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n        {recordList.length > 0 ? \n        <TblContainer>\n            <TblHead/>\n            <TableBody>\n                {   \n                    recordsAfterPagingAndSorting().map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.itemName}</TableCell>\n                            <TableCell>{item.quantity}</TableCell>\n                            <TableCell>{item.amount}</TableCell>\n                        </TableRow>)\n                    )\n                }\n            </TableBody>\n            </TblContainer>\n        : null }\n        {recordList.length > 0 ? <TblPagination/> : null }\n        </Paper>\n        \n    );\n}\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/ViewDetail.js",[],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Login/LoginForm.js",["248","249","250","251","252","253","254"],"import React, {useEffect, useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport Popup from \"../../components/Popup\";\nimport {Dialog, DialogContent, DialogTitle, Typography} from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Notification from '../../components/Notification';\nimport Supplier from '../supplier/Supplier';\n\nconst initialFValues = {\n    userName:'',\n    password:'',\n}\n\nexport default function LoginForm(props) {\n\n    const {setLoading, setUser} = props;\n    const [openPopup, setOpenPopup] = useState(true);\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n    // const [userId, setUserId] = useState({});\n    const history = useHistory();\n    \n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('userName' in fieldValues) {\n            temp.userName = fieldValues.userName ? \"\" : \"This field is required\"\n        }\n        if('password' in fieldValues) {\n            temp.password = fieldValues.password ? \"\" : \"This field is required\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n        console.log('values', values)\n        if(validate()) {\n            axios.post('http://localhost:8080/api/v1/login', values)\n            .then(response => {\n                let type;\n                console.log(\"response.data: \", response.data.data);\n                \n                \n                if(response.data.status == 200){\n                    type = 'success';\n                    setUser(response.data.data);\n                    setLoading(false);\n                    setOpenPopup(false)\n                } else{\n                    type = 'error';\n                }\n                              \n                notification(true, response.data.message, type);\n            }).catch(error => {\n                console.log('Something went wrong!', error);\n            });\n        }\n    }\n\n    const notification = (open, message, type) =>{\n        setNotify({\n            isOpen: open,\n            message: message,\n            type: type\n        })\n    }\n    \n    useEffect(() =>{\n        \n        if(!openPopup){\n            // {console.log('useEffect Login')}\n            // console.log('user', userId)\n            history.push(\"/supplier\");\n        }\n    }, [notify])\n\n    return (\n        <>\n            <Dialog open={openPopup}>\n                <DialogTitle>\n                    <div style={{textAlign:'center'}}>\n                        <Typography variant=\"h4\" component=\"div\">\n                            {'Login'}\n                        </Typography>\n                        \n                    </div>\n                </DialogTitle>\n                <DialogContent dividers>\n                <Form onSubmit={handleSubmit}>\n                    <div style={{textAlign:'center'}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={12} >\n                            <Controls.Input\n                                name=\"userName\"\n                                label=\"Enter Username\"\n                                value={values.userName}\n                                onChange={handleInputChange}\n                                error={errors.userName}\n                            />\n\n                            <Controls.Input\n                                name=\"password\"\n                                label=\"Enter Password\"\n                                value={values.password}\n                                onChange={handleInputChange}\n                                error={errors.password}\n                                type={'password'}\n                            />\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                type=\"submit\"\n                                text=\"Submit\"\n                            />\n\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                color=\"inherit\"\n                                text=\"Reset\"\n                                onClick={resetForm}\n                            />\n                        </Grid>\n                        {/* <Grid item xs={6}>\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                type=\"submit\"\n                                text=\"Submit\"\n                            />\n\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                color=\"inherit\"\n                                text=\"Reset\"\n                                onClick={resetForm}\n                            />\n                        </Grid> */}\n                    </Grid>\n                    </div>\n                </Form>\n                </DialogContent>\n            </Dialog>\n\n            <Notification\n                notify={notify}\n                setNotify={setNotify}\n            />\n        </>\n            \n        \n    );\n}\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/User.js",["255","256","257","258","259","260","261","262","263","264"],"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/UserForm.js",["265","266","267","268"],"import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    firstName: '',\n    lastName:'',\n    userName:'',\n    password:'',\n    level:'user',\n    contact:''\n}\n\nconst levelValues = [\n    {id: 'admin', title: 'Admin'},\n    {id: 'user', title: 'User'},\n]\n\nexport default function SupplierForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('firstName' in fieldValues) {\n            temp.firstName = fieldValues.firstName ? \"\" : \"This field is required\"\n        }\n        if('userName' in fieldValues) {\n            temp.userName = fieldValues.userName.length >= 4 ? \"\" : \"Invalid Username\"\n        }\n        if('password' in fieldValues) {\n            temp.password = fieldValues.password.length >= 4 ? \"\" : \"Invalid Password\"\n        }\n        if('contact' in fieldValues) {\n            temp.contact = fieldValues.contact.length == 10 ? \"\" : \"Invalid Contact Number\"\n        }\n        if('level' in fieldValues) {\n            temp.level = fieldValues.level ? \"\" : \"This field is required\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"firstName\"\n                        label=\"First Name\"\n                        value={values.firstName}\n                        onChange={handleInputChange}\n                        error={errors.firstName}\n                    />\n\n                    <Controls.Input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        value={values.lastName}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"userName\"\n                        label=\"UserName (Min: 4 Characters)\"\n                        value={values.userName}\n                        onChange={handleInputChange}\n                        disabled={recordForEdit ? true : false}\n                        error={errors.userName}\n                    />\n\n                    <Controls.Input\n                        name=\"password\"\n                        label=\"Password (Min: 4 Characters)\"\n                        value={values.password}\n                        onChange={handleInputChange}\n                        error={errors.password}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact Number\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                        type='number'\n                    />\n\n                    <Controls.RadioGroup\n                        name=\"level\"\n                        label=\"User Level\"\n                        value={values.level}\n                        onChange={handleInputChange}\n                        items={levelValues}\n                        error={errors.level}\n                    />\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/components/controls/RadioGroup.js",["269"],"import React from 'react';\nimport {FormControl, FormLabel, FormHelperText, Radio, RadioGroup as MuiRadioGroup} from \"@mui/material\";\nimport { FormControlLabel } from '@material-ui/core';\n\nexport default function RadioGroup(props) {\n\n    const{name, label, value , error = null, onChange, items, disabled, ...other} = props\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        (item, index) => (\n                            <FormControlLabel value={item.id} control={<Radio/>} label={item.title}/>\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n            {error && <FormHelperText style={{color:'red'}}>{error}</FormHelperText>}\n        </FormControl>\n        \n    );\n}","/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/enum/urls.js",[],{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":3,"column":8,"nodeType":"276","messageId":"277","endLine":3,"endColumn":16},{"ruleId":"270","replacedBy":"278"},{"ruleId":"272","replacedBy":"279"},{"ruleId":"274","severity":1,"message":"280","line":14,"column":10,"nodeType":"276","messageId":"277","endLine":14,"endColumn":20},{"ruleId":"281","severity":1,"message":"282","line":16,"column":24,"nodeType":"283","messageId":"284","endLine":16,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":16,"column":58,"nodeType":"283","messageId":"284","endLine":16,"endColumn":60},{"ruleId":"281","severity":1,"message":"282","line":64,"column":20,"nodeType":"283","messageId":"284","endLine":64,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":76,"column":8,"nodeType":"287","endLine":76,"endColumn":16,"suggestions":"288"},{"ruleId":"281","severity":1,"message":"282","line":89,"column":33,"nodeType":"283","messageId":"284","endLine":89,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":99,"column":24,"nodeType":"283","messageId":"284","endLine":99,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":105,"column":49,"nodeType":"283","messageId":"284","endLine":105,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":117,"column":49,"nodeType":"283","messageId":"284","endLine":117,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":150,"column":45,"nodeType":"283","messageId":"284","endLine":150,"endColumn":47},{"ruleId":"281","severity":1,"message":"282","line":177,"column":37,"nodeType":"283","messageId":"284","endLine":177,"endColumn":39},{"ruleId":"281","severity":1,"message":"282","line":201,"column":53,"nodeType":"283","messageId":"284","endLine":201,"endColumn":55},{"ruleId":"274","severity":1,"message":"289","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":13},{"ruleId":"274","severity":1,"message":"290","line":2,"column":16,"nodeType":"276","messageId":"277","endLine":2,"endColumn":25},{"ruleId":"274","severity":1,"message":"291","line":2,"column":27,"nodeType":"276","messageId":"277","endLine":2,"endColumn":35},{"ruleId":"270","replacedBy":"292"},{"ruleId":"272","replacedBy":"293"},{"ruleId":"281","severity":1,"message":"282","line":28,"column":55,"nodeType":"283","messageId":"284","endLine":28,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":39,"column":24,"nodeType":"283","messageId":"284","endLine":39,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":40,"column":53,"nodeType":"283","messageId":"284","endLine":40,"endColumn":55},{"ruleId":"285","severity":1,"message":"294","line":67,"column":8,"nodeType":"287","endLine":67,"endColumn":23,"suggestions":"295"},{"ruleId":"281","severity":1,"message":"282","line":65,"column":20,"nodeType":"283","messageId":"284","endLine":65,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":78,"column":8,"nodeType":"287","endLine":78,"endColumn":16,"suggestions":"296"},{"ruleId":"281","severity":1,"message":"282","line":91,"column":33,"nodeType":"283","messageId":"284","endLine":91,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":101,"column":24,"nodeType":"283","messageId":"284","endLine":101,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":107,"column":49,"nodeType":"283","messageId":"284","endLine":107,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":120,"column":49,"nodeType":"283","messageId":"284","endLine":120,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":185,"column":41,"nodeType":"283","messageId":"284","endLine":185,"endColumn":43},{"ruleId":"281","severity":1,"message":"282","line":210,"column":57,"nodeType":"283","messageId":"284","endLine":210,"endColumn":59},{"ruleId":"281","severity":1,"message":"282","line":27,"column":55,"nodeType":"283","messageId":"284","endLine":27,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":38,"column":24,"nodeType":"283","messageId":"284","endLine":38,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":39,"column":53,"nodeType":"283","messageId":"284","endLine":39,"endColumn":55},{"ruleId":"285","severity":1,"message":"294","line":66,"column":8,"nodeType":"287","endLine":66,"endColumn":23,"suggestions":"297"},{"ruleId":"281","severity":1,"message":"282","line":40,"column":31,"nodeType":"283","messageId":"284","endLine":40,"endColumn":33},{"ruleId":"281","severity":1,"message":"282","line":60,"column":20,"nodeType":"283","messageId":"284","endLine":60,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":73,"column":8,"nodeType":"287","endLine":73,"endColumn":16,"suggestions":"298"},{"ruleId":"281","severity":1,"message":"282","line":86,"column":33,"nodeType":"283","messageId":"284","endLine":86,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":97,"column":20,"nodeType":"283","messageId":"284","endLine":97,"endColumn":22},{"ruleId":"281","severity":1,"message":"282","line":101,"column":49,"nodeType":"283","messageId":"284","endLine":101,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":112,"column":49,"nodeType":"283","messageId":"284","endLine":112,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":145,"column":45,"nodeType":"283","messageId":"284","endLine":145,"endColumn":47},{"ruleId":"281","severity":1,"message":"282","line":175,"column":41,"nodeType":"283","messageId":"284","endLine":175,"endColumn":43},{"ruleId":"281","severity":1,"message":"282","line":197,"column":57,"nodeType":"283","messageId":"284","endLine":197,"endColumn":59},{"ruleId":"281","severity":1,"message":"282","line":30,"column":24,"nodeType":"283","messageId":"284","endLine":30,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":31,"column":53,"nodeType":"283","messageId":"284","endLine":31,"endColumn":55},{"ruleId":"285","severity":1,"message":"294","line":58,"column":8,"nodeType":"287","endLine":58,"endColumn":23,"suggestions":"299"},{"ruleId":"274","severity":1,"message":"300","line":6,"column":8,"nodeType":"276","messageId":"277","endLine":6,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":64,"column":20,"nodeType":"283","messageId":"284","endLine":64,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":93,"column":8,"nodeType":"287","endLine":93,"endColumn":16,"suggestions":"301"},{"ruleId":"281","severity":1,"message":"282","line":106,"column":33,"nodeType":"283","messageId":"284","endLine":106,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":118,"column":21,"nodeType":"283","messageId":"284","endLine":118,"endColumn":23},{"ruleId":"281","severity":1,"message":"282","line":122,"column":49,"nodeType":"283","messageId":"284","endLine":122,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":132,"column":49,"nodeType":"283","messageId":"284","endLine":132,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":197,"column":41,"nodeType":"283","messageId":"284","endLine":197,"endColumn":43},{"ruleId":"281","severity":1,"message":"282","line":221,"column":57,"nodeType":"283","messageId":"284","endLine":221,"endColumn":59},{"ruleId":"281","severity":1,"message":"282","line":37,"column":24,"nodeType":"283","messageId":"284","endLine":37,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":38,"column":53,"nodeType":"283","messageId":"284","endLine":38,"endColumn":55},{"ruleId":"285","severity":1,"message":"294","line":65,"column":8,"nodeType":"287","endLine":65,"endColumn":23,"suggestions":"302"},{"ruleId":"285","severity":1,"message":"286","line":104,"column":8,"nodeType":"287","endLine":104,"endColumn":16,"suggestions":"303"},{"ruleId":"281","severity":1,"message":"282","line":117,"column":33,"nodeType":"283","messageId":"284","endLine":117,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":148,"column":31,"nodeType":"283","messageId":"284","endLine":148,"endColumn":33},{"ruleId":"281","severity":1,"message":"282","line":152,"column":28,"nodeType":"283","messageId":"284","endLine":152,"endColumn":30},{"ruleId":"274","severity":1,"message":"304","line":21,"column":7,"nodeType":"276","messageId":"277","endLine":21,"endColumn":16},{"ruleId":"281","severity":1,"message":"282","line":54,"column":30,"nodeType":"283","messageId":"284","endLine":54,"endColumn":32},{"ruleId":"281","severity":1,"message":"282","line":75,"column":24,"nodeType":"283","messageId":"284","endLine":75,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":76,"column":53,"nodeType":"283","messageId":"284","endLine":76,"endColumn":55},{"ruleId":"274","severity":1,"message":"305","line":89,"column":9,"nodeType":"276","messageId":"277","endLine":89,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":104,"column":29,"nodeType":"283","messageId":"284","endLine":104,"endColumn":31},{"ruleId":"281","severity":1,"message":"282","line":114,"column":29,"nodeType":"283","messageId":"284","endLine":114,"endColumn":31},{"ruleId":"306","severity":1,"message":"307","line":150,"column":25,"nodeType":"308","messageId":"309","endLine":150,"endColumn":50},{"ruleId":"274","severity":1,"message":"310","line":5,"column":8,"nodeType":"276","messageId":"277","endLine":5,"endColumn":13},{"ruleId":"274","severity":1,"message":"311","line":10,"column":8,"nodeType":"276","messageId":"277","endLine":10,"endColumn":16},{"ruleId":"281","severity":1,"message":"282","line":36,"column":24,"nodeType":"283","messageId":"284","endLine":36,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":37,"column":53,"nodeType":"283","messageId":"284","endLine":37,"endColumn":55},{"ruleId":"274","severity":1,"message":"305","line":43,"column":9,"nodeType":"276","messageId":"277","endLine":43,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":60,"column":41,"nodeType":"283","messageId":"284","endLine":60,"endColumn":43},{"ruleId":"285","severity":1,"message":"312","line":91,"column":8,"nodeType":"287","endLine":91,"endColumn":16,"suggestions":"313"},{"ruleId":"281","severity":1,"message":"282","line":70,"column":23,"nodeType":"283","messageId":"284","endLine":70,"endColumn":25},{"ruleId":"285","severity":1,"message":"314","line":87,"column":8,"nodeType":"287","endLine":87,"endColumn":16,"suggestions":"315"},{"ruleId":"281","severity":1,"message":"282","line":100,"column":33,"nodeType":"283","messageId":"284","endLine":100,"endColumn":35},{"ruleId":"281","severity":1,"message":"282","line":111,"column":20,"nodeType":"283","messageId":"284","endLine":111,"endColumn":22},{"ruleId":"281","severity":1,"message":"282","line":118,"column":49,"nodeType":"283","messageId":"284","endLine":118,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":131,"column":49,"nodeType":"283","messageId":"284","endLine":131,"endColumn":51},{"ruleId":"281","severity":1,"message":"282","line":165,"column":45,"nodeType":"283","messageId":"284","endLine":165,"endColumn":47},{"ruleId":"281","severity":1,"message":"282","line":177,"column":38,"nodeType":"283","messageId":"284","endLine":177,"endColumn":40},{"ruleId":"281","severity":1,"message":"282","line":181,"column":29,"nodeType":"283","messageId":"284","endLine":181,"endColumn":31},{"ruleId":"281","severity":1,"message":"282","line":235,"column":61,"nodeType":"283","messageId":"284","endLine":235,"endColumn":63},{"ruleId":"281","severity":1,"message":"282","line":37,"column":55,"nodeType":"283","messageId":"284","endLine":37,"endColumn":57},{"ruleId":"281","severity":1,"message":"282","line":45,"column":24,"nodeType":"283","messageId":"284","endLine":45,"endColumn":26},{"ruleId":"281","severity":1,"message":"282","line":46,"column":53,"nodeType":"283","messageId":"284","endLine":46,"endColumn":55},{"ruleId":"285","severity":1,"message":"294","line":73,"column":8,"nodeType":"287","endLine":73,"endColumn":23,"suggestions":"316"},{"ruleId":"274","severity":1,"message":"317","line":7,"column":76,"nodeType":"276","messageId":"277","endLine":7,"endColumn":81},"no-native-reassign",["318"],"no-negated-in-lhs",["319"],"no-unused-vars","'SideMenu' is defined but never used.","Identifier","unusedVar",["318"],["319"],"'useHistory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.","ArrayExpression",["320"],"'React' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["318"],["319"],"React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["321"],["322"],["323"],["324"],["325"],"'DeleteIcon' is defined but never used.",["326"],["327"],["328"],"'useStyles' is assigned a value but never used.","'setValues' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Popup' is defined but never used.","'Supplier' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'openPopup'. Either include them or remove the dependency array.",["329"],"React Hook useEffect has missing dependencies: 'setLoading', 'user.id', and 'user.level'. Either include them or remove the dependency array.",["330"],["331"],"'other' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"332","fix":"336"},{"desc":"334","fix":"337"},{"desc":"332","fix":"338"},{"desc":"334","fix":"339"},{"desc":"332","fix":"340"},{"desc":"334","fix":"341"},{"desc":"332","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"334","fix":"347"},"Update the dependencies array to be: [notify, setLoading]",{"range":"348","text":"349"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"350","text":"351"},{"range":"352","text":"349"},{"range":"353","text":"351"},{"range":"354","text":"349"},{"range":"355","text":"351"},{"range":"356","text":"349"},{"range":"357","text":"351"},{"range":"358","text":"349"},"Update the dependencies array to be: [history, notify, openPopup]",{"range":"359","text":"360"},"Update the dependencies array to be: [notify, setLoading, user.id, user.level]",{"range":"361","text":"362"},{"range":"363","text":"351"},[2961,2969],"[notify, setLoading]",[1735,1750],"[recordForEdit, setValues]",[3025,3033],[1718,1733],[2703,2711],[1340,1355],[3557,3565],[1727,1742],[4003,4011],[2791,2799],"[history, notify, openPopup]",[3347,3355],"[notify, setLoading, user.id, user.level]",[1901,1916]]