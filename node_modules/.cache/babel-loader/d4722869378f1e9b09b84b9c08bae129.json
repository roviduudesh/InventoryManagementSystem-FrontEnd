{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/Invoice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport { ModeEditOutlined } from \"@mui/icons-material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Search from \"@mui/icons-material/Search\";\nimport AddIcon from '@mui/icons-material/Add';\nimport Popup from \"../../components/Popup\";\nimport { makeStyles } from \"@mui/styles\";\nimport { InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@mui/material\";\nimport moment from 'moment';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport useTable from \"../../components/useTable\";\nimport Controls from \"../../components/controls/Controls\";\nimport Notification from '../../components/Notification';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport InvoiceForm from \"./InvoiceForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Loader from \"../../components/Loader\";\nimport ViewDetail from './ViewDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n}));\nconst headCells = [{\n  id: 'orderId',\n  label: 'Invoice'\n}, {\n  id: 'orderDate',\n  label: 'Invoice Date'\n}, {\n  id: 'customerName',\n  label: 'Customer Name'\n}, {\n  id: 'amount',\n  label: 'Total Amount'\n}, {\n  id: 'actions',\n  label: 'View Details',\n  disableSorting: true\n}];\nexport default function Invoice(props) {\n  _s();\n\n  const {\n    loading,\n    setLoading\n  } = props;\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [recordForView, setRecordForView] = useState(null);\n  const [recordList, setRecordList] = useState([{}]);\n  const classes = useStyles();\n  const [records, setRecords] = useState([]);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopupDetail, setOpenPopupDetail] = useState(false);\n  const [openPopupAdd, setOpenPopupAdd] = useState(false);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const [itemOptions, setItemOptions] = useState([]);\n  const [customerOptions, setCustomerOptions] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    axios.get('http://localhost:8080/api/v1/customer/customer_id_name').then(function (response) {\n      console.log(\"customer\", response.data.data);\n      setCustomerOptions(response.data.data);\n      setLoading(false);\n    });\n    setLoading(true);\n    axios.get('http://localhost:8080/api/v1/item/item_id_name').then(function (response) {\n      console.log(\"setItemOptions\", response.data.data);\n      setItemOptions(response.data.data);\n      setLoading(false);\n    });\n    setLoading(true);\n    console.log('useEffect');\n    axios.get('http://localhost:8080/api/v1/order/all').then(function (response) {\n      console.log(\"response.data\", response.data);\n      setRecords(response.data.data);\n      setLoading(false); // return list;\n    });\n  }, [notify]);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value == \"\") return items;else return items.filter(x => x.supName.toLowerCase().includes(target.value.toLowerCase()));\n      }\n    });\n  };\n\n  const addOrEdit = (supplier, resetForm) => {\n    if (supplier.id == 0) {\n      console.log('supplier', supplier); // axios.post('http://localhost:8080/api/v1/supplier', supplier)\n      // .then(response => {\n      //     console.log(\"Status: \", response.status);\n      //     console.log(\"Message: \", response);\n      //     setLoading(false);\n      //     notification(true, response.data.message, 'success');\n      // }).catch(error => {\n      //     console.log('Something went wrong!', error);\n      // });\n    }\n\n    resetForm();\n    setRecordForEdit(null); // setOpenPopupAdd(false);\n  };\n\n  const addToTable = (value, resetForm) => {\n    let cusName = customerOptions.filter(function (cus) {\n      return cus.id == value.customerId;\n    })[0].name;\n    let itemName = itemOptions.filter(function (item) {\n      return item.id == value.itemId;\n    })[0].name;\n    value.customerName = cusName;\n    value.itemName = itemName;\n    const newList = recordList.push({\n      value\n    });\n    setRecordList(newList);\n    console.log('values', value);\n    console.log('recordList', recordList);\n  };\n\n  const notification = (open, message, type) => {\n    console.log('AAAAAAAA');\n    setNotify({\n      isOpen: open,\n      message: message,\n      type: type\n    });\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item); // setOpenPopup(true);\n  };\n\n  const openViewDetail = item => {\n    console.log('item', item.orderItemList);\n    setRecordForView(item.orderItemList);\n    setOpenPopupDetail(true);\n  };\n\n  const onDelete = id => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    setLoading(true); // supplierService.deleteSupplier(id);\n    // setRecords(supplierService.getAllSuppliers());\n\n    axios.delete('http://localhost:8080/api/v1/supplier/' + id).then(response => {\n      // setLoading(false);\n      console.log(\"delete: \", response);\n      setLoading(false);\n      notification(true, response.data.message, 'success');\n    }).catch(error => {\n      console.log('Something went wrong!', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Invoice\",\n      subTitle: \"View/ Add / Update / Delete Invoices\",\n      icon: /*#__PURE__*/_jsxDEV(PeopleAltTwoToneIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          className: classes.searchInput,\n          label: \"Search Invoices\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 50\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          className: classes.newButton,\n          text: \"Add New\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 40\n          }, this),\n          onClick: () => {\n            setOpenPopupAdd(true);\n            setRecordForEdit(null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.orderId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: moment(item.orderDate).format('DD/MMM/yyyy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.customerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.totalAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n                style: {\n                  marginRight: 10,\n                  paddingLeft: 20\n                },\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(ViewListIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 60\n                }, this),\n                color: \"primary\",\n                onClick: () => {\n                  openViewDetail(item);\n                },\n                children: /*#__PURE__*/_jsxDEV(ModeEditOutlined, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 41\n            }, this)]\n          }, item.orderId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 38\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Invoice Details\",\n      openPopup: openPopupDetail,\n      setOpenPopup: setOpenPopupDetail,\n      children: /*#__PURE__*/_jsxDEV(ViewDetail, {\n        recordForView: recordForView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Invoice Form\",\n      openPopup: openPopupAdd,\n      setOpenPopup: setOpenPopupAdd,\n      children: /*#__PURE__*/_jsxDEV(InvoiceForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit,\n        recordList: recordList,\n        setRecordList: setRecordList,\n        customerOptions: customerOptions,\n        itemOptions: itemOptions,\n        addToTable: addToTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Invoice, \"fZ/IM6ivLzH4BlCLnW1FnJavfr8=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/Invoice.js"],"names":["React","useEffect","useState","axios","CreateIcon","PeopleAltTwoToneIcon","ModeEditOutlined","DeleteIcon","Search","AddIcon","Popup","makeStyles","InputAdornment","Paper","TableBody","TableCell","TableRow","Toolbar","moment","ViewListIcon","useTable","Controls","Notification","ConfirmDialog","InvoiceForm","PageHeader","Loader","ViewDetail","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","headCells","id","label","disableSorting","Invoice","props","loading","setLoading","recordForEdit","setRecordForEdit","recordForView","setRecordForView","recordList","setRecordList","classes","records","setRecords","filterFn","setFilterFn","fn","items","openPopupDetail","setOpenPopupDetail","openPopupAdd","setOpenPopupAdd","notify","setNotify","isOpen","message","type","confirmDialog","setConfirmDialog","title","subTitle","itemOptions","setItemOptions","customerOptions","setCustomerOptions","get","then","response","console","log","data","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","supName","toLowerCase","includes","addOrEdit","supplier","resetForm","addToTable","cusName","cus","customerId","name","itemName","item","itemId","customerName","newList","push","notification","open","openInPopup","openViewDetail","orderItemList","onDelete","delete","catch","error","startAdornment","map","orderId","orderDate","format","totalAmount","marginRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport {ModeEditOutlined} from \"@mui/icons-material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Search from \"@mui/icons-material/Search\"\nimport AddIcon from '@mui/icons-material/Add';\nimport Popup from \"../../components/Popup\";\nimport {makeStyles} from \"@mui/styles\";\nimport {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\nimport moment from 'moment';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport useTable from \"../../components/useTable\"\nimport Controls from \"../../components/controls/Controls\";\nimport Notification from '../../components/Notification'\nimport ConfirmDialog from '../../components/ConfirmDialog'\nimport InvoiceForm from \"./InvoiceForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Loader from \"../../components/Loader\";\nimport ViewDetail from './ViewDetail';\n\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\nconst headCells = [\n    {id: 'orderId', label:'Invoice'},\n    {id: 'orderDate', label:'Invoice Date'},\n    {id: 'customerName', label:'Customer Name'},\n    {id: 'amount', label:'Total Amount'},\n    {id: 'actions', label:'View Details', disableSorting: true}\n]\n\nexport default function Invoice(props) {\n\n    const {loading, setLoading} = props;\n    const [recordForEdit, setRecordForEdit] = useState(null);\n    const [recordForView, setRecordForView] = useState(null);\n    const [recordList, setRecordList] = useState([{}]);\n    const classes = useStyles();\n    const [records, setRecords] = useState([]);\n    const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n    const [openPopupDetail, setOpenPopupDetail] = useState(false);\n    const [openPopupAdd, setOpenPopupAdd] = useState(false);\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n    const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title:'', subTitle:''})\n    const [itemOptions, setItemOptions] = useState([]);\n    const [customerOptions, setCustomerOptions] = useState([]);\n\n    useEffect(() => {\n        setLoading(true);\n        axios.get('http://localhost:8080/api/v1/customer/customer_id_name')\n        .then((function (response){\n            console.log(\"customer\", response.data.data)\n            setCustomerOptions(response.data.data)\n            setLoading(false);\n        }))\n\n        setLoading(true);\n        axios.get('http://localhost:8080/api/v1/item/item_id_name')\n        .then((function (response){\n            console.log(\"setItemOptions\", response.data.data)\n            setItemOptions(response.data.data)\n            setLoading(false);\n        }))\n        setLoading(true);\n        console.log('useEffect')\n        axios.get('http://localhost:8080/api/v1/order/all')\n        .then((function (response){\n            console.log(\"response.data\", response.data)\n            setRecords(response.data.data)\n            setLoading(false);\n            // return list;\n        }))\n    }, [notify]);\n   \n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if(target.value == \"\")\n                    return items;\n                else\n                    return items.filter(x => x.supName.toLowerCase().includes(target.value.toLowerCase()))\n            }\n        })\n    }\n\n    const addOrEdit = (supplier, resetForm) => {\n        if(supplier.id == 0){\n            console.log('supplier', supplier)\n            // axios.post('http://localhost:8080/api/v1/supplier', supplier)\n            // .then(response => {\n            //     console.log(\"Status: \", response.status);\n            //     console.log(\"Message: \", response);\n            //     setLoading(false);\n            //     notification(true, response.data.message, 'success');\n            // }).catch(error => {\n            //     console.log('Something went wrong!', error);\n            // });\n        }\n        resetForm();\n        setRecordForEdit(null);\n        // setOpenPopupAdd(false);\n    }\n\n    const addToTable = (value, resetForm) => {\n        let cusName = customerOptions.filter( function (cus) {\n            return cus.id == value.customerId;\n        })[0].name;\n\n        let itemName = itemOptions.filter( function (item) {\n            return item.id == value.itemId;\n        })[0].name;\n          \n        value.customerName = cusName;\n        value.itemName = itemName;\n\n        const newList = recordList.push({ value });\n \n        setRecordList(newList);\n\n        console.log('values', value)\n        console.log('recordList', recordList)\n    }\n\n    const notification = (open, message, type) =>{\n        console.log('AAAAAAAA')\n        setNotify({\n            isOpen: open,\n            message: message,\n            type: type\n        })\n    }\n    \n    const openInPopup = item =>{\n        setRecordForEdit(item)\n        // setOpenPopup(true);\n    }\n\n    const openViewDetail = item =>{\n        console.log('item', item.orderItemList);\n        setRecordForView(item.orderItemList)\n        setOpenPopupDetail(true);\n    }\n\n    const onDelete = id => {\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        })\n        setLoading(true);\n\n        // supplierService.deleteSupplier(id);\n        // setRecords(supplierService.getAllSuppliers());\n        axios.delete('http://localhost:8080/api/v1/supplier/'+ id)\n        .then(response => {\n            // setLoading(false);\n            console.log(\"delete: \", response);\n            setLoading(false);\n            notification(true, response.data.message, 'success');\n        }).catch(error => {\n            console.log('Something went wrong!', error);\n        });\n    }\n\n    return (\n\n        <>\n            <PageHeader\n                title=\"Invoice\"\n                subTitle=\"View/ Add / Update / Delete Invoices\"\n                icon={<PeopleAltTwoToneIcon fontSize=\"large\"/>}\n            />\n            {/*{loading ? <div>Loading....</div> :*/}\n                <Paper className={classes.pageContent}>\n                    {/*<Paper style={{margin: 'auto', padding: 20, width: '60%'}}>*/}\n\n                    <Toolbar>\n                        <Controls.Input\n                            className={classes.searchInput}\n                            label=\"Search Invoices\"\n                            InputProps={{\n                                startAdornment: (<InputAdornment position='start'>\n                                    <Search/>\n                                </InputAdornment>)\n                            }}\n                            onChange={handleSearch}\n                        />\n                        <Controls.Button\n                            className={classes.newButton}\n                            text=\"Add New\"\n                            variant=\"outlined\"\n                            startIcon={<AddIcon/>}\n                            onClick={() => {\n                                setOpenPopupAdd(true);\n                                setRecordForEdit(null);\n                            }}\n                        />\n                    </Toolbar>\n                    <TblContainer>\n                        <TblHead/>\n                        <TableBody>\n                            {\n                                recordsAfterPagingAndSorting().map(item =>\n                                    (<TableRow key={item.orderId}>\n                                        <TableCell>{item.orderId}</TableCell>\n                                        <TableCell>{moment(item.orderDate).format('DD/MMM/yyyy')}</TableCell>\n                                        <TableCell>{item.customerName}</TableCell>\n                                        <TableCell>{item.totalAmount}</TableCell>\n                                        <TableCell>\n                                            {/*Update data*/}\n                                            <Controls.Button\n                                                style={{marginRight: 10, paddingLeft: 20}}\n                                                size=\"small\"\n                                                startIcon={<ViewListIcon/>}\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    openViewDetail(item)\n                                                }}\n                                            >\n                                                <ModeEditOutlined fontSize=\"small\"/>\n                                            </Controls.Button>\n\n                                            {/*Delete data*/}\n                                            {/* <Controls.Button\n                                                style={{marginRight: 10, paddingLeft: 20}}\n                                                size=\"small\"\n                                                startIcon={<DeleteIcon/>}\n                                                color=\"error\"\n                                                onClick={() => {\n                                                    setConfirmDialog({\n                                                        isOpen: true,\n                                                        title: 'Are you sure to delete this record ?',\n                                                        subTitle: \"You can' t undo this operation\",\n                                                        onConfirm: () => {\n                                                            onDelete(item.id)\n                                                        }\n                                                    })\n                                                }}>\n                                                <DeleteIcon fontSize=\"small\"/>\n                                            </Controls.Button> */}\n                                        </TableCell>\n                                    </TableRow>)\n                                )\n                            }\n                        </TableBody>\n                    </TblContainer>\n                    <TblPagination/>\n                </Paper>\n            {/*}*/}\n\n            <Loader/>\n\n            <Popup\n                title=\"Invoice Details\"\n                openPopup={openPopupDetail}\n                setOpenPopup={setOpenPopupDetail}\n            >\n                <ViewDetail\n                    recordForView={recordForView}\n                />\n            </Popup>\n\n            <Popup\n                title=\"Invoice Form\"\n                openPopup={openPopupAdd}\n                setOpenPopup={setOpenPopupAdd}\n            >\n                <InvoiceForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit}\n                    recordList={recordList}\n                    setRecordList={setRecordList}\n                    customerOptions={customerOptions}\n                    itemOptions={itemOptions}\n                    addToTable={addToTable}\n                />                \n            </Popup>\n\n            <Notification\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <ConfirmDialog\n                confirmDialog={confirmDialog}\n                setConfirmDialog={setConfirmDialog}\n            />\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}