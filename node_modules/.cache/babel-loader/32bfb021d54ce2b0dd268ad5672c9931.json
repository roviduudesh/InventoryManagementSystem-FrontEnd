{"ast":null,"code":"import axios from \"axios\";\nconst KEYS = {\n  suppliers: 'suppliers',\n  supplierId: 'supplierId'\n};\nexport const getDepartmentCollection = () => [{\n  id: '1',\n  title: 'Development'\n}, {\n  id: '2',\n  title: 'Marketing'\n}, {\n  id: '3',\n  title: 'IT'\n}, {\n  id: '4',\n  title: 'Accounting'\n}, {\n  id: '5',\n  title: 'HR'\n}, {\n  id: '6',\n  title: 'Finance'\n}];\nexport function insertSupplier(data) {\n  let suppliers = getAllSuppliers();\n  data['id'] = generateSupplierId();\n  suppliers.push(data);\n  localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers));\n}\nexport function updateSupplier(data) {\n  let suppliers = getAllSuppliers();\n  let recordIndex = suppliers.findIndex(x => x.id == data.id);\n  suppliers[recordIndex] = { ...data\n  };\n  localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers));\n}\nexport function deleteSupplier(id) {\n  let suppliers = getAllSuppliers();\n  suppliers = suppliers.filter(x => x.id != id);\n  localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers));\n}\nexport function generateSupplierId() {\n  if (localStorage.getItem(KEYS.supplierId) == null) {\n    localStorage.setItem(KEYS.supplierId, '0');\n  }\n\n  var id = parseInt(localStorage.getItem(KEYS.supplierId));\n  localStorage.setItem(KEYS.supplierId, (++id).toString());\n  return id;\n}\nexport function getAllSuppliers() {\n  if (localStorage.getItem(KEYS.suppliers) == null) {\n    localStorage.setItem(KEYS.suppliers, JSON.stringify([]));\n  }\n\n  return JSON.parse(localStorage.getItem(KEYS.suppliers));\n}\nexport async function getAllSuppliersAPI(setLoading) {\n  let list = {};\n  await axios.get('http://localhost:8080/api/v1/supplier/all').then(function (response) {\n    // console.log(response.data.data)\n    list = response.data.data;\n    setLoading(false);\n    return list;\n  }); // console.log(list)\n}\nexport async function getAll(props) {\n  const {\n    loading,\n    setLoading\n  } = props;\n  let list = {};\n  await axios.get('http://localhost:8080/api/v1/supplier/all').then(function (response) {\n    // console.log(response.data.data)\n    list = response.data.data;\n  });\n  console.log(list);\n  return list;\n}","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/services/supplierService.js"],"names":["axios","KEYS","suppliers","supplierId","getDepartmentCollection","id","title","insertSupplier","data","getAllSuppliers","generateSupplierId","push","localStorage","setItem","JSON","stringify","updateSupplier","recordIndex","findIndex","x","deleteSupplier","filter","getItem","parseInt","toString","parse","getAllSuppliersAPI","setLoading","list","get","then","response","getAll","props","loading","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst KEYS ={\n    suppliers: 'suppliers',\n    supplierId: 'supplierId'\n}\n\nexport const getDepartmentCollection = () => ([\n    {id: '1', title:'Development'},\n    {id: '2', title:'Marketing'},\n    {id: '3', title:'IT'},\n    {id: '4', title:'Accounting'},\n    {id: '5', title:'HR'},\n    {id: '6', title:'Finance'}\n])\n\nexport function insertSupplier(data){\n    let suppliers = getAllSuppliers();\n    data['id'] = generateSupplierId();\n    suppliers.push(data);\n    localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n}\n\nexport function updateSupplier(data){\n    let suppliers = getAllSuppliers();\n    let recordIndex = suppliers.findIndex(x => x.id == data.id);\n    suppliers[recordIndex] = { ...data}\n    localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n}\n\nexport function deleteSupplier(id){\n    let suppliers = getAllSuppliers();\n    suppliers = suppliers.filter(x => x.id != id)\n    localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n}\n\nexport function generateSupplierId(){\n    if(localStorage.getItem(KEYS.supplierId) == null){\n        localStorage.setItem(KEYS.supplierId, '0')\n    }\n    var id = parseInt(localStorage.getItem(KEYS.supplierId))\n    localStorage.setItem(KEYS.supplierId, (++id).toString())\n    return id;\n}\n\nexport function getAllSuppliers(){\n    if(localStorage.getItem(KEYS.suppliers) == null){\n        localStorage.setItem(KEYS.suppliers, JSON.stringify([]))\n    }\n    return JSON.parse(localStorage.getItem(KEYS.suppliers));\n}\n\nexport async function getAllSuppliersAPI(setLoading){\n    let list = {};\n    await axios.get('http://localhost:8080/api/v1/supplier/all')\n        .then((function (response){\n            // console.log(response.data.data)\n            list =  response.data.data;\n            setLoading(false);\n            return list;\n        }))\n    // console.log(list)\n\n}\n\nexport async function getAll(props){\n    const{loading, setLoading} = props;\n    let list = {};\n    await axios.get('http://localhost:8080/api/v1/supplier/all')\n        .then((function (response){\n            // console.log(response.data.data)\n            list =  response.data.data;\n        }))\n    console.log(list)\n    return list;\n}"]},"metadata":{},"sourceType":"module"}