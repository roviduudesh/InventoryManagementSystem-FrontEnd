{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport Popup from \"../../components/Popup\";\nimport { Dialog, DialogContent, DialogTitle, Typography } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  userName: '',\n  password: ''\n};\nexport default function LoginForm(props) {\n  _s();\n\n  const [openPopup, setOpenPopup] = useState(true);\n  const history = useHistory();\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('supName' in fieldValues) {\n      temp.supName = fieldValues.supName ? \"\" : \"This field is required\";\n    }\n\n    if ('contact' in fieldValues) {\n      temp.contact = fieldValues.contact.length == 10 ? \"\" : \"This field is required\";\n    }\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"AaaaaAAAA\");\n    setOpenPopup(false);\n    history.push(\"/supplier\");\n\n    if (validate()) {// addOrEdit(values, resetForm);\n    }\n  }; // useEffect(() =>{\n  //     if(recordForEdit != null){\n  //         setValues({\n  //             ...recordForEdit\n  //         })\n  //     }\n  // }, [recordForEdit])\n\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/supplier\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 1\n  }, this) // <Dialog open={openPopup}>\n  //     <DialogTitle>\n  //         <div style={{textAlign:'center'}}>\n  //             <Typography variant=\"h4\" component=\"div\">\n  //                 {'Login'}\n  //             </Typography>\n  //         </div>\n  //     </DialogTitle>\n  //     <DialogContent dividers>\n  //     <Form onSubmit={handleSubmit}>\n  //         <div style={{textAlign:'center'}}>\n  //         <Grid container direction=\"row\">\n  //             <Grid item xs={12} >\n  //                 <Controls.Input\n  //                     name=\"userName\"\n  //                     label=\"Enter Username\"\n  //                     value={values.userName}\n  //                     onChange={handleInputChange}\n  //                     error={errors.userName}\n  //                 />\n  //                 <Controls.Input\n  //                     name=\"password\"\n  //                     label=\"Enter Password\"\n  //                     value={values.password}\n  //                     onChange={handleInputChange}\n  //                     error={errors.password}\n  //                 />\n  //                 <Controls.Button\n  //                     style={{marginLeft: 10}}\n  //                     type=\"submit\"\n  //                     text=\"Submit\"\n  //                 />\n  //                 <Controls.Button\n  //                     style={{marginLeft: 10}}\n  //                     color=\"inherit\"\n  //                     text=\"Reset\"\n  //                     onClick={resetForm}\n  //                 />\n  //             </Grid>\n  //             {/* <Grid item xs={6}>\n  //                 <Controls.Button\n  //                     style={{marginLeft: 10}}\n  //                     type=\"submit\"\n  //                     text=\"Submit\"\n  //                 />\n  //                 <Controls.Button\n  //                     style={{marginLeft: 10}}\n  //                     color=\"inherit\"\n  //                     text=\"Reset\"\n  //                     onClick={resetForm}\n  //                 />\n  //             </Grid> */}\n  //         </Grid>\n  //         </div>\n  //     </Form>\n  //     </DialogContent>\n  // </Dialog>\n  ;\n}\n\n_s(LoginForm, \"0oYSxh1H1ciZw+dFi/l4c2wdIIk=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Login/LoginForm.js"],"names":["React","useEffect","useState","Grid","useForm","Form","Controls","Popup","Dialog","DialogContent","DialogTitle","Typography","useHistory","initialFValues","userName","password","LoginForm","props","openPopup","setOpenPopup","history","validate","fieldValues","values","temp","errors","supName","contact","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","console","log","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAAQC,MAAR,EAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,QAA6D,eAA7D;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAC,EADU;AAEnBC,EAAAA,QAAQ,EAAC;AAFU,CAAvB;AAKA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAErC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMkB,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,QAAQ,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACvC,QAAIC,IAAI,GAAG,EAAC,GAAGC;AAAJ,KAAX;;AACA,QAAG,aAAaH,WAAhB,EAA6B;AACzBE,MAAAA,IAAI,CAACE,OAAL,GAAeJ,WAAW,CAACI,OAAZ,GAAsB,EAAtB,GAA2B,wBAA1C;AACH;;AACD,QAAG,aAAaJ,WAAhB,EAA6B;AACzBE,MAAAA,IAAI,CAACG,OAAL,GAAeL,WAAW,CAACK,OAAZ,CAAoBC,MAApB,IAA8B,EAA9B,GAAmC,EAAnC,GAAwC,wBAAvD;AACH;;AACDC,IAAAA,SAAS,CAAC,EACN,GAAGL;AADG,KAAD,CAAT;;AAGA,QAAGF,WAAW,IAAIC,MAAlB,EAA0B;AACtB,aAAOO,MAAM,CAACP,MAAP,CAAcC,IAAd,EAAoBO,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACH;AACJ,GAdD;;AAgBA,QAAM;AACFT,IAAAA,MADE;AAEFU,IAAAA,SAFE;AAGFR,IAAAA,MAHE;AAIFI,IAAAA,SAJE;AAKFK,IAAAA,iBALE;AAMFC,IAAAA;AANE,MAOF/B,OAAO,CAACS,cAAD,EAAiB,IAAjB,EAAuBQ,QAAvB,CAPX;;AASA,QAAMe,YAAY,GAAGC,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACArB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,IAAAA,OAAO,CAACqB,IAAR,CAAa,WAAb;;AACQ,QAAGpB,QAAQ,EAAX,EAAe,CACX;AACH;AACJ,GARD,CA9BqC,CAwCrC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACJ,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADI,CAEI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DJ;AAoEH;;GApHuBL,S;UAGJJ,U,EAyBZR,O;;;KA5BgBY,S","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport Popup from \"../../components/Popup\";\nimport {Dialog, DialogContent, DialogTitle, Typography} from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialFValues = {\n    userName:'',\n    password:'',\n}\n\nexport default function LoginForm(props) {\n\n    const [openPopup, setOpenPopup] = useState(true);\n    const history = useHistory();\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('supName' in fieldValues) {\n            temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        }\n        if('contact' in fieldValues) {\n            temp.contact = fieldValues.contact.length == 10 ? \"\" : \"This field is required\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\nconsole.log(\"AaaaaAAAA\")\nsetOpenPopup(false);\nhistory.push(\"/supplier\");\n        if(validate()) {\n            // addOrEdit(values, resetForm);\n        }\n    }\n\n    // useEffect(() =>{\n    //     if(recordForEdit != null){\n    //         setValues({\n    //             ...recordForEdit\n    //         })\n    //     }\n    // }, [recordForEdit])\n\n    return (\n<Redirect to=\"/supplier\"/>\n        // <Dialog open={openPopup}>\n        //     <DialogTitle>\n        //         <div style={{textAlign:'center'}}>\n        //             <Typography variant=\"h4\" component=\"div\">\n        //                 {'Login'}\n        //             </Typography>\n                    \n        //         </div>\n        //     </DialogTitle>\n        //     <DialogContent dividers>\n        //     <Form onSubmit={handleSubmit}>\n        //         <div style={{textAlign:'center'}}>\n        //         <Grid container direction=\"row\">\n        //             <Grid item xs={12} >\n        //                 <Controls.Input\n        //                     name=\"userName\"\n        //                     label=\"Enter Username\"\n        //                     value={values.userName}\n        //                     onChange={handleInputChange}\n        //                     error={errors.userName}\n        //                 />\n\n        //                 <Controls.Input\n        //                     name=\"password\"\n        //                     label=\"Enter Password\"\n        //                     value={values.password}\n        //                     onChange={handleInputChange}\n        //                     error={errors.password}\n        //                 />\n        //                 <Controls.Button\n        //                     style={{marginLeft: 10}}\n        //                     type=\"submit\"\n        //                     text=\"Submit\"\n        //                 />\n\n        //                 <Controls.Button\n        //                     style={{marginLeft: 10}}\n        //                     color=\"inherit\"\n        //                     text=\"Reset\"\n        //                     onClick={resetForm}\n        //                 />\n        //             </Grid>\n        //             {/* <Grid item xs={6}>\n        //                 <Controls.Button\n        //                     style={{marginLeft: 10}}\n        //                     type=\"submit\"\n        //                     text=\"Submit\"\n        //                 />\n\n        //                 <Controls.Button\n        //                     style={{marginLeft: 10}}\n        //                     color=\"inherit\"\n        //                     text=\"Reset\"\n        //                     onClick={resetForm}\n        //                 />\n        //             </Grid> */}\n        //         </Grid>\n        //         </div>\n        //     </Form>\n        //     </DialogContent>\n        // </Dialog>\n\n        \n            \n        \n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}