{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  firstName: '',\n  lastName: '',\n  userName: '',\n  password: '',\n  level: ''\n};\nconst levelValues = [{\n  id: 'admin',\n  title: 'Admin'\n}, {\n  id: 'user',\n  title: 'User'\n}];\nexport default function SupplierForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('supName' in fieldValues) {\n      temp.supName = fieldValues.supName ? \"\" : \"This field is required\";\n    }\n\n    if ('contact' in fieldValues) {\n      temp.contact = fieldValues.contact.length == 10 ? \"\" : \"This field is required\";\n    }\n\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(values.email) ? \"\" : \"Email is not valid\";\n    } // if('departmentId' in fieldValues) {\n    //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n    // }\n\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // if(validate()) {\n\n    addOrEdit(values, resetForm); // }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"firstName\",\n          label: \"First Name\",\n          value: values.firstName,\n          onChange: handleInputChange,\n          error: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"lastName\",\n          label: \"Last Name\",\n          value: values.lastName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"userName\",\n          label: \"UserName\",\n          value: values.userName,\n          onChange: handleInputChange,\n          disabled: recordForEdit ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"password\",\n          label: \"Password\",\n          value: values.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          name: \"level\",\n          label: \"User Level\",\n          value: values.level,\n          onChange: handleInputChange,\n          items: levelValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          color: \"inherit\",\n          text: \"Reset\",\n          onClick: resetForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SupplierForm, \"NbybQkXiDLVvw8T/tZ7oN0nTjFE=\", false, function () {\n  return [useForm];\n});\n\n_c = SupplierForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplierForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/UserForm.js"],"names":["React","useEffect","Grid","useForm","Form","Controls","initialFValues","id","firstName","lastName","userName","password","level","levelValues","title","SupplierForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","supName","contact","length","email","test","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    firstName: '',\n    lastName:'',\n    userName:'',\n    password:'',\n    level:'',\n}\n\nconst levelValues = [\n    {id: 'admin', title: 'Admin'},\n    {id: 'user', title: 'User'},\n]\n\nexport default function SupplierForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('supName' in fieldValues) {\n            temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        }\n        if('contact' in fieldValues) {\n            temp.contact = fieldValues.contact.length == 10 ? \"\" : \"This field is required\"\n        }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        // if(validate()) {\n            addOrEdit(values, resetForm);\n        // }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"firstName\"\n                        label=\"First Name\"\n                        value={values.firstName}\n                        onChange={handleInputChange}\n                        error={errors.firstName}\n                    />\n\n                    <Controls.Input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        value={values.lastName}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"userName\"\n                        label=\"UserName\"\n                        value={values.userName}\n                        onChange={handleInputChange}\n                        disabled={recordForEdit ? true : false}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"password\"\n                        label=\"Password\"\n                        value={values.password}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.RadioGroup\n                        name=\"level\"\n                        label=\"User Level\"\n                        value={values.level}\n                        onChange={handleInputChange}\n                        items={levelValues}\n                    />\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}