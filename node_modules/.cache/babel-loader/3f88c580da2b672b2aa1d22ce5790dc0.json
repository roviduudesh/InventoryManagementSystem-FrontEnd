{"ast":null,"code":"// import React, {useEffect, useState} from 'react';\n// import SupplierForm from \"./SupplierForm\";\n// import PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\n// import PageHeader from \"../../components/PageHeader\";\n// import {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\n// import useTable from \"../../components/useTable\"\n// import * as supplierService from \"../../services/supplierService\"\n// import {makeStyles} from \"@mui/styles\";\n// import Controls from \"../../components/controls/Controls\";\n// import Search from \"@mui/icons-material/Search\"\n// import AddIcon from '@mui/icons-material/Add';\n// import Popup from \"../../components/Popup\";\n// import axios from \"axios\";\n// import {getAllSuppliersAPI} from \"../../services/supplierService\";\n// import {ModeEditOutlined} from \"@mui/icons-material\";\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import Notification from '../../components/Notification'\n// import ConfirmDialog from '../../components/ConfirmDialog'\n// import CreateIcon from '@mui/icons-material/Create';\n// import DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n// const useStyles = makeStyles(theme =>({\n//     pageContent: {\n//         margin: 20,\n//         padding: 20\n//     },\n//     searchInput:{\n//         width:'75%'\n//     },\n//     newButton:{\n//         position: 'absolute',\n//         left: 100,\n//         spacing:24\n//     }\n// }));\n// const headCells = [\n//     {id: 'supName', label:'Supplier Name'},\n//     {id: 'address1', label:'Address Line 1'},\n//     {id: 'address2', label:'Address Line 2'},\n//     {id: 'address3', label:'Address Line 3'},\n//     {id: 'email', label:'Email'},\n//     {id: 'contact', label:'Contact Numbers', disableSorting: true},\n//     {id: 'actions', label:'Actions', disableSorting: true}\n// ]\n// export default function Supplier(props) {\n//     // const{loading, setLoading} = props;\n//     const [recordForEdit, setRecordForEdit] = useState(null);\n//     const classes = useStyles();\n//     const [records, setRecords] = useState([]);\n//     const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n//     const [openPopup, setOpenPopup] = useState(false);\n//     const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n//     const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title:'', subTitle:''})\n//     useEffect(() => {\n//         console.log('useEffect')\n//         // supplierService.getAllSuppliersAPI(setRecords);\n//         supplierService.getAllSuppliersAPI(setRecords);\n//     }, [notify]);\n//     const {\n//         TblContainer,\n//         TblHead,\n//         TblPagination,\n//         recordsAfterPagingAndSorting\n//     } = useTable(records, headCells, filterFn);\n//     const handleSearch = e => {\n//         let target = e.target;\n//         setFilterFn({\n//             fn: items => {\n//                 if(target.value == \"\")\n//                     return items;\n//                 else\n//                     return items.filter(x => x.supName.toLowerCase().includes(target.value.toLowerCase()))\n//             }\n//         })\n//     }\n//     const addOrEdit = (supplier, resetForm) => {\n//         if(supplier.id == 0)\n//             supplierService.insertSupplier(supplier);\n//         else\n//             supplierService.updateSupplier(supplier, setNotify);\n//         resetForm();\n//         setRecordForEdit(null);\n//         setOpenPopup(false);\n//         // setRecords(supplierService.getAllSuppliers());\n//         setNotify({\n//             isOpen: true,\n//             message: 'Submitted Successfully',\n//             type: 'success'\n//         })\n//     }\n//     const openInPopup = item =>{\n//         setRecordForEdit(item)\n//         setOpenPopup(true);\n//     }\n//     const onDelete = id => {\n//         setConfirmDialog({\n//             ...confirmDialog,\n//             isOpen: false\n//         })\n//         supplierService.deleteSupplier(id);\n//         // setRecords(supplierService.getAllSuppliers());\n//         setNotify({\n//             isOpen: true,\n//             message: 'Deleted Successfully',\n//             type: 'error'\n//         })\n//     }\n//     return (\n//         <>\n//             <PageHeader\n//                 title=\"Supplier\"\n//                 subTitle=\"View/ Add / Update / Delete Suppliers\"\n//                 icon={<PeopleAltTwoToneIcon fontSize=\"large\"/>}\n//             />\n//             {/*{loading ? <div>Loading....</div> :*/}\n//                 <Paper className={classes.pageContent}>\n//                     {/*<Paper style={{margin: 'auto', padding: 20, width: '60%'}}>*/}\n//                     <Toolbar>\n//                         <Controls.Input\n//                             className={classes.searchInput}\n//                             label=\"Search Suppliers\"\n//                             InputProps={{\n//                                 startAdornment: (<InputAdornment position='start'>\n//                                     <Search/>\n//                                 </InputAdornment>)\n//                             }}\n//                             onChange={handleSearch}\n//                         />\n//                         <Controls.Button\n//                             className={classes.newButton}\n//                             text=\"Add New\"\n//                             variant=\"outlined\"\n//                             startIcon={<AddIcon/>}\n//                             onClick={() => {\n//                                 setOpenPopup(true);\n//                                 setRecordForEdit(null);\n//                             }}\n//                         />\n//                     </Toolbar>\n//                     <TblContainer>\n//                         <TblHead/>\n//                         <TableBody>\n//                             {\n//                                 recordsAfterPagingAndSorting().map(item =>\n//                                     (<TableRow>\n//                                         <TableCell>{item.supName}</TableCell>\n//                                         <TableCell>{item.address1}</TableCell>\n//                                         <TableCell>{item.address2}</TableCell>\n//                                         <TableCell>{item.address3}</TableCell>\n//                                         <TableCell>{item.email}</TableCell>\n//                                         <TableCell>{item.contact}</TableCell>\n//                                         <TableCell>\n//                                             {/*Update data*/}\n//                                             <Controls.Button\n//                                                 style={{marginRight: 10, paddingLeft: 20}}\n//                                                 size=\"small\"\n//                                                 startIcon={<CreateIcon/>}\n//                                                 color=\"primary\"\n//                                                 onClick={() => {\n//                                                     openInPopup(item)\n//                                                 }}\n//                                             >\n//                                                 <ModeEditOutlined fontSize=\"small\"/>\n//                                             </Controls.Button>\n//                                             {/*Delete data*/}\n//                                             <Controls.Button\n//                                                 style={{marginRight: 10, paddingLeft: 20}}\n//                                                 size=\"small\"\n//                                                 startIcon={<DeleteIcon/>}\n//                                                 color=\"error\"\n//                                                 onClick={() => {\n//                                                     setConfirmDialog({\n//                                                         isOpen: true,\n//                                                         title: 'Are you sure to delete this record ?',\n//                                                         subTitle: \"You can' t undo this operation\",\n//                                                         onConfirm: () => {\n//                                                             onDelete(item.id)\n//                                                         }\n//                                                     })\n//                                                 }}>\n//                                                 <DeleteIcon fontSize=\"small\"/>\n//                                             </Controls.Button>\n//                                         </TableCell>\n//                                     </TableRow>)\n//                                 )\n//                             }\n//                         </TableBody>\n//                     </TblContainer>\n//                     <TblPagination/>\n//                 </Paper>\n//             {/*}*/}\n//             <Popup\n//                 title=\"Supplier Form\"\n//                 openPopup={openPopup}\n//                 setOpenPopup={setOpenPopup}\n//             >\n//                 <SupplierForm\n//                     recordForEdit={recordForEdit}\n//                     addOrEdit={addOrEdit}\n//                 />\n//             </Popup>\n//             <Notification\n//                 notify={notify}\n//                 setNotify={setNotify}\n//             />\n//             <ConfirmDialog\n//                 confirmDialog={confirmDialog}\n//                 setConfirmDialog={setConfirmDialog}\n//             />\n//         </>\n//     );\n// }","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/Supplier.js"],"names":[],"mappingssourcesContent":["// import React, {useEffect, useState} from 'react';\n// import SupplierForm from \"./SupplierForm\";\n// import PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\n// import PageHeader from \"../../components/PageHeader\";\n// import {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\n// import useTable from \"../../components/useTable\"\n// import * as supplierService from \"../../services/supplierService\"\n// import {makeStyles} from \"@mui/styles\";\n// import Controls from \"../../components/controls/Controls\";\n// import Search from \"@mui/icons-material/Search\"\n// import AddIcon from '@mui/icons-material/Add';\n// import Popup from \"../../components/Popup\";\n// import axios from \"axios\";\n// import {getAllSuppliersAPI} from \"../../services/supplierService\";\n// import {ModeEditOutlined} from \"@mui/icons-material\";\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import Notification from '../../components/Notification'\n// import ConfirmDialog from '../../components/ConfirmDialog'\n// import CreateIcon from '@mui/icons-material/Create';\n// import DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\n// const useStyles = makeStyles(theme =>({\n//     pageContent: {\n//         margin: 20,\n//         padding: 20\n//     },\n//     searchInput:{\n//         width:'75%'\n//     },\n//     newButton:{\n//         position: 'absolute',\n//         left: 100,\n//         spacing:24\n//     }\n// }));\n\n// const headCells = [\n//     {id: 'supName', label:'Supplier Name'},\n//     {id: 'address1', label:'Address Line 1'},\n//     {id: 'address2', label:'Address Line 2'},\n//     {id: 'address3', label:'Address Line 3'},\n//     {id: 'email', label:'Email'},\n//     {id: 'contact', label:'Contact Numbers', disableSorting: true},\n//     {id: 'actions', label:'Actions', disableSorting: true}\n// ]\n\n// export default function Supplier(props) {\n\n//     // const{loading, setLoading} = props;\n//     const [recordForEdit, setRecordForEdit] = useState(null);\n//     const classes = useStyles();\n//     const [records, setRecords] = useState([]);\n//     const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n//     const [openPopup, setOpenPopup] = useState(false);\n//     const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n//     const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title:'', subTitle:''})\n\n//     useEffect(() => {\n//         console.log('useEffect')\n//         // supplierService.getAllSuppliersAPI(setRecords);\n//         supplierService.getAllSuppliersAPI(setRecords);\n//     }, [notify]);\n   \n\n//     const {\n//         TblContainer,\n//         TblHead,\n//         TblPagination,\n//         recordsAfterPagingAndSorting\n//     } = useTable(records, headCells, filterFn);\n\n//     const handleSearch = e => {\n//         let target = e.target;\n//         setFilterFn({\n//             fn: items => {\n//                 if(target.value == \"\")\n//                     return items;\n//                 else\n//                     return items.filter(x => x.supName.toLowerCase().includes(target.value.toLowerCase()))\n//             }\n//         })\n//     }\n\n//     const addOrEdit = (supplier, resetForm) => {\n//         if(supplier.id == 0)\n//             supplierService.insertSupplier(supplier);\n//         else\n//             supplierService.updateSupplier(supplier, setNotify);\n//         resetForm();\n//         setRecordForEdit(null);\n//         setOpenPopup(false);\n//         // setRecords(supplierService.getAllSuppliers());\n//         setNotify({\n//             isOpen: true,\n//             message: 'Submitted Successfully',\n//             type: 'success'\n//         })\n//     }\n\n//     const openInPopup = item =>{\n//         setRecordForEdit(item)\n//         setOpenPopup(true);\n//     }\n\n//     const onDelete = id => {\n\n//         setConfirmDialog({\n//             ...confirmDialog,\n//             isOpen: false\n//         })\n//         supplierService.deleteSupplier(id);\n//         // setRecords(supplierService.getAllSuppliers());\n//         setNotify({\n//             isOpen: true,\n//             message: 'Deleted Successfully',\n//             type: 'error'\n//         })\n//     }\n\n//     return (\n\n//         <>\n\n//             <PageHeader\n//                 title=\"Supplier\"\n//                 subTitle=\"View/ Add / Update / Delete Suppliers\"\n//                 icon={<PeopleAltTwoToneIcon fontSize=\"large\"/>}\n//             />\n//             {/*{loading ? <div>Loading....</div> :*/}\n//                 <Paper className={classes.pageContent}>\n//                     {/*<Paper style={{margin: 'auto', padding: 20, width: '60%'}}>*/}\n\n//                     <Toolbar>\n//                         <Controls.Input\n//                             className={classes.searchInput}\n//                             label=\"Search Suppliers\"\n//                             InputProps={{\n//                                 startAdornment: (<InputAdornment position='start'>\n//                                     <Search/>\n//                                 </InputAdornment>)\n//                             }}\n//                             onChange={handleSearch}\n//                         />\n//                         <Controls.Button\n//                             className={classes.newButton}\n//                             text=\"Add New\"\n//                             variant=\"outlined\"\n//                             startIcon={<AddIcon/>}\n//                             onClick={() => {\n//                                 setOpenPopup(true);\n//                                 setRecordForEdit(null);\n//                             }}\n//                         />\n//                     </Toolbar>\n//                     <TblContainer>\n//                         <TblHead/>\n//                         <TableBody>\n//                             {\n//                                 recordsAfterPagingAndSorting().map(item =>\n//                                     (<TableRow>\n//                                         <TableCell>{item.supName}</TableCell>\n//                                         <TableCell>{item.address1}</TableCell>\n//                                         <TableCell>{item.address2}</TableCell>\n//                                         <TableCell>{item.address3}</TableCell>\n//                                         <TableCell>{item.email}</TableCell>\n//                                         <TableCell>{item.contact}</TableCell>\n//                                         <TableCell>\n//                                             {/*Update data*/}\n//                                             <Controls.Button\n//                                                 style={{marginRight: 10, paddingLeft: 20}}\n//                                                 size=\"small\"\n//                                                 startIcon={<CreateIcon/>}\n//                                                 color=\"primary\"\n//                                                 onClick={() => {\n//                                                     openInPopup(item)\n//                                                 }}\n//                                             >\n//                                                 <ModeEditOutlined fontSize=\"small\"/>\n//                                             </Controls.Button>\n\n//                                             {/*Delete data*/}\n//                                             <Controls.Button\n//                                                 style={{marginRight: 10, paddingLeft: 20}}\n//                                                 size=\"small\"\n//                                                 startIcon={<DeleteIcon/>}\n//                                                 color=\"error\"\n//                                                 onClick={() => {\n//                                                     setConfirmDialog({\n//                                                         isOpen: true,\n//                                                         title: 'Are you sure to delete this record ?',\n//                                                         subTitle: \"You can' t undo this operation\",\n//                                                         onConfirm: () => {\n//                                                             onDelete(item.id)\n//                                                         }\n//                                                     })\n//                                                 }}>\n//                                                 <DeleteIcon fontSize=\"small\"/>\n//                                             </Controls.Button>\n//                                         </TableCell>\n//                                     </TableRow>)\n//                                 )\n//                             }\n//                         </TableBody>\n//                     </TblContainer>\n//                     <TblPagination/>\n//                 </Paper>\n//             {/*}*/}\n\n//             <Popup\n//                 title=\"Supplier Form\"\n//                 openPopup={openPopup}\n//                 setOpenPopup={setOpenPopup}\n//             >\n//                 <SupplierForm\n//                     recordForEdit={recordForEdit}\n//                     addOrEdit={addOrEdit}\n//                 />\n//             </Popup>\n\n//             <Notification\n//                 notify={notify}\n//                 setNotify={setNotify}\n//             />\n//             <ConfirmDialog\n//                 confirmDialog={confirmDialog}\n//                 setConfirmDialog={setConfirmDialog}\n//             />\n//         </>\n//     );\n// }\n"]},"metadata":{},"sourceType":"module"}