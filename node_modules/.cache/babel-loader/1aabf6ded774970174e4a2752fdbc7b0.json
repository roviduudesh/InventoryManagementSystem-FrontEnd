{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  firstName: '',\n  lastName: '',\n  userName: '',\n  password: '',\n  level: '',\n  contact: ''\n};\nconst levelValues = [{\n  id: 'admin',\n  title: 'Admin'\n}, {\n  id: 'user',\n  title: 'User'\n}];\nexport default function SupplierForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('firstName' in fieldValues) {\n      temp.firstName = fieldValues.firstName ? \"\" : \"This field is required\";\n    }\n\n    if ('contact' in fieldValues) {\n      console.log('fieldValues.contact', fieldValues.contact);\n      temp.contact = fieldValues.contact.length != 10 ? \"\" : \"Invalid Contact Number\";\n    }\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"firstName\",\n          label: \"First Name\",\n          value: values.firstName,\n          onChange: handleInputChange,\n          error: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"lastName\",\n          label: \"Last Name\",\n          value: values.lastName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"userName\",\n          label: \"UserName\",\n          value: values.userName,\n          onChange: handleInputChange,\n          disabled: recordForEdit ? true : false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"password\",\n          label: \"Password\",\n          value: values.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"contact\",\n          label: \"Contact Number\",\n          value: values.contact,\n          onChange: handleInputChange,\n          error: errors.contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          name: \"level\",\n          label: \"User Level\",\n          value: values.level,\n          onChange: handleInputChange,\n          items: levelValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          color: \"inherit\",\n          text: \"Reset\",\n          onClick: resetForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SupplierForm, \"NbybQkXiDLVvw8T/tZ7oN0nTjFE=\", false, function () {\n  return [useForm];\n});\n\n_c = SupplierForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplierForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/user/UserForm.js"],"names":["React","useEffect","Grid","useForm","Form","Controls","initialFValues","id","firstName","lastName","userName","password","level","contact","levelValues","title","SupplierForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","console","log","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    firstName: '',\n    lastName:'',\n    userName:'',\n    password:'',\n    level:'',\n    contact:''\n}\n\nconst levelValues = [\n    {id: 'admin', title: 'Admin'},\n    {id: 'user', title: 'User'},\n]\n\nexport default function SupplierForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('firstName' in fieldValues) {\n            temp.firstName = fieldValues.firstName ? \"\" : \"This field is required\"\n        }\n        if('contact' in fieldValues) {\n            console.log('fieldValues.contact', fieldValues.contact)\n            temp.contact = fieldValues.contact.length != 10 ? \"\" : \"Invalid Contact Number\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"firstName\"\n                        label=\"First Name\"\n                        value={values.firstName}\n                        onChange={handleInputChange}\n                        error={errors.firstName}\n                    />\n\n                    <Controls.Input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        value={values.lastName}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"userName\"\n                        label=\"UserName\"\n                        value={values.userName}\n                        onChange={handleInputChange}\n                        disabled={recordForEdit ? true : false}\n                    />\n\n                    <Controls.Input\n                        name=\"password\"\n                        label=\"Password\"\n                        value={values.password}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact Number\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                    />\n\n                    <Controls.RadioGroup\n                        name=\"level\"\n                        label=\"User Level\"\n                        value={values.level}\n                        onChange={handleInputChange}\n                        items={levelValues}\n                    />\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}