{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  supName: '',\n  address1: '',\n  address2: '',\n  address3: '',\n  email: '',\n  contact: '',\n  gender: 'male',\n  departmentId: ''\n};\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n}));\nconst headCells = [{\n  id: 'itemName',\n  label: 'Item Name'\n}, {\n  id: 'quantity',\n  label: 'Quantity'\n}, {\n  id: 'amount',\n  label: 'Amount'\n}];\nexport default function InvoiceForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n  console.log('recordForEdit', recordForEdit);\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('supName' in fieldValues) {\n      temp.supName = fieldValues.supName ? \"\" : \"This field is required\";\n    } // if('contact' in fieldValues) {\n    //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n    // }\n\n\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(values.email) ? \"\" : \"Email is not valid\";\n    } // if('departmentId' in fieldValues) {\n    //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n    // }\n\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.pageContent,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"supName\",\n            label: \"Supplier Name\",\n            value: values.supName,\n            onChange: handleInputChange,\n            error: errors.supName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"address1\",\n            label: \"Address Line 1\",\n            value: values.address1,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"address2\",\n            label: \"Address Line 2\",\n            value: values.address2,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"address3\",\n            label: \"Address Line 3\",\n            value: values.address3,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"email\",\n            label: \"Email\",\n            value: values.email,\n            onChange: handleInputChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"contact\",\n            label: \"Contact (Number 1, Number 2, ....)\",\n            value: values.contact,\n            onChange: handleInputChange,\n            error: errors.contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            style: {\n              marginLeft: 10\n            },\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            style: {\n              marginLeft: 10\n            },\n            color: \"inherit\",\n            text: \"Reset\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InvoiceForm, \"8IZW+0uGBXdKb5/waMK5wHQ7aBs=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js"],"names":["React","useEffect","Grid","useForm","Form","Controls","InputAdornment","Paper","TableBody","TableCell","TableRow","Toolbar","makeStyles","initialFValues","id","supName","address1","address2","address3","email","contact","gender","departmentId","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","headCells","label","InvoiceForm","props","classes","addOrEdit","recordForEdit","console","log","validate","fieldValues","values","temp","errors","test","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\n\n\nconst initialFValues = {\n    id: 0,\n    supName: '',\n    address1:'',\n    address2:'',\n    address3:'',\n    email:'',\n    contact:'',\n    gender:'male',\n    departmentId:'',\n}\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\nconst headCells = [\n    {id: 'itemName', label:'Item Name'},\n    {id: 'quantity', label:'Quantity'},\n    {id: 'amount', label:'Amount'},\n]\n\nexport default function InvoiceForm(props) {\n    const classes = useStyles();\n    const {addOrEdit, recordForEdit} = props\nconsole.log('recordForEdit', recordForEdit)\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('supName' in fieldValues) {\n            temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        }\n        // if('contact' in fieldValues) {\n        //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n        // }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Paper className={classes.pageContent}>\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"supName\"\n                        label=\"Supplier Name\"\n                        value={values.supName}\n                        onChange={handleInputChange}\n                        error={errors.supName}\n                    />\n\n                    <Controls.Input\n                        name=\"address1\"\n                        label=\"Address Line 1\"\n                        value={values.address1}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address2\"\n                        label=\"Address Line 2\"\n                        value={values.address2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address3\"\n                        label=\"Address Line 3\"\n                        value={values.address3}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact (Number 1, Number 2, ....)\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n</Paper>\n        \n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}