{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/Stock.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport { ModeEditOutlined } from \"@mui/icons-material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Search from \"@mui/icons-material/Search\";\nimport AddIcon from '@mui/icons-material/Add';\nimport Popup from \"../../components/Popup\";\nimport { makeStyles } from \"@mui/styles\";\nimport { InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@mui/material\";\nimport useTable from \"../../components/useTable\";\nimport Controls from \"../../components/controls/Controls\";\nimport Notification from '../../components/Notification';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport StockForm from \"./StockForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Loader from \"../../components/Loader\";\nimport moment from 'moment';\nimport { base, stockApi, supplierApi, itemApi } from '../../enum/urls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n})); // const headCells = [\n//     {id: 'stockDate', label:'Stock Date'},\n//     {id: 'quantity', label:'Stock Quantity'},\n//     {id: 'supplier', label:'Supplier'},\n//     {id: 'item', label:'Item Name'},\n//     {id: 'actions', label:'Actions', disableSorting: true}\n// ]\n\nexport default function Stock(props) {\n  _s();\n\n  const [disabled, setDisabled] = useState(false);\n  const [setLoading, user] = props;\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const classes = useStyles();\n  const [records, setRecords] = useState([]);\n  const [supplierOptions, setSupplierOptions] = useState([]);\n  const [itemOptions, setItemOptions] = useState([]);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const headCells = [{\n    id: 'stockDate',\n    label: 'Stock Date'\n  }, {\n    id: 'quantity',\n    label: 'Stock Quantity'\n  }, {\n    id: 'supplier',\n    label: 'Supplier'\n  }, {\n    id: 'item',\n    label: 'Item Name'\n  }, user.level == 'admin' ? {\n    id: 'actions',\n    label: 'Actions',\n    disableSorting: true\n  } : null];\n  useEffect(() => {\n    console.log('useEffect');\n    setLoading(true);\n    axios.get(base.baseUrl + supplierApi.baseUrl + supplierApi.supplierIdNameList).then(function (response) {\n      // console.log(\"setSupplierOptions\", response.data.data)\n      setSupplierOptions(response.data.data); // setLoading(false);\n    }); // setLoading(true);\n\n    axios.get(base.baseUrl + itemApi.baseUrl + itemApi.itemIdNameList).then(function (response) {\n      // console.log(\"setItemOptions\", response.data.data)\n      setItemOptions(response.data.data); // setLoading(false);\n    }); // setLoading(true);\n\n    axios.get(base.baseUrl + stockApi.baseUrl + stockApi.allstocks).then(function (response) {\n      // console.log(\"response.data.data\", response.data.data)\n      setRecords(response.data.data); // setLoading(false);\n    });\n  }, [notify]);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value == \"\") return items;else {\n          return items.filter(x => moment(x.stockDate).format('DD/MMM/yyyy').toLowerCase().includes(target.value.toLowerCase()));\n        }\n      }\n    });\n  };\n\n  const addOrEdit = (stock, resetForm) => {\n    console.log('stock', stock);\n    setLoading(true);\n\n    if (stock.id == 0) {\n      axios.post(base.baseUrl + stockApi.baseUrl, stock).then(response => {\n        setLoading(false);\n        let type = response.data.status == 200 ? 'success' : 'error';\n        notification(true, response.data.message, type);\n      }).catch(error => {\n        console.log('Something went wrong!', error);\n      });\n    } else {\n      axios.put(base.baseUrl + stockApi.baseUrl + stock.id, stock).then(response => {\n        setLoading(false);\n        let type = response.data.status == 200 ? 'success' : 'error';\n        notification(true, response.data.message, type);\n      }).catch(error => {\n        console.log('Something went wrong!', error);\n      });\n    }\n\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setDisabled(false);\n  };\n\n  const notification = (open, message, type) => {\n    setNotify({\n      isOpen: open,\n      message: message,\n      type: type\n    });\n  };\n\n  const openInPopup = item => {\n    setDisabled(true);\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  }; // const onDelete = id => {\n  //     setConfirmDialog({\n  //         ...confirmDialog,\n  //         isOpen: false\n  //     })\n  //     setLoading(true);\n  //     axios.delete(base.baseUrl + stockApi.baseUrl + id)\n  //     .then(response => {\n  //         setLoading(false);\n  //         let type = response.data.status == 200 ? 'success' : 'error';\n  //         notification(true, response.data.message, type);\n  //     }).catch(error => {\n  //         console.log('Something went wrong!', error);\n  //     });\n  // }\n\n\n  return user.level ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Stock\",\n      subTitle: \"View/ Add / Update / Delete Stocks\",\n      icon: /*#__PURE__*/_jsxDEV(PeopleAltTwoToneIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          className: classes.searchInput,\n          label: \"Search Stocks\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 54\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this), user.level == 'admin' ? /*#__PURE__*/_jsxDEV(Controls.Button, {\n          className: classes.newButton,\n          text: \"Add New\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 44\n          }, this),\n          onClick: () => {\n            setOpenPopup(true);\n            setRecordForEdit(null);\n            setDisabled(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: moment(item.stockDate).format('DD/MMM/yyyy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.supplierName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 45\n            }, this), user.level == 'admin' ? /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n                style: {\n                  marginRight: 10,\n                  paddingLeft: 20\n                },\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 68\n                }, this),\n                color: \"primary\",\n                onClick: () => {\n                  openInPopup(item);\n                },\n                children: /*#__PURE__*/_jsxDEV(ModeEditOutlined, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 49\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 42\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Stock Form\",\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      children: /*#__PURE__*/_jsxDEV(StockForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit,\n        supplierOptions: supplierOptions,\n        itemOptions: itemOptions,\n        setLoading: setLoading,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Not Found !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Stock, \"Od+cEkYrickkra7SMYBnzn2qU30=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = Stock;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stock\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/Stock.js"],"names":["React","useEffect","useState","axios","CreateIcon","PeopleAltTwoToneIcon","ModeEditOutlined","DeleteIcon","Search","AddIcon","Popup","makeStyles","InputAdornment","Paper","TableBody","TableCell","TableRow","Toolbar","useTable","Controls","Notification","ConfirmDialog","StockForm","PageHeader","Loader","moment","base","stockApi","supplierApi","itemApi","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","Stock","props","disabled","setDisabled","setLoading","user","recordForEdit","setRecordForEdit","classes","records","setRecords","supplierOptions","setSupplierOptions","itemOptions","setItemOptions","filterFn","setFilterFn","fn","items","openPopup","setOpenPopup","notify","setNotify","isOpen","message","type","confirmDialog","setConfirmDialog","title","subTitle","headCells","id","label","level","disableSorting","console","log","get","baseUrl","supplierIdNameList","then","response","data","itemIdNameList","allstocks","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","stockDate","format","toLowerCase","includes","addOrEdit","stock","resetForm","post","status","notification","catch","error","put","open","openInPopup","item","startAdornment","map","quantity","supplierName","itemName","marginRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport CreateIcon from '@mui/icons-material/Create';\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport {ModeEditOutlined} from \"@mui/icons-material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Search from \"@mui/icons-material/Search\"\nimport AddIcon from '@mui/icons-material/Add';\nimport Popup from \"../../components/Popup\";\nimport {makeStyles} from \"@mui/styles\";\nimport {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\nimport useTable from \"../../components/useTable\"\nimport Controls from \"../../components/controls/Controls\";\nimport Notification from '../../components/Notification'\nimport ConfirmDialog from '../../components/ConfirmDialog'\nimport StockForm from \"./StockForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Loader from \"../../components/Loader\";\nimport moment from 'moment';\nimport { base, stockApi, supplierApi, itemApi } from '../../enum/urls';\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\n// const headCells = [\n//     {id: 'stockDate', label:'Stock Date'},\n//     {id: 'quantity', label:'Stock Quantity'},\n//     {id: 'supplier', label:'Supplier'},\n//     {id: 'item', label:'Item Name'},\n//     {id: 'actions', label:'Actions', disableSorting: true}\n// ]\n\nexport default function Stock(props) {\n\n    const [disabled, setDisabled] = useState(false);\n    const [setLoading, user] = props;\n    const [recordForEdit, setRecordForEdit] = useState(null);\n    const classes = useStyles();\n    const [records, setRecords] = useState([]);\n    const [supplierOptions, setSupplierOptions] = useState([]);\n    const [itemOptions, setItemOptions] = useState([]);\n    const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n    const [openPopup, setOpenPopup] = useState(false);\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n    const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title:'', subTitle:''})\n\n    const headCells = [\n        {id: 'stockDate', label:'Stock Date'},\n        {id: 'quantity', label:'Stock Quantity'},\n        {id: 'supplier', label:'Supplier'},\n        {id: 'item', label:'Item Name'},\n        user.level == 'admin' ? {id: 'actions', label:'Actions', disableSorting: true} : null\n    ]\n\n    useEffect(() => {\n        console.log('useEffect')\n\n        setLoading(true);\n        axios.get(base.baseUrl + supplierApi.baseUrl + supplierApi.supplierIdNameList)\n        .then((function (response){\n            // console.log(\"setSupplierOptions\", response.data.data)\n            setSupplierOptions(response.data.data)\n            // setLoading(false);\n        }))\n\n        // setLoading(true);\n        axios.get(base.baseUrl + itemApi.baseUrl + itemApi.itemIdNameList)\n        .then((function (response){\n            // console.log(\"setItemOptions\", response.data.data)\n            setItemOptions(response.data.data)\n            // setLoading(false);\n        }))\n\n        // setLoading(true);\n        axios.get(base.baseUrl + stockApi.baseUrl + stockApi.allstocks)\n        .then((function (response){\n            // console.log(\"response.data.data\", response.data.data)\n            setRecords(response.data.data)\n            // setLoading(false);\n        }))\n    }, [notify]);\n   \n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;        \n        setFilterFn({\n            fn: items => {\n                if(target.value == \"\")\n                    return items;\n                else{\n                    return items.filter(x => (moment(x.stockDate).format('DD/MMM/yyyy')).toLowerCase().includes(target.value.toLowerCase()))\n                }\n            }\n        })\n    }\n\n    const addOrEdit = (stock, resetForm) => {\n        console.log('stock', stock)\n        setLoading(true);\n        if(stock.id == 0){\n            axios.post(base.baseUrl + stockApi.baseUrl, stock)\n            .then(response => {\n                setLoading(false);\n                let type = response.data.status == 200 ? 'success' : 'error';\n                notification(true, response.data.message, type);\n            }).catch(error => {\n                console.log('Something went wrong!', error);\n            });\n        }\n        else{\n            axios.put(base.baseUrl + stockApi.baseUrl + stock.id, stock)\n            .then(response => {\n                setLoading(false);\n                let type = response.data.status == 200 ? 'success' : 'error';\n                notification(true, response.data.message, type);\n            }).catch(error => {\n                console.log('Something went wrong!', error);\n            });\n        }\n        resetForm();\n        setRecordForEdit(null);\n        setOpenPopup(false);\n        setDisabled(false);\n    }\n\n    const notification = (open, message, type) =>{\n        setNotify({\n            isOpen: open,\n            message: message,\n            type: type\n        })\n    }\n    \n    const openInPopup = item =>{\n        setDisabled(true);\n        setRecordForEdit(item)\n        setOpenPopup(true);\n    }\n\n    // const onDelete = id => {\n    //     setConfirmDialog({\n    //         ...confirmDialog,\n    //         isOpen: false\n    //     })\n    //     setLoading(true);\n\n    //     axios.delete(base.baseUrl + stockApi.baseUrl + id)\n    //     .then(response => {\n    //         setLoading(false);\n    //         let type = response.data.status == 200 ? 'success' : 'error';\n    //         notification(true, response.data.message, type);\n    //     }).catch(error => {\n    //         console.log('Something went wrong!', error);\n    //     });\n    // }\n\n    return (\n        user.level ?\n            <>\n                <PageHeader\n                    title=\"Stock\"\n                    subTitle=\"View/ Add / Update / Delete Stocks\"\n                    icon={<PeopleAltTwoToneIcon fontSize=\"large\"/>}\n                />\n                    <Paper className={classes.pageContent}>\n                        {/*<Paper style={{margin: 'auto', padding: 20, width: '60%'}}>*/}\n\n                        <Toolbar>\n                            <Controls.Input\n                                className={classes.searchInput}\n                                label=\"Search Stocks\"\n                                InputProps={{\n                                    startAdornment: (<InputAdornment position='start'>\n                                        <Search/>\n                                    </InputAdornment>)\n                                }}\n                                onChange={handleSearch}\n                            />\n                            {user.level == 'admin' ?\n                            <Controls.Button\n                                className={classes.newButton}\n                                text=\"Add New\"\n                                variant=\"outlined\"\n                                startIcon={<AddIcon/>}\n                                onClick={() => {\n                                    setOpenPopup(true);\n                                    setRecordForEdit(null);\n                                    setDisabled(false);\n                                }}\n                            /> : null }\n                        </Toolbar>\n                        <TblContainer>\n                            <TblHead/>\n                            <TableBody>\n                                {\n                                    recordsAfterPagingAndSorting().map(item =>\n                                        (<TableRow key={item.id}>\n                                            <TableCell>{moment(item.stockDate).format('DD/MMM/yyyy')}</TableCell>\n                                            {/* <TableCell>{item.stockDate}</TableCell> */}\n                                            <TableCell>{item.quantity}</TableCell>\n                                            <TableCell>{item.supplierName}</TableCell>\n                                            <TableCell>{item.itemName}</TableCell>\n                                            {user.level == 'admin' ?\n                                                <TableCell>\n                                                    {/*Update data*/}\n                                                    <Controls.Button\n                                                        style={{marginRight: 10, paddingLeft: 20}}\n                                                        size=\"small\"\n                                                        startIcon={<CreateIcon/>}\n                                                        color=\"primary\"\n                                                        onClick={() => {\n                                                            openInPopup(item)\n                                                        }}\n                                                    >\n                                                        <ModeEditOutlined fontSize=\"small\"/>\n                                                    </Controls.Button>\n\n                                                    {/*Delete data*/}\n                                                    {/* <Controls.Button\n                                                        style={{marginRight: 10, paddingLeft: 20}}\n                                                        size=\"small\"\n                                                        startIcon={<DeleteIcon/>}\n                                                        color=\"error\"\n                                                        onClick={() => {\n                                                            setConfirmDialog({\n                                                                isOpen: true,\n                                                                title: 'Are you sure to delete this record ?',\n                                                                subTitle: \"You can' t undo this operation\",\n                                                                onConfirm: () => {\n                                                                    onDelete(item.id)\n                                                                }\n                                                            })\n                                                        }}>\n                                                        <DeleteIcon fontSize=\"small\"/>\n                                                    </Controls.Button> */}\n                                                </TableCell>\n                                            : null }\n                                        </TableRow>)\n                                    )\n                                }\n                            </TableBody>\n                        </TblContainer>\n                        <TblPagination/>\n                    </Paper>\n                {/*}*/}\n\n                <Loader/>\n\n                <Popup\n                    title=\"Stock Form\"\n                    openPopup={openPopup}\n                    setOpenPopup={setOpenPopup}\n                >\n                    <StockForm\n                        recordForEdit={recordForEdit}\n                        addOrEdit={addOrEdit}\n                        supplierOptions={supplierOptions}\n                        itemOptions={itemOptions}\n                        setLoading={setLoading}\n                        disabled={disabled}\n                    />\n                </Popup>\n\n                <Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n                <ConfirmDialog\n                    confirmDialog={confirmDialog}\n                    setConfirmDialog={setConfirmDialog}\n                />\n            </>\n        : <div><h1>User Not Found !!!</h1></div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}