{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/ItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  supName: '',\n  address1: '',\n  address2: '',\n  address3: '',\n  email: '',\n  contact: '',\n  gender: 'male',\n  departmentId: ''\n};\nexport default function ItemForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('supName' in fieldValues) {\n      temp.supName = fieldValues.supName ? \"\" : \"This field is required\";\n    } // if('contact' in fieldValues) {\n    //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n    // }\n\n\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(values.email) ? \"\" : \"Email is not valid\";\n    } // if('departmentId' in fieldValues) {\n    //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n    // }\n\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        style: {\n          width: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"supName\",\n          label: \"Item Name\",\n          value: values.supName,\n          onChange: handleInputChange,\n          error: errors.supName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"address1\",\n          label: \"Item Quantity\",\n          value: values.address1,\n          onChange: handleInputChange,\n          style: {\n            width: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"address2\",\n          label: \"Item Price\",\n          value: values.address2,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"address3\",\n          label: \"Item Warranty\",\n          value: values.address3,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          color: \"inherit\",\n          text: \"Reset\",\n          onClick: resetForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ItemForm, \"NbybQkXiDLVvw8T/tZ7oN0nTjFE=\", false, function () {\n  return [useForm];\n});\n\n_c = ItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/ItemForm.js"],"names":["React","useEffect","Grid","useForm","Form","Controls","initialFValues","id","supName","address1","address2","address3","email","contact","gender","departmentId","ItemForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","width","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    supName: '',\n    address1:'',\n    address2:'',\n    address3:'',\n    email:'',\n    contact:'',\n    gender:'male',\n    departmentId:'',\n}\n\nexport default function ItemForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('supName' in fieldValues) {\n            temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        }\n        // if('contact' in fieldValues) {\n        //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n        // }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid \n                container\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                style={{width:'500px'}}\n                >\n                    <Controls.Input\n                        name=\"supName\"\n                        label=\"Item Name\"\n                        value={values.supName}\n                        onChange={handleInputChange}\n                        error={errors.supName}\n                    />\n\n                    <Controls.Input\n                        name=\"address1\"\n                        label=\"Item Quantity\"\n                        value={values.address1}\n                        onChange={handleInputChange}\n                        style={{width:'50px'}}\n                    />\n\n                    <Controls.Input\n                        name=\"address2\"\n                        label=\"Item Price\"\n                        value={values.address2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address3\"\n                        label=\"Item Warranty\"\n                        value={values.address3}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            \n            </Grid>\n        </Form>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}