{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/SupplierForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport * as supplierService from \"../../services/supplierService\";\nimport axios from \"axios\";\nimport { getAllSuppliers } from \"../../services/supplierService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  supName: '',\n  address1: '',\n  address2: '',\n  address3: '',\n  email: '',\n  contact: '',\n  gender: 'male',\n  departmentId: ''\n};\nexport default function SupplierForm() {\n  _s();\n\n  const [post, setPost] = React.useState(null);\n  axios.get(`http://localhost:8080/api/v1/supplier/all`).then(res => {\n    setPost(res.data.data);\n    console.log('AAAAAAAAAAAAAAAAAAAA', post.id);\n  });\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('supName' in fieldValues) {\n      temp.supName = fieldValues.supName ? \"\" : \"This field is required\";\n    }\n\n    if ('contact' in fieldValues) {\n      temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\";\n    }\n\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(values.email) ? \"\" : \"Email is not valid\";\n    } // if('departmentId' in fieldValues) {\n    //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n    // }\n\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('supplierService.getAllSuppliers()', supplierService.getAllSuppliers());\n\n    if (validate()) {\n      window.alert('AAAA');\n      axios.post('http://localhost:8080/api/v1/supplier', values);\n      resetForm();\n      console.log('values - ', values);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"supName\",\n          label: \"Supplier Name\",\n          value: values.supName,\n          onChange: handleInputChange,\n          error: errors.supName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"address1\",\n          label: \"Address Line 1\",\n          value: values.address1,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"address2\",\n          label: \"Address Line 2\",\n          value: values.address2,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"address3\",\n          label: \"Address Line 3\",\n          value: values.address3,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"email\",\n          label: \"Email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"contact\",\n          label: \"Contact (Number 1, Number 2, ....)\",\n          value: values.contact,\n          onChange: handleInputChange,\n          error: errors.contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          color: \"error\",\n          text: \"Reset\",\n          onClick: resetForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SupplierForm, \"fGVK386Xr3ArM7qcJROB/E33ytU=\", false, function () {\n  return [useForm];\n});\n\n_c = SupplierForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplierForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/SupplierForm.js"],"names":["React","Grid","useForm","Form","Controls","supplierService","axios","getAllSuppliers","initialFValues","id","supName","address1","address2","address3","email","contact","gender","departmentId","SupplierForm","post","setPost","useState","get","then","res","data","console","log","validate","fieldValues","values","temp","errors","length","test","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","window","alert","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport * as supplierService from \"../../services/supplierService\"\nimport axios from \"axios\";\nimport {getAllSuppliers} from \"../../services/supplierService\";\n\nconst initialFValues = {\n    id: 0,\n    supName: '',\n    address1:'',\n    address2:'',\n    address3:'',\n    email:'',\n    contact:'',\n    gender:'male',\n    departmentId:'',\n}\n\nexport default function SupplierForm() {\n\n    const [post, setPost] = React.useState(null);\n\n    axios.get(`http://localhost:8080/api/v1/supplier/all`)\n        .then(res => {\n            setPost(res.data.data);\n            console.log('AAAAAAAAAAAAAAAAAAAA', post.id)\n        })\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('supName' in fieldValues) {\n            temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        }\n        if('contact' in fieldValues) {\n            temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n        }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n        console.log('supplierService.getAllSuppliers()', supplierService.getAllSuppliers());\n        if(validate()) {\n            window.alert('AAAA');\n            axios.post(\n                'http://localhost:8080/api/v1/supplier', values\n            )\n            resetForm();\n            console.log('values - ',values)\n        }\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"supName\"\n                        label=\"Supplier Name\"\n                        value={values.supName}\n                        onChange={handleInputChange}\n                        error={errors.supName}\n                    />\n\n                    <Controls.Input\n                        name=\"address1\"\n                        label=\"Address Line 1\"\n                        value={values.address1}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address2\"\n                        label=\"Address Line 2\"\n                        value={values.address2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address3\"\n                        label=\"Address Line 3\"\n                        value={values.address3}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact (Number 1, Number 2, ....)\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"error\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}