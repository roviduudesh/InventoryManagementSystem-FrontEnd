{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/Invoice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport { ModeEditOutlined } from \"@mui/icons-material\";\nimport Search from \"@mui/icons-material/Search\";\nimport AddIcon from '@mui/icons-material/Add';\nimport Popup from \"../../components/Popup\";\nimport { makeStyles } from \"@mui/styles\";\nimport { InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@mui/material\";\nimport moment from 'moment';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport useTable from \"../../components/useTable\";\nimport Controls from \"../../components/controls/Controls\";\nimport Notification from '../../components/Notification';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport InvoiceForm from \"./InvoiceForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Loader from \"../../components/Loader\";\nimport ViewDetail from './ViewDetail';\nimport { base, customerApi, orderApi, itemApi } from '../../enum/urls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n})); // const headCells = [\n//     {id: 'orderId', label:'Invoice'},\n//     {id: 'orderDate', label:'Invoice Date'},\n//     {id: 'customerName', label:'Customer Name'},\n//     {id: 'amount', label:'Total Amount'},\n//     {id: 'actions', label:'View Details', disableSorting: true}\n// ]\n\nexport default function Invoice(props) {\n  _s();\n\n  const {\n    setLoading,\n    user,\n    loading\n  } = props;\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [recordForView, setRecordForView] = useState(null);\n  const [recordList, setRecordList] = useState([]);\n  const classes = useStyles();\n  const [records, setRecords] = useState([]);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopupDetail, setOpenPopupDetail] = useState(false);\n  const [openPopupAdd, setOpenPopupAdd] = useState(false);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const [itemOptions, setItemOptions] = useState([]);\n  const [itemQty, setItemQty] = useState([]);\n  const [customerOptions, setCustomerOptions] = useState([]);\n  const headCells = [{\n    id: 'orderId',\n    label: 'Invoice'\n  }, {\n    id: 'orderDate',\n    label: 'Invoice Date'\n  }, {\n    id: 'customerName',\n    label: 'Customer Name'\n  }, {\n    id: 'amount',\n    label: 'Total Amount'\n  }, {\n    id: 'actions',\n    label: 'View Details',\n    disableSorting: true\n  }];\n  useEffect(() => {\n    setLoading(true);\n    axios.get(base.baseUrl + customerApi.baseUrl + customerApi.customerIdNameList).then(function (response) {\n      console.log(\"customer\", response.data.data);\n      setCustomerOptions(response.data.data); // setLoading(false);\n    });\n    setLoading(true);\n    axios.get(base.baseUrl + itemApi.baseUrl + itemApi.itemIdNameList).then(function (response) {\n      console.log(\"setItemOptions\", response.data.data);\n      setItemOptions(response.data.data); // setLoading(false);\n    });\n    setLoading(true);\n    axios.get(base.baseUrl + itemApi.baseUrl + itemApi.itemIdQtyList).then(function (response) {\n      console.log(\"setItemQtyOptions\", response.data.data);\n      setItemQty(response.data.data); // setLoading(false);\n    });\n    setLoading(true);\n    console.log('useEffect');\n    axios.get(base.baseUrl + orderApi.baseUrl + orderApi.allOrders).then(function (response) {\n      console.log(\"allOrders\", response.data);\n      setRecords(response.data.data);\n      setLoading(false); // return list;\n    });\n  }, [notify]);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value == \"\") return items;else return items.filter(x => x.orderId.includes(target.value));\n      }\n    });\n  };\n\n  const addOrEdit = (supplier, resetForm) => {\n    setLoading(true);\n    console.log('supplier', supplier);\n    axios.post(base.baseUrl + orderApi.baseUrl, supplier).then(response => {\n      console.log(\"Status: \", response.status);\n      console.log(\"Message: \", response);\n      setLoading(false);\n      notification(true, response.data.message, 'success');\n    }).catch(error => {\n      console.log('Something went wrong!', error);\n    });\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopupAdd(false);\n  };\n\n  const addToTable = (order, resetForm) => {\n    let cusName;\n    console.log('order', order);\n\n    if (order.customerId) {\n      cusName = customerOptions.filter(function (cus) {\n        return cus.id == order.customerId;\n      })[0].name;\n    }\n\n    let itemName = itemOptions.filter(function (item) {\n      return item.id == order.itemId;\n    })[0].name;\n    order.id = recordList.length;\n    order.customerName = cusName;\n    order.itemName = itemName;\n    order.userId = user.id;\n    setRecordList([...recordList, order]);\n    resetForm();\n    console.log('values', order);\n    console.log('recordList', recordList);\n  };\n\n  const notification = (open, message, type) => {\n    console.log('AAAAAAAA');\n    setNotify({\n      isOpen: open,\n      message: message,\n      type: type\n    });\n  }; // const openInPopup = item =>{\n  //     setRecordForEdit(item)\n  //     // setOpenPopup(true);\n  // }\n\n\n  const openViewDetail = item => {\n    console.log('item', item.orderItemList);\n    setRecordForView(item.orderItemList);\n    setOpenPopupDetail(true);\n  }; // const onDelete = id => {\n  //     setConfirmDialog({\n  //         ...confirmDialog,\n  //         isOpen: false\n  //     })\n  //     setLoading(true);\n  //     // supplierService.deleteSupplier(id);\n  //     // setRecords(supplierService.getAllSuppliers());\n  //     axios.delete('http://localhost:8080/api/v1/invoice/'+ id)\n  //     .then(response => {\n  //         // setLoading(false);\n  //         console.log(\"delete: \", response);\n  //         setLoading(false);\n  //         notification(true, response.data.message, 'success');\n  //     }).catch(error => {\n  //         console.log('Something went wrong!', error);\n  //     });\n  // }\n\n\n  return user.level && !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Invoice\",\n      subTitle: \"View/ Add / Update / Delete Invoices\",\n      icon: /*#__PURE__*/_jsxDEV(PeopleAltTwoToneIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          className: classes.searchInput,\n          label: \"Search Invoices\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 50\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          className: classes.newButton,\n          text: \"Add New\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 44\n          }, this),\n          onClick: () => {\n            setOpenPopupAdd(true);\n            setRecordForEdit(null);\n            setRecordList([]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.orderId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: moment(item.orderDate).format('DD/MMM/yyyy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.customerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.totalAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Controls.Button, {\n                style: {\n                  marginRight: 10,\n                  paddingLeft: 20\n                },\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(ViewListIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 60\n                }, this),\n                color: \"primary\",\n                onClick: () => {\n                  openViewDetail(item);\n                },\n                children: /*#__PURE__*/_jsxDEV(ModeEditOutlined, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 41\n            }, this)]\n          }, item.orderId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 38\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Invoice Details\",\n      openPopup: openPopupDetail,\n      setOpenPopup: setOpenPopupDetail,\n      children: /*#__PURE__*/_jsxDEV(ViewDetail, {\n        recordForView: recordForView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Invoice Form\",\n      openPopup: openPopupAdd,\n      setOpenPopup: setOpenPopupAdd,\n      children: /*#__PURE__*/_jsxDEV(InvoiceForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit,\n        recordList: recordList,\n        setRecordList: setRecordList,\n        customerOptions: customerOptions,\n        itemOptions: itemOptions,\n        addToTable: addToTable,\n        itemQty: itemQty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Not Found !!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Invoice, \"IKP2TbqBPTcRCaVnMCp38lD4Vtg=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/Invoice.js"],"names":["React","useEffect","useState","axios","PeopleAltTwoToneIcon","ModeEditOutlined","Search","AddIcon","Popup","makeStyles","InputAdornment","Paper","TableBody","TableCell","TableRow","Toolbar","moment","ViewListIcon","useTable","Controls","Notification","ConfirmDialog","InvoiceForm","PageHeader","Loader","ViewDetail","base","customerApi","orderApi","itemApi","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","Invoice","props","setLoading","user","loading","recordForEdit","setRecordForEdit","recordForView","setRecordForView","recordList","setRecordList","classes","records","setRecords","filterFn","setFilterFn","fn","items","openPopupDetail","setOpenPopupDetail","openPopupAdd","setOpenPopupAdd","notify","setNotify","isOpen","message","type","confirmDialog","setConfirmDialog","title","subTitle","itemOptions","setItemOptions","itemQty","setItemQty","customerOptions","setCustomerOptions","headCells","id","label","disableSorting","get","baseUrl","customerIdNameList","then","response","console","log","data","itemIdNameList","itemIdQtyList","allOrders","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","orderId","includes","addOrEdit","supplier","resetForm","post","status","notification","catch","error","addToTable","order","cusName","customerId","cus","name","itemName","item","itemId","length","customerName","userId","open","openViewDetail","orderItemList","level","startAdornment","map","orderDate","format","totalAmount","marginRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport {ModeEditOutlined} from \"@mui/icons-material\";\nimport Search from \"@mui/icons-material/Search\"\nimport AddIcon from '@mui/icons-material/Add';\nimport Popup from \"../../components/Popup\";\nimport {makeStyles} from \"@mui/styles\";\nimport {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\nimport moment from 'moment';\nimport ViewListIcon from '@mui/icons-material/ViewList';\nimport useTable from \"../../components/useTable\"\nimport Controls from \"../../components/controls/Controls\";\nimport Notification from '../../components/Notification'\nimport ConfirmDialog from '../../components/ConfirmDialog'\nimport InvoiceForm from \"./InvoiceForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport Loader from \"../../components/Loader\";\nimport ViewDetail from './ViewDetail';\nimport { base, customerApi, orderApi, itemApi} from '../../enum/urls';\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\n// const headCells = [\n//     {id: 'orderId', label:'Invoice'},\n//     {id: 'orderDate', label:'Invoice Date'},\n//     {id: 'customerName', label:'Customer Name'},\n//     {id: 'amount', label:'Total Amount'},\n//     {id: 'actions', label:'View Details', disableSorting: true}\n// ]\n\nexport default function Invoice(props) {\n\n    const {setLoading, user, loading} = props;\n    const [recordForEdit, setRecordForEdit] = useState(null);\n    const [recordForView, setRecordForView] = useState(null);\n    const [recordList, setRecordList] = useState([]);\n    const classes = useStyles();\n    const [records, setRecords] = useState([]);\n    const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n    const [openPopupDetail, setOpenPopupDetail] = useState(false);\n    const [openPopupAdd, setOpenPopupAdd] = useState(false);\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n    const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title:'', subTitle:''})\n    const [itemOptions, setItemOptions] = useState([]);\n    const [itemQty, setItemQty] = useState([]);\n    const [customerOptions, setCustomerOptions] = useState([]);\n\n    const headCells = [\n        {id: 'orderId', label:'Invoice'},\n        {id: 'orderDate', label:'Invoice Date'},\n        {id: 'customerName', label:'Customer Name'},\n        {id: 'amount', label:'Total Amount'},\n        {id: 'actions', label:'View Details', disableSorting: true},\n    ]\n\n    useEffect(() => {\n        setLoading(true);\n        axios.get(base.baseUrl + customerApi.baseUrl + customerApi.customerIdNameList)\n        .then((function (response){\n            console.log(\"customer\", response.data.data)\n            setCustomerOptions(response.data.data)\n            // setLoading(false);\n        }))\n\n        setLoading(true);\n        axios.get(base.baseUrl + itemApi.baseUrl + itemApi.itemIdNameList)\n        .then((function (response){\n            console.log(\"setItemOptions\", response.data.data)\n            setItemOptions(response.data.data)\n            // setLoading(false);\n        }))\n\n        setLoading(true);\n        axios.get(base.baseUrl + itemApi.baseUrl + itemApi.itemIdQtyList)\n        .then((function (response){\n            console.log(\"setItemQtyOptions\", response.data.data)\n            setItemQty(response.data.data)\n            // setLoading(false);\n        }))\n\n        setLoading(true);\n        console.log('useEffect')\n        axios.get(base.baseUrl + orderApi.baseUrl + orderApi.allOrders)\n        .then((function (response){\n            console.log(\"allOrders\", response.data)\n            setRecords(response.data.data)\n            setLoading(false);\n            // return list;\n        }))\n    }, [notify]);\n   \n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if(target.value == \"\")\n                    return items;\n                else\n                    return items.filter(x => x.orderId.includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (supplier, resetForm) => {\n        setLoading(true);\n            console.log('supplier', supplier)\n            axios.post(base.baseUrl + orderApi.baseUrl, supplier)\n            .then(response => {\n                console.log(\"Status: \", response.status);\n                console.log(\"Message: \", response);\n                setLoading(false);\n                notification(true, response.data.message, 'success');\n            }).catch(error => {\n                console.log('Something went wrong!', error);\n            });\n        \n        resetForm();\n        setRecordForEdit(null);\n        setOpenPopupAdd(false);\n    }\n\n    const addToTable = (order, resetForm) => {\n        let cusName;\n        console.log('order', order)\n        if(order.customerId){\n            cusName = customerOptions.filter( function (cus) {\n                return cus.id == order.customerId;\n            })[0].name;\n        }\n        let itemName = itemOptions.filter( function (item) {\n            return item.id == order.itemId;\n        })[0].name;\n          \n        order.id = recordList.length;\n        order.customerName = cusName;\n        order.itemName = itemName;\n        order.userId = user.id;\n\n        setRecordList([...recordList, order]);\n\n        resetForm();\n        console.log('values', order)\n        console.log('recordList', recordList)\n    }\n\n    const notification = (open, message, type) =>{\n        console.log('AAAAAAAA')\n        setNotify({\n            isOpen: open,\n            message: message,\n            type: type\n        })\n    }\n    \n    // const openInPopup = item =>{\n    //     setRecordForEdit(item)\n    //     // setOpenPopup(true);\n    // }\n\n    const openViewDetail = item =>{\n        console.log('item', item.orderItemList);\n        setRecordForView(item.orderItemList)\n        setOpenPopupDetail(true);\n    }\n\n    // const onDelete = id => {\n    //     setConfirmDialog({\n    //         ...confirmDialog,\n    //         isOpen: false\n    //     })\n    //     setLoading(true);\n\n    //     // supplierService.deleteSupplier(id);\n    //     // setRecords(supplierService.getAllSuppliers());\n    //     axios.delete('http://localhost:8080/api/v1/invoice/'+ id)\n    //     .then(response => {\n    //         // setLoading(false);\n    //         console.log(\"delete: \", response);\n    //         setLoading(false);\n    //         notification(true, response.data.message, 'success');\n    //     }).catch(error => {\n    //         console.log('Something went wrong!', error);\n    //     });\n    // }\n\n    return (\n        user.level && !loading?\n            <>\n                <PageHeader\n                    title=\"Invoice\"\n                    subTitle=\"View/ Add / Update / Delete Invoices\"\n                    icon={<PeopleAltTwoToneIcon fontSize=\"large\"/>}\n                />\n        \n                <Paper className={classes.pageContent}>\n                    <Toolbar>\n                        <Controls.Input\n                            className={classes.searchInput}\n                            label=\"Search Invoices\"\n                            InputProps={{\n                                startAdornment: (<InputAdornment position='start'>\n                                    <Search/>\n                                </InputAdornment>)\n                            }}\n                            onChange={handleSearch}\n                        />\n                        {/* { user.level == 'admin' ? */}\n                            <Controls.Button\n                                className={classes.newButton}\n                                text=\"Add New\"\n                                variant=\"outlined\"\n                                startIcon={<AddIcon/>}\n                                onClick={() => {\n                                    setOpenPopupAdd(true);\n                                    setRecordForEdit(null);\n                                    setRecordList([]);\n                                }}\n                            />\n                        {/* : null } */}\n                    </Toolbar>\n                    <TblContainer>\n                        <TblHead/>\n                        <TableBody>\n                            {\n                                recordsAfterPagingAndSorting().map(item =>\n                                    (<TableRow key={item.orderId}>\n                                        <TableCell>{item.orderId}</TableCell>\n                                        <TableCell>{moment(item.orderDate).format('DD/MMM/yyyy')}</TableCell>\n                                        <TableCell>{item.customerName}</TableCell>\n                                        <TableCell>{item.totalAmount}</TableCell>\n                                        <TableCell>\n                                            {/*Update data*/}\n                                            <Controls.Button\n                                                style={{marginRight: 10, paddingLeft: 20}}\n                                                size=\"small\"\n                                                startIcon={<ViewListIcon/>}\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    openViewDetail(item)\n                                                }}\n                                            >\n                                                <ModeEditOutlined fontSize=\"small\"/>\n                                            </Controls.Button>\n\n                                            {/*Delete data*/}\n                                            {/* <Controls.Button\n                                                style={{marginRight: 10, paddingLeft: 20}}\n                                                size=\"small\"\n                                                startIcon={<DeleteIcon/>}\n                                                color=\"error\"\n                                                onClick={() => {\n                                                    setConfirmDialog({\n                                                        isOpen: true,\n                                                        title: 'Are you sure to delete this record ?',\n                                                        subTitle: \"You can' t undo this operation\",\n                                                        onConfirm: () => {\n                                                            onDelete(item.id)\n                                                        }\n                                                    })\n                                                }}>\n                                                <DeleteIcon fontSize=\"small\"/>\n                                            </Controls.Button> */}\n                                        </TableCell>\n                                    </TableRow>)\n                                )\n                            }\n                        </TableBody>\n                    </TblContainer>\n                    <TblPagination/>\n                </Paper>\n                \n                <Loader/>\n\n                <Popup\n                    title=\"Invoice Details\"\n                    openPopup={openPopupDetail}\n                    setOpenPopup={setOpenPopupDetail}\n                >\n                    <ViewDetail\n                        recordForView={recordForView}\n                    />\n                </Popup>\n\n                <Popup\n                    title=\"Invoice Form\"\n                    openPopup={openPopupAdd}\n                    setOpenPopup={setOpenPopupAdd}\n                >\n                    <InvoiceForm\n                        recordForEdit={recordForEdit}\n                        addOrEdit={addOrEdit}\n                        recordList={recordList}\n                        setRecordList={setRecordList}\n                        customerOptions={customerOptions}\n                        itemOptions={itemOptions}\n                        addToTable={addToTable}\n                        itemQty={itemQty}\n                    />                \n                </Popup>\n\n                <Notification\n                    notify={notify}\n                    setNotify={setNotify}\n                />\n                <ConfirmDialog\n                    confirmDialog={confirmDialog}\n                    setConfirmDialog={setConfirmDialog}\n                />\n            </>\n        : <div><h1>User Not Found !!!</h1></div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}