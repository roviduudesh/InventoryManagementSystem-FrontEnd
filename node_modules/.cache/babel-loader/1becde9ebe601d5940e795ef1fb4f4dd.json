{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/ViewDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@mui/styles\";\nimport { Paper, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport useTable from \"../../components/useTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n}));\nconst headCells = [{\n  id: 'itemName',\n  label: 'Item Name'\n}, {\n  id: 'quantity',\n  label: 'Quantity'\n}, {\n  id: 'amount',\n  label: 'Amount'\n}];\nexport default function ViewDetail(props) {\n  _s();\n\n  const {\n    recordForView\n  } = props;\n  const [filterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const classes = useStyles();\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(recordForView, headCells, filterFn); // const handleSearch = e => {\n  //     let target = e.target;\n  //     setFilterFn({\n  //         fn: items => {\n  //             if(target.value == \"\")\n  //                 return items;\n  //             else\n  //                 return items.filter(x => x.supName.toLowerCase().includes(target.value.toLowerCase()))\n  //         }\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.pageContent,\n    children: [/*#__PURE__*/_jsxDEV(TblContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.itemName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewDetail, \"y6yOH6wla66S4VwpiOuYf84jgb0=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = ViewDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewDetail\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/ViewDetail.js"],"names":["React","useState","makeStyles","Paper","TableBody","TableCell","TableRow","useTable","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","headCells","id","label","ViewDetail","props","recordForView","filterFn","fn","items","classes","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","map","item","itemName","quantity","amount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,QAArC,QAAoD,eAApD;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAI;AAClCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,OAAO,EAAE;AAFA,GADqB;AAKlCC,EAAAA,WAAW,EAAC;AACRC,IAAAA,KAAK,EAAC;AADE,GALsB;AAQlCC,EAAAA,SAAS,EAAC;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,IAAI,EAAE,GAFA;AAGNC,IAAAA,OAAO,EAAC;AAHF;AARwB,CAAJ,CAAN,CAA5B;AAeA,MAAMC,SAAS,GAAG,CACd;AAACC,EAAAA,EAAE,EAAE,UAAL;AAAiBC,EAAAA,KAAK,EAAC;AAAvB,CADc,EAEd;AAACD,EAAAA,EAAE,EAAE,UAAL;AAAiBC,EAAAA,KAAK,EAAC;AAAvB,CAFc,EAGd;AAACD,EAAAA,EAAE,EAAE,QAAL;AAAeC,EAAAA,KAAK,EAAC;AAArB,CAHc,CAAlB;AAMA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEtC,QAAM;AAACC,IAAAA;AAAD,MAAkBD,KAAxB;AACA,QAAM,CAACE,QAAD,IAAaxB,QAAQ,CAAC;AAACyB,IAAAA,EAAE,EAAEC,KAAK,IAAI;AAAC,aAAOA,KAAP;AAAc;AAA7B,GAAD,CAA3B;AACA,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AAEA,QAAM;AACFqB,IAAAA,YADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA;AAJE,MAKFzB,QAAQ,CAACiB,aAAD,EAAgBL,SAAhB,EAA2BM,QAA3B,CALZ,CANsC,CAatC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEG,OAAO,CAAClB,WAA1B;AAAA,4BACI,QAAC,YAAD;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,kBAEQsB,4BAA4B,GAAGC,GAA/B,CAAmCC,IAAI,iBAClC,QAAC,QAAD;AAAA,kCACG,QAAC,SAAD;AAAA,sBAAYA,IAAI,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG,QAAC,SAAD;AAAA,sBAAYD,IAAI,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG,QAAC,SAAD;AAAA,sBAAYF,IAAI,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAHH;AAAA,WAAeH,IAAI,CAACd,EAApB;AAAA;AAAA;AAAA;AAAA,gBADL;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA5CuBE,U;UAIJd,S,EAOZD,Q;;;KAXgBe,U","sourcesContent":["import React, {useState} from 'react';\nimport {makeStyles} from \"@mui/styles\";\nimport {Paper, TableBody, TableCell, TableRow} from \"@mui/material\";\nimport useTable from \"../../components/useTable\"\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\nconst headCells = [\n    {id: 'itemName', label:'Item Name'},\n    {id: 'quantity', label:'Quantity'},\n    {id: 'amount', label:'Amount'},\n]\n\nexport default function ViewDetail(props) {\n\n    const {recordForView} = props\n    const [filterFn] = useState({fn: items => {return items;}})\n    const classes = useStyles();\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(recordForView, headCells, filterFn);\n\n    // const handleSearch = e => {\n    //     let target = e.target;\n    //     setFilterFn({\n    //         fn: items => {\n    //             if(target.value == \"\")\n    //                 return items;\n    //             else\n    //                 return items.filter(x => x.supName.toLowerCase().includes(target.value.toLowerCase()))\n    //         }\n    //     })\n    // }\n\n    return (\n        <Paper className={classes.pageContent}>      \n            <TblContainer>\n                <TblHead/>\n                <TableBody>\n                    {\n                        recordsAfterPagingAndSorting().map(item =>\n                            (<TableRow key={item.id}>\n                                <TableCell>{item.itemName}</TableCell>\n                                <TableCell>{item.quantity}</TableCell>\n                                <TableCell>{item.amount}</TableCell>\n                            </TableRow>)\n                        )\n                    }\n                </TableBody>\n            </TblContainer>\n            <TblPagination/>\n        </Paper>\n    );\n}"]},"metadata":{},"sourceType":"module"}