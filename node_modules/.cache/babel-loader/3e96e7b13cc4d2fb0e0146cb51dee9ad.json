{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/StockForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  stockDate: '',\n  quantity: '',\n  supplierId: '',\n  itemId: ''\n};\nexport default function StockForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('stockDate' in fieldValues) {\n      temp.stockDate = fieldValues.stockDate ? \"\" : \"This field is required\";\n    } // if('contact' in fieldValues) {\n    //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n    // }\n    // if('departmentId' in fieldValues) {\n    //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n    // }\n\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n          name: \"stockDate\",\n          label: \"Supplier Name\",\n          value: values.stockDate,\n          onChange: handleInputChange,\n          error: errors.stockDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"quantity\",\n          label: \"Address Line 1\",\n          value: values.quantity,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"supplierId\",\n          label: \"Address Line 2\",\n          value: values.supplierId,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"itemId\",\n          label: \"Address Line 3\",\n          value: values.itemId,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          color: \"inherit\",\n          text: \"Reset\",\n          onClick: resetForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StockForm, \"NbybQkXiDLVvw8T/tZ7oN0nTjFE=\", false, function () {\n  return [useForm];\n});\n\n_c = StockForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Stock/StockForm.js"],"names":["React","useEffect","Grid","useForm","Form","Controls","initialFValues","id","stockDate","quantity","supplierId","itemId","StockForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,0BAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,QAAQ,EAAC,EAHU;AAInBC,EAAAA,UAAU,EAAC,EAJQ;AAKnBC,EAAAA,MAAM,EAAC;AALY,CAAvB;AAQA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAErC,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA6BF,KAAnC;;AAEA,QAAMG,QAAQ,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACvC,QAAIC,IAAI,GAAG,EAAC,GAAGC;AAAJ,KAAX;;AACA,QAAG,eAAeH,WAAlB,EAA+B;AAC3BE,MAAAA,IAAI,CAACX,SAAL,GAAiBS,WAAW,CAACT,SAAZ,GAAwB,EAAxB,GAA6B,wBAA9C;AACH,KAJsC,CAKvC;AACA;AACA;AACA;AACA;AACA;;;AACAa,IAAAA,SAAS,CAAC,EACN,GAAGF;AADG,KAAD,CAAT;;AAGA,QAAGF,WAAW,IAAIC,MAAlB,EAA0B;AACtB,aAAOI,MAAM,CAACJ,MAAP,CAAcC,IAAd,EAAoBI,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACH;AACJ,GAjBD;;AAmBA,QAAM;AACFN,IAAAA,MADE;AAEFO,IAAAA,SAFE;AAGFL,IAAAA,MAHE;AAIFC,IAAAA,SAJE;AAKFK,IAAAA,iBALE;AAMFC,IAAAA;AANE,MAOFxB,OAAO,CAACG,cAAD,EAAiB,IAAjB,EAAuBU,QAAvB,CAPX;;AASA,QAAMY,YAAY,GAAGC,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGd,QAAQ,EAAX,EAAe;AACXF,MAAAA,SAAS,CAACI,MAAD,EAASS,SAAT,CAAT;AACH;AACJ,GAND;;AAQA1B,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGc,aAAa,IAAI,IAApB,EAAyB;AACrBU,MAAAA,SAAS,CAAC,EACN,GAAGV;AADG,OAAD,CAAT;AAGH;AACJ,GANQ,EAMN,CAACA,aAAD,CANM,CAAT;AAQA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEa,YAAhB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,gCACI,QAAC,QAAD,CAAU,UAAV;AACI,UAAA,IAAI,EAAC,WADT;AAEI,UAAA,KAAK,EAAC,eAFV;AAGI,UAAA,KAAK,EAAEV,MAAM,CAACV,SAHlB;AAII,UAAA,QAAQ,EAAEkB,iBAJd;AAKI,UAAA,KAAK,EAAEN,MAAM,CAACZ;AALlB;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,QAAD,CAAU,KAAV;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,KAAK,EAAC,gBAFV;AAGI,UAAA,KAAK,EAAEU,MAAM,CAACT,QAHlB;AAII,UAAA,QAAQ,EAAEiB;AAJd;AAAA;AAAA;AAAA;AAAA,gBATJ,eAgBI,QAAC,QAAD,CAAU,KAAV;AACI,UAAA,IAAI,EAAC,YADT;AAEI,UAAA,KAAK,EAAC,gBAFV;AAGI,UAAA,KAAK,EAAER,MAAM,CAACR,UAHlB;AAII,UAAA,QAAQ,EAAEgB;AAJd;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAuBI,QAAC,QAAD,CAAU,KAAV;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,KAAK,EAAC,gBAFV;AAGI,UAAA,KAAK,EAAER,MAAM,CAACP,MAHlB;AAII,UAAA,QAAQ,EAAEe;AAJd;AAAA;AAAA;AAAA;AAAA,gBAvBJ,eA8BI,QAAC,QAAD,CAAU,MAAV;AACI,UAAA,KAAK,EAAE;AAACK,YAAAA,UAAU,EAAE;AAAb,WADX;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,gBA9BJ,eAoCI,QAAC,QAAD,CAAU,MAAV;AACI,UAAA,KAAK,EAAE;AAACA,YAAAA,UAAU,EAAE;AAAb,WADX;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,OAAO,EAAEJ;AAJb;AAAA;AAAA;AAAA;AAAA,gBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH;;GAjGuBf,S;UA8BhBT,O;;;KA9BgBS,S","sourcesContent":["import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    stockDate: '',\n    quantity:'',\n    supplierId:'',\n    itemId:''\n}\n\nexport default function StockForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('stockDate' in fieldValues) {\n            temp.stockDate = fieldValues.stockDate ? \"\" : \"This field is required\"\n        }\n        // if('contact' in fieldValues) {\n        //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n        // }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.DatePicker\n                        name=\"stockDate\"\n                        label=\"Supplier Name\"\n                        value={values.stockDate}\n                        onChange={handleInputChange}\n                        error={errors.stockDate}\n                    />\n\n                    <Controls.Input\n                        name=\"quantity\"\n                        label=\"Address Line 1\"\n                        value={values.quantity}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"supplierId\"\n                        label=\"Address Line 2\"\n                        value={values.supplierId}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"itemId\"\n                        label=\"Address Line 3\"\n                        value={values.itemId}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}