{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport Popup from \"../../components/Popup\";\nimport { Dialog, DialogContent, DialogTitle, Typography } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Notification from '../../components/Notification';\nimport Supplier from '../supplier/Supplier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  userName: '',\n  password: ''\n};\nexport default function LoginForm(props) {\n  _s();\n\n  const {\n    setLoading,\n    setAa\n  } = props;\n  const [openPopup, setOpenPopup] = useState(true);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [userId, setUserId] = useState({});\n  const history = useHistory();\n  console.log('props', props);\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('userName' in fieldValues) {\n      temp.userName = fieldValues.userName ? \"\" : \"This field is required\";\n    }\n\n    if ('password' in fieldValues) {\n      temp.password = fieldValues.password ? \"\" : \"This field is required\";\n    }\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('values', values);\n\n    if (validate()) {\n      axios.post('http://localhost:8080/api/v1/login', values).then(response => {\n        // console.log(\"Status: \", response.status);\n        console.log(\"response.data: \", response.data.data);\n        setUserId(response.data.data);\n        setAa(response.data.data);\n        setLoading(false);\n        setOpenPopup(false);\n        let type = response.data.status == 200 ? 'success' : 'error';\n        notification(true, response.data.message, type);\n      }).catch(error => {\n        console.log('Something went wrong!', error);\n      });\n    }\n  };\n\n  const notification = (open, message, type) => {\n    setNotify({\n      isOpen: open,\n      message: message,\n      type: type\n    });\n  };\n\n  useEffect(() => {\n    if (!openPopup) {\n      // {console.log('useEffect Login')}\n      console.log('user', userId);\n      history.push(\"/supplier\");\n    }\n  }, [notify]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openPopup,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"div\",\n            children: 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n                  name: \"userName\",\n                  label: \"Enter Username\",\n                  value: values.userName,\n                  onChange: handleInputChange,\n                  error: errors.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n                  name: \"password\",\n                  label: \"Enter Password\",\n                  value: values.password,\n                  onChange: handleInputChange,\n                  error: errors.password,\n                  type: 'password'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n                  style: {\n                    marginLeft: 10\n                  },\n                  type: \"submit\",\n                  text: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n                  style: {\n                    marginLeft: 10\n                  },\n                  color: \"inherit\",\n                  text: \"Reset\",\n                  onClick: resetForm\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginForm, \"y/Nn1QYFyavkQcblxffTTEv8BN0=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Login/LoginForm.js"],"names":["React","useEffect","useState","Grid","useForm","Form","Controls","Popup","Dialog","DialogContent","DialogTitle","Typography","useHistory","axios","Notification","Supplier","initialFValues","userName","password","LoginForm","props","setLoading","setAa","openPopup","setOpenPopup","notify","setNotify","isOpen","message","type","userId","setUserId","history","console","log","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","post","then","response","data","status","notification","catch","error","open","push","textAlign","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport Popup from \"../../components/Popup\";\nimport {Dialog, DialogContent, DialogTitle, Typography} from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Notification from '../../components/Notification';\nimport Supplier from '../supplier/Supplier';\n\nconst initialFValues = {\n    userName:'',\n    password:'',\n}\n\nexport default function LoginForm(props) {\n\n    const {setLoading, setAa} = props;\n    const [openPopup, setOpenPopup] = useState(true);\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n    const [userId, setUserId] = useState({});\n    const history = useHistory();\n    console.log('props', props)\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('userName' in fieldValues) {\n            temp.userName = fieldValues.userName ? \"\" : \"This field is required\"\n        }\n        if('password' in fieldValues) {\n            temp.password = fieldValues.password ? \"\" : \"This field is required\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n        console.log('values', values)\n        if(validate()) {\n            axios.post('http://localhost:8080/api/v1/login', values)\n            .then(response => {\n                // console.log(\"Status: \", response.status);\n                console.log(\"response.data: \", response.data.data);\n                setUserId(response.data.data);\n                setAa(response.data.data);\n                setLoading(false);\n                setOpenPopup(false)\n                let type = response.data.status == 200 ? 'success' : 'error';               \n                notification(true, response.data.message, type);\n            }).catch(error => {\n                console.log('Something went wrong!', error);\n            });\n        }\n    }\n\n    const notification = (open, message, type) =>{\n        setNotify({\n            isOpen: open,\n            message: message,\n            type: type\n        })\n    }\n    \n    useEffect(() =>{\n        \n        if(!openPopup){\n            // {console.log('useEffect Login')}\n            console.log('user', userId)\n            history.push(\"/supplier\");\n        }\n    }, [notify])\n\n    return (\n        <>\n            <Dialog open={openPopup}>\n                <DialogTitle>\n                    <div style={{textAlign:'center'}}>\n                        <Typography variant=\"h4\" component=\"div\">\n                            {'Login'}\n                        </Typography>\n                        \n                    </div>\n                </DialogTitle>\n                <DialogContent dividers>\n                <Form onSubmit={handleSubmit}>\n                    <div style={{textAlign:'center'}}>\n                    <Grid container direction=\"row\">\n                        <Grid item xs={12} >\n                            <Controls.Input\n                                name=\"userName\"\n                                label=\"Enter Username\"\n                                value={values.userName}\n                                onChange={handleInputChange}\n                                error={errors.userName}\n                            />\n\n                            <Controls.Input\n                                name=\"password\"\n                                label=\"Enter Password\"\n                                value={values.password}\n                                onChange={handleInputChange}\n                                error={errors.password}\n                                type={'password'}\n                            />\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                type=\"submit\"\n                                text=\"Submit\"\n                            />\n\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                color=\"inherit\"\n                                text=\"Reset\"\n                                onClick={resetForm}\n                            />\n                        </Grid>\n                        {/* <Grid item xs={6}>\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                type=\"submit\"\n                                text=\"Submit\"\n                            />\n\n                            <Controls.Button\n                                style={{marginLeft: 10}}\n                                color=\"inherit\"\n                                text=\"Reset\"\n                                onClick={resetForm}\n                            />\n                        </Grid> */}\n                    </Grid>\n                    </div>\n                </Form>\n                </DialogContent>\n            </Dialog>\n\n            <Notification\n                notify={notify}\n                setNotify={setNotify}\n            />\n        </>\n            \n        \n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}