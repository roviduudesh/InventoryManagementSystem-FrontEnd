{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/ItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  name: '',\n  price: '',\n  quantity: 0,\n  warranty: ''\n};\nexport default function ItemForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('name' in fieldValues) {\n      temp.name = fieldValues.name ? \"\" : \"This field is required\";\n    }\n\n    if ('price' in fieldValues) {\n      temp.price = fieldValues.price ? \"\" : \"This field is required\";\n    }\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) {\n      setValues({ ...recordForEdit\n      });\n    }\n  }, [recordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        style: {\n          width: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"name\",\n          label: \"Item Name\",\n          value: values.name,\n          onChange: handleInputChange,\n          error: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"price\",\n          label: \"Item Price\",\n          value: values.price,\n          onChange: handleInputChange,\n          error: errors.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"quantity\",\n          label: \"Item Quantity\",\n          value: values.quantity,\n          onChange: handleInputChange,\n          error: errors.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"warranty\",\n          label: \"Item warranty (months)\",\n          value: values.warranty,\n          onChange: handleInputChange,\n          error: errors.warranty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10\n          },\n          type: \"submit\",\n          text: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          style: {\n            marginLeft: 10,\n            marginTop: 10\n          },\n          color: \"inherit\",\n          text: \"Reset\",\n          onClick: resetForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ItemForm, \"NbybQkXiDLVvw8T/tZ7oN0nTjFE=\", false, function () {\n  return [useForm];\n});\n\n_c = ItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Item/ItemForm.js"],"names":["React","useEffect","Grid","useForm","Form","Controls","initialFValues","id","name","price","quantity","warranty","ItemForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","width","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\n\nconst initialFValues = {\n    id: 0,\n    name: '',\n    price:'',\n    quantity: 0,\n    warranty:'',\n}\n\nexport default function ItemForm(props) {\n\n    const {addOrEdit, recordForEdit} = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('name' in fieldValues) {\n            temp.name = fieldValues.name ? \"\" : \"This field is required\"\n        }\n        if('price' in fieldValues) {\n            temp.price = fieldValues.price ? \"\" : \"This field is required\"\n        }\n        \n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    useEffect(() =>{\n        if(recordForEdit != null){\n            setValues({\n                ...recordForEdit\n            })\n        }\n    }, [recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid \n                container\n                direction=\"column\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                style={{width:'400px'}}\n                >\n                    <Controls.Input\n                        name=\"name\"\n                        label=\"Item Name\"\n                        value={values.name}\n                        onChange={handleInputChange}\n                        error={errors.name}\n                    />\n\n                    <Controls.Input\n                        name=\"price\"\n                        label=\"Item Price\"\n                        value={values.price}\n                        onChange={handleInputChange}\n                        error={errors.price}\n                    />\n\n                    <Controls.Input\n                        name=\"quantity\"\n                        label=\"Item Quantity\"\n                        value={values.quantity}\n                        onChange={handleInputChange} \n                        error={errors.quantity}\n                    />\n\n                    <Controls.Input\n                        name=\"warranty\"\n                        label=\"Item warranty (months)\"\n                        value={values.warranty}\n                        onChange={handleInputChange} \n                        error={errors.warranty}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />  \n\n                    <Controls.Button\n                        style={{marginLeft: 10, marginTop: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            \n            </Grid>\n        </Form>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}