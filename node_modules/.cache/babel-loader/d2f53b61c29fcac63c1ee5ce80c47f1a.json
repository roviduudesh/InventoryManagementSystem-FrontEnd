{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Paper, TableBody, TableCell, TableRow } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport useTable from \"../../components/useTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  customerId: '',\n  customerName: '',\n  itemId: '',\n  itemName: '',\n  quantity: '',\n  amount: ''\n};\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n}));\nconst headCells = [{\n  id: 'itemName',\n  label: 'Item Name'\n}, {\n  id: 'quantity',\n  label: 'Quantity'\n}, {\n  id: 'amount',\n  label: 'Amount'\n}];\nexport default function InvoiceForm(props) {\n  _s();\n\n  // const classes = useStyles();\n  const {\n    addOrEdit,\n    addToTable,\n    recordList,\n    customerOptions,\n    itemOptions\n  } = props;\n  const [disableCustomer, setDisableCustomer] = useState(false);\n  const [disableSubmit, setDisableSubmit] = useState(true);\n  const [filterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  }); // console.log('recordList', recordList)\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if (recordList.length == 0) {\n      if ('customerId' in fieldValues) {\n        temp.customerId = fieldValues.customerId ? \"\" : \"This field is required\";\n      }\n    }\n\n    if ('itemId' in fieldValues) {\n      temp.itemId = fieldValues.itemId ? \"\" : \"This field is required\";\n    }\n\n    if ('quantity' in fieldValues) {\n      temp.quantity = fieldValues.quantity ? \"\" : \"Invalid Quantity\";\n    }\n\n    if ('amount' in fieldValues) {\n      temp.amount = fieldValues.amount ? \"\" : \"Invalid Amount\";\n    }\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(recordList, headCells, filterFn);\n  const {\n    values,\n    // setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    console.log('recordList', recordList); // e.preventDefault();\n    // if(validate()) {\n\n    addOrEdit(recordList, resetForm); // }\n  };\n\n  const addValue = e => {\n    if (validate()) {\n      addToTable(values, resetForm);\n      setDisableSubmit(false);\n      setDisableCustomer(true);\n    }\n  }; // useEffect(() =>{\n  //     if(recordForEdit != null){\n  //         setValues({\n  //             ...recordForEdit\n  //         })\n  //     }\n  // }, [recordForEdit])\n\n\n  return (\n    /*#__PURE__*/\n    // <Paper className={classes.pageContent}>\n    _jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Select, {\n              name: \"customerId\",\n              label: \"Select Customer\",\n              options: customerOptions,\n              value: recordList.length > 0 ? recordList[0].customerId : values.customerId,\n              onChange: handleInputChange,\n              error: errors.customerId,\n              disabled: disableCustomer,\n              error: errors.customerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n              name: \"itemId\",\n              label: \"Select Item\",\n              options: itemOptions,\n              value: values.itemId,\n              onChange: handleInputChange,\n              error: errors.itemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"availableQty\",\n              label: \"Available Quantity\",\n              value: values.availableQty,\n              onChange: handleInputChange,\n              type: \"number\",\n              error: errors.availableQty,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"quantity\",\n              label: \"Quantity\",\n              value: values.quantity,\n              onChange: handleInputChange,\n              type: \"number\",\n              error: errors.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"amount\",\n              label: \"Amount\",\n              value: values.amount,\n              onChange: handleInputChange,\n              type: \"number\",\n              error: errors.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                margin: 10,\n                marginTop: '70px',\n                maxWidth: '60px',\n                minWidth: '100px'\n              },\n              text: \"Add\",\n              onClick: addValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                margin: 10\n              },\n              color: \"error\",\n              onClick: handleSubmit,\n              text: \"Submit\",\n              disabled: disableSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                margin: 10,\n                maxWidth: '60px',\n                minWidth: '100px'\n              },\n              color: \"inherit\",\n              text: \"Reset\",\n              onClick: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), recordList.length > 0 ? /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 26\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this) : null, recordList.length > 0 ? /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(InvoiceForm, \"/Hwtx3Wsg2ohqe5HEx6mT8E/ASE=\", false, function () {\n  return [useTable, useForm];\n});\n\n_c = InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js"],"names":["React","useState","Grid","useForm","Form","Controls","Paper","TableBody","TableCell","TableRow","makeStyles","useTable","initialFValues","id","customerId","customerName","itemId","itemName","quantity","amount","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","headCells","label","InvoiceForm","props","addOrEdit","addToTable","recordList","customerOptions","itemOptions","disableCustomer","setDisableCustomer","disableSubmit","setDisableSubmit","filterFn","fn","items","validate","fieldValues","values","temp","errors","length","setErrors","Object","every","x","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleInputChange","resetForm","handleSubmit","e","console","log","addValue","availableQty","marginTop","maxWidth","minWidth","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport {Paper, TableBody, TableCell, TableRow} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport useTable from \"../../components/useTable\"\n\nconst initialFValues = {\n    id: 0,\n    customerId: '',\n    customerName: '',\n    itemId:'',\n    itemName:'',\n    quantity:'',\n    amount:'',\n}\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\nconst headCells = [\n    {id: 'itemName', label:'Item Name'},\n    {id: 'quantity', label:'Quantity'},\n    {id: 'amount', label:'Amount'},\n]\n\nexport default function InvoiceForm(props) {\n\n    // const classes = useStyles();\n    const {addOrEdit, addToTable, recordList, customerOptions, itemOptions} = props\n    const [disableCustomer, setDisableCustomer] = useState(false);\n    const [disableSubmit, setDisableSubmit] = useState(true);\n    const [filterFn] = useState({fn: items => {return items;}})\n    // console.log('recordList', recordList)\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        \n        if(recordList.length == 0){\n            if('customerId' in fieldValues) {\n                temp.customerId = fieldValues.customerId ? \"\" : \"This field is required\"\n            }\n        }\n        if('itemId' in fieldValues) {\n            temp.itemId = fieldValues.itemId ? \"\" : \"This field is required\"\n        }\n        if('quantity' in fieldValues) {\n            temp.quantity = fieldValues.quantity ? \"\" : \"Invalid Quantity\"\n        }\n        if('amount' in fieldValues) {\n            temp.amount = fieldValues.amount ? \"\" : \"Invalid Amount\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(recordList, headCells, filterFn);\n\n    const {\n        values,\n        // setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        console.log('recordList', recordList)\n        // e.preventDefault();\n\n        // if(validate()) {\n            addOrEdit(recordList, resetForm);\n        // }\n    }\n\n    const addValue = e =>{\n        if(validate()){\n            addToTable(values, resetForm);\n            setDisableSubmit(false);\n            setDisableCustomer(true);\n        }\n    }\n\n    // useEffect(() =>{\n    //     if(recordForEdit != null){\n    //         setValues({\n    //             ...recordForEdit\n    //         })\n    //     }\n    // }, [recordForEdit])\n    return (\n        \n        // <Paper className={classes.pageContent}>\n        <Paper>\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={8}>\n                <Controls.Select\n                        name=\"customerId\"\n                        label=\"Select Customer\"\n                        options={customerOptions}\n                        value={recordList.length > 0 ? recordList[0].customerId : values.customerId}\n                        onChange={handleInputChange}\n                        error={errors.customerId}\n                        disabled={disableCustomer}\n                        error={errors.customerId}\n                    />\n\n                    <Controls.Select\n                        name=\"itemId\"\n                        label=\"Select Item\"\n                        options={itemOptions}\n                        value={values.itemId}\n                        onChange={handleInputChange}\n                        error={errors.itemId}\n                    />\n\n                    <Controls.Input\n                        name=\"availableQty\"\n                        label=\"Available Quantity\"\n                        value={values.availableQty}\n                        onChange={handleInputChange}\n                        type='number'\n                        error={errors.availableQty}\n                        disabled={true}\n                    />\n\n                    <Controls.Input\n                        name=\"quantity\"\n                        label=\"Quantity\"\n                        value={values.quantity}\n                        onChange={handleInputChange}\n                        type='number'\n                        error={errors.quantity}\n                    />\n\n                    <Controls.Input\n                        name=\"amount\"\n                        label=\"Amount\"\n                        value={values.amount}\n                        onChange={handleInputChange}\n                        type='number'\n                        error={errors.amount}\n                    />\n                </Grid>\n                \n                <Grid item xs={4}>\n                    <Controls.Button\n                        style={{margin: 10, marginTop:'70px', maxWidth: '60px', minWidth: '100px'}}\n                        text=\"Add\"\n                        onClick={addValue}\n                    />\n                    <Controls.Button\n                        style={{margin: 10}}\n                        color=\"error\"\n                        onClick={handleSubmit}\n                        text=\"Submit\"\n                        disabled={disableSubmit}\n                    />\n\n                    <Controls.Button\n                        style={{margin: 10, maxWidth: '60px', minWidth: '100px'}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n        {recordList.length > 0 ? \n        <TblContainer>\n            <TblHead/>\n            <TableBody>\n                {   \n                    recordsAfterPagingAndSorting().map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.itemName}</TableCell>\n                            <TableCell>{item.quantity}</TableCell>\n                            <TableCell>{item.amount}</TableCell>\n                        </TableRow>)\n                    )\n                }\n            </TableBody>\n            </TblContainer>\n        : null }\n        {recordList.length > 0 ? <TblPagination/> : null }\n        </Paper>\n        \n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}