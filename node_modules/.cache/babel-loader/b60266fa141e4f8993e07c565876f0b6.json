{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/customer/Customer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport { InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport Search from \"@mui/icons-material/Search\";\nimport AddIcon from '@mui/icons-material/Add';\nimport { ModeEditOutlined } from \"@mui/icons-material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CreateIcon from '@mui/icons-material/Create';\nimport axios from 'axios';\nimport CustomerForm from \"./CustomerForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport useTable from \"../../components/useTable\";\nimport Controls from \"../../components/controls/Controls\";\nimport Popup from \"../../components/Popup\";\nimport Notification from '../../components/Notification';\nimport ConfirmDialog from '../../components/ConfirmDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n})); // const headCells = [\n//     {id: 'firstName', label:'First Name'},\n//     {id: 'lastName', label:'Last Name'},\n//     {id: 'address1', label:'Address Line 1'},\n//     {id: 'address2', label:'Address Line 2'},\n//     {id: 'address3', label:'Address Line 3'},\n//     {id: 'email', label:'Email'},\n//     {id: 'contact', label:'Contact Numbers', disableSorting: true},\n//     {id: 'actions', label:'Actions', disableSorting: true}\n// ]\n\nexport default function Customer(props) {\n  _s();\n\n  const {\n    setLoading,\n    user\n  } = props;\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const classes = useStyles();\n  const [records, setRecords] = useState([]);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n  const headCells = [{\n    id: 'firstName',\n    label: 'First Name'\n  }, {\n    id: 'lastName',\n    label: 'Last Name'\n  }, {\n    id: 'address1',\n    label: 'Address Line 1'\n  }, {\n    id: 'address2',\n    label: 'Address Line 2'\n  }, {\n    id: 'address3',\n    label: 'Address Line 3'\n  }, {\n    id: 'email',\n    label: 'Email'\n  }, {\n    id: 'contact',\n    label: 'Contact Numbers',\n    disableSorting: true\n  }, user.level == 'admin' ? {\n    id: 'actions',\n    label: 'Actions',\n    disableSorting: true\n  } : null];\n  useEffect(() => {\n    setLoading(true);\n    console.log('useEffect');\n    axios.get('http://localhost:8080/api/v1/customer/all').then(function (response) {\n      // console.log(\"response.data\", response.data)\n      setRecords(response.data.data);\n      setLoading(false); // return list;\n    });\n  }, [notify]);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value == \"\") return items;else return items.filter(x => (x.firstName + x.lastName).toLowerCase().includes(target.value.toLowerCase()));\n      }\n    });\n  };\n\n  const addOrEdit = (customer, resetForm) => {\n    setLoading(true);\n\n    if (customer.id == 0) {\n      axios.post('http://localhost:8080/api/v1/customer', customer).then(response => {\n        // console.log(\"Status: \", response.status);\n        // console.log(\"Message: \", response);\n        setLoading(false);\n        let type = response.data.status == 200 ? 'success' : 'error';\n        notification(true, response.data.message, type);\n      }).catch(error => {\n        console.log('Something went wrong!', error);\n      });\n    } else {\n      console.log('customer ', customer);\n      axios.put('http://localhost:8080/api/v1/customer/' + customer.id, customer).then(response => {\n        // console.log(\"Status: \", response.status);\n        // console.log(\"Message: \", response);\n        setLoading(false);\n        let type = response.data.status == 200 ? 'success' : 'error';\n        notification(true, response.data.message, type);\n      }).catch(error => {\n        console.log('Something went wrong!', error);\n      });\n    }\n\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n  };\n\n  const notification = (open, message, type) => {\n    console.log('AAAAAAAA');\n    setNotify({\n      isOpen: open,\n      message: message,\n      type: type\n    });\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = id => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    axios.delete('http://localhost:8080/api/v1/customer/' + id).then(response => {\n      // setLoading(false);\n      console.log(\"delete: \", response);\n      setLoading(false);\n      notification(true, response.data.message, 'success');\n    }).catch(error => {\n      console.log('Something went wrong!', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Customer\",\n      subTitle: \"View/ Add / Update / Delete Customers\",\n      icon: /*#__PURE__*/_jsxDEV(PeopleAltTwoToneIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          className: classes.searchInput,\n          label: \"Search Customers\",\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 50\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), user.level == 'admin' ? /*#__PURE__*/_jsxDEV(Controls.Button, {\n          className: classes.newButton,\n          text: \"Add New\",\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 40\n          }, this),\n          onClick: () => {\n            setOpenPopup(true);\n            setRecordForEdit(null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.address1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.address2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.address3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 41\n            }, this), user.level == 'admin' ? /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n                style: {\n                  marginRight: 10,\n                  paddingLeft: 20\n                },\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 64\n                }, this),\n                color: \"primary\",\n                onClick: () => {\n                  openInPopup(item);\n                },\n                children: /*#__PURE__*/_jsxDEV(ModeEditOutlined, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n                style: {\n                  marginRight: 10,\n                  paddingLeft: 20\n                },\n                size: \"small\",\n                startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 64\n                }, this),\n                color: \"error\",\n                onClick: () => {\n                  setConfirmDialog({\n                    isOpen: true,\n                    title: 'Are you sure to delete this record ?',\n                    subTitle: \"You can' t undo this operation\",\n                    onConfirm: () => {\n                      onDelete(item.id);\n                    }\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 45\n            }, this) : null]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 38\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Customer Form\",\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      children: /*#__PURE__*/_jsxDEV(CustomerForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      confirmDialog: confirmDialog,\n      setConfirmDialog: setConfirmDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Customer, \"BZ8ms63X2eFNemCeHY575BetVPA=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = Customer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customer\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/customer/Customer.js"],"names":["React","useEffect","useState","PeopleAltTwoToneIcon","InputAdornment","Paper","TableBody","TableCell","TableRow","Toolbar","makeStyles","Search","AddIcon","ModeEditOutlined","DeleteIcon","CreateIcon","axios","CustomerForm","PageHeader","useTable","Controls","Popup","Notification","ConfirmDialog","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","Customer","props","setLoading","user","recordForEdit","setRecordForEdit","classes","records","setRecords","filterFn","setFilterFn","fn","items","openPopup","setOpenPopup","notify","setNotify","isOpen","message","type","confirmDialog","setConfirmDialog","title","subTitle","headCells","id","label","disableSorting","level","console","log","get","then","response","data","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","firstName","lastName","toLowerCase","includes","addOrEdit","customer","resetForm","post","status","notification","catch","error","put","open","openInPopup","item","onDelete","delete","startAdornment","map","address1","address2","address3","email","contact","marginRight","paddingLeft","onConfirm"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport PeopleAltTwoToneIcon from \"@mui/icons-material/PeopleAltTwoTone\";\nimport {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport Search from \"@mui/icons-material/Search\"\nimport AddIcon from '@mui/icons-material/Add';\nimport {ModeEditOutlined} from \"@mui/icons-material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CreateIcon from '@mui/icons-material/Create';\nimport axios from 'axios';\nimport CustomerForm from \"./CustomerForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport useTable from \"../../components/useTable\"\nimport Controls from \"../../components/controls/Controls\";\nimport Popup from \"../../components/Popup\";\nimport Notification from '../../components/Notification'\nimport ConfirmDialog from '../../components/ConfirmDialog'\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\n// const headCells = [\n//     {id: 'firstName', label:'First Name'},\n//     {id: 'lastName', label:'Last Name'},\n//     {id: 'address1', label:'Address Line 1'},\n//     {id: 'address2', label:'Address Line 2'},\n//     {id: 'address3', label:'Address Line 3'},\n//     {id: 'email', label:'Email'},\n//     {id: 'contact', label:'Contact Numbers', disableSorting: true},\n//     {id: 'actions', label:'Actions', disableSorting: true}\n// ]\n\nexport default function Customer(props) {\n\n    const {setLoading, user} = props;\n    const [recordForEdit, setRecordForEdit] = useState(null);\n    const classes = useStyles();\n    const [records, setRecords] = useState([]);\n    const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n    const [openPopup, setOpenPopup] = useState(false);\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''});\n    const [confirmDialog, setConfirmDialog] = useState({isOpen: false, title:'', subTitle:''})\n\n    const headCells = [\n        {id: 'firstName', label:'First Name'},\n        {id: 'lastName', label:'Last Name'},\n        {id: 'address1', label:'Address Line 1'},\n        {id: 'address2', label:'Address Line 2'},\n        {id: 'address3', label:'Address Line 3'},\n        {id: 'email', label:'Email'},\n        {id: 'contact', label:'Contact Numbers', disableSorting: true},\n        user.level == 'admin' ? {id: 'actions', label:'Actions', disableSorting: true} : null\n    ]\n\n    useEffect(() => {\n        setLoading(true);\n        console.log('useEffect')\n        axios.get('http://localhost:8080/api/v1/customer/all')\n        .then((function (response){\n            // console.log(\"response.data\", response.data)\n            setRecords(response.data.data)\n            setLoading(false);\n            // return list;\n        }))\n    }, [notify]);\n   \n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records, headCells, filterFn);\n\n    const handleSearch = e => {\n        let target = e.target;\n        setFilterFn({\n            fn: items => {\n                if(target.value == \"\")\n                    return items;\n                else\n                    return items.filter(x => (x.firstName + x.lastName).toLowerCase().includes(target.value.toLowerCase()))\n            }\n        })\n    }\n\n    const addOrEdit = (customer, resetForm) => {\n        setLoading(true);\n        if(customer.id == 0){\n            axios.post('http://localhost:8080/api/v1/customer', customer)\n            .then(response => {\n                // console.log(\"Status: \", response.status);\n                // console.log(\"Message: \", response);\n                setLoading(false);\n                let type = response.data.status == 200 ? 'success' : 'error';\n                notification(true, response.data.message, type);\n            }).catch(error => {\n                console.log('Something went wrong!', error);\n            });\n        }\n        else{\n            console.log('customer ', customer);\n            axios.put('http://localhost:8080/api/v1/customer/' + customer.id, customer)\n            .then(response => {\n                // console.log(\"Status: \", response.status);\n                // console.log(\"Message: \", response);\n                setLoading(false);\n                let type = response.data.status == 200 ? 'success' : 'error';\n                notification(true, response.data.message, type);\n            }).catch(error => {\n                console.log('Something went wrong!', error);\n            });\n        }\n        resetForm();\n        setRecordForEdit(null);\n        setOpenPopup(false);\n    }\n\n    const notification = (open, message, type) =>{\n        console.log('AAAAAAAA')\n        setNotify({\n            isOpen: open,\n            message: message,\n            type: type\n        })\n    }\n\n    const openInPopup = item =>{\n        setRecordForEdit(item)\n        setOpenPopup(true);\n    }\n\n    const onDelete = id => {\n\n        setConfirmDialog({\n            ...confirmDialog,\n            isOpen: false\n        })\n        axios.delete('http://localhost:8080/api/v1/customer/'+ id)\n        .then(response => {\n            // setLoading(false);\n            console.log(\"delete: \", response);\n            setLoading(false);\n            notification(true, response.data.message, 'success');\n        }).catch(error => {\n            console.log('Something went wrong!', error);\n        });\n    }\n\n    return (\n        <>\n            <PageHeader\n                title=\"Customer\"\n                subTitle=\"View/ Add / Update / Delete Customers\"\n                icon={<PeopleAltTwoToneIcon fontSize=\"large\"/>}\n            />\n            {/*{loading ? <div>Loading....</div> :*/}\n                <Paper className={classes.pageContent}>\n                    {/*<Paper style={{margin: 'auto', padding: 20, width: '60%'}}>*/}\n\n                    <Toolbar>\n                        <Controls.Input\n                            className={classes.searchInput}\n                            label=\"Search Customers\"\n                            InputProps={{\n                                startAdornment: (<InputAdornment position='start'>\n                                    <Search/>\n                                </InputAdornment>)\n                            }}\n                            onChange={handleSearch}\n                        />\n                        {user.level == 'admin' ? \n                        <Controls.Button\n                            className={classes.newButton}\n                            text=\"Add New\"\n                            variant=\"outlined\"\n                            startIcon={<AddIcon/>}\n                            onClick={() => {\n                                setOpenPopup(true);\n                                setRecordForEdit(null);\n                            }}\n                        /> : null }\n                    </Toolbar>\n                    <TblContainer>\n                        <TblHead/>\n                        <TableBody>\n                            {\n                                recordsAfterPagingAndSorting().map(item =>\n                                    (<TableRow key={item.id}>\n                                        <TableCell>{item.firstName}</TableCell>\n                                        <TableCell>{item.lastName}</TableCell>\n                                        <TableCell>{item.address1}</TableCell>\n                                        <TableCell>{item.address2}</TableCell>\n                                        <TableCell>{item.address3}</TableCell>\n                                        <TableCell>{item.email}</TableCell>\n                                        <TableCell>{item.contact}</TableCell>\n                                        {user.level == 'admin' ?\n                                            <TableCell>\n                                                {/*Update data*/}\n                                                <Controls.Button\n                                                    style={{marginRight: 10, paddingLeft: 20}}\n                                                    size=\"small\"\n                                                    startIcon={<CreateIcon/>}\n                                                    color=\"primary\"\n                                                    onClick={() => {\n                                                        openInPopup(item)\n                                                    }}\n                                                >\n                                                    <ModeEditOutlined fontSize=\"small\"/>\n                                                </Controls.Button>\n\n                                                {/*Delete data*/}\n                                                <Controls.Button\n                                                    style={{marginRight: 10, paddingLeft: 20}}\n                                                    size=\"small\"\n                                                    startIcon={<DeleteIcon/>}\n                                                    color=\"error\"\n                                                    onClick={() => {\n                                                        setConfirmDialog({\n                                                            isOpen: true,\n                                                            title: 'Are you sure to delete this record ?',\n                                                            subTitle: \"You can' t undo this operation\",\n                                                            onConfirm: () => {\n                                                                onDelete(item.id)\n                                                            }\n                                                        })\n                                                    }}>\n                                                    <DeleteIcon fontSize=\"small\"/>\n                                                </Controls.Button>\n                                            </TableCell> : null }\n                                    </TableRow>)\n                                )\n                            }\n                        </TableBody>\n                    </TblContainer>\n                    <TblPagination/>\n                </Paper>\n            {/*}*/}\n\n            <Popup\n                title=\"Customer Form\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n            >\n                <CustomerForm\n                    recordForEdit={recordForEdit}\n                    addOrEdit={addOrEdit}\n                />\n            </Popup>\n\n            <Notification\n                notify={notify}\n                setNotify={setNotify}\n            />\n            <ConfirmDialog\n                confirmDialog={confirmDialog}\n                setConfirmDialog={setConfirmDialog}\n            />\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}