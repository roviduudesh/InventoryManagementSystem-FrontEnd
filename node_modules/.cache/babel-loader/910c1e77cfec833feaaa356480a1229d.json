{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport useTable from \"../../components/useTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  cusId: '',\n  cusName: '',\n  itemId: '',\n  itemName: '',\n  quantity: 0,\n  amount: 0\n};\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n}));\nconst headCells = [{\n  id: 'itemName',\n  label: 'Item Name'\n}, {\n  id: 'quantity',\n  label: 'Quantity'\n}, {\n  id: 'amount',\n  label: 'Amount'\n}];\nexport default function InvoiceForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    addOrEdit,\n    recordForEdit,\n    recordList\n  } = props;\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    }; // if('supName' in fieldValues) {\n    //     temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n    // }\n    // if('contact' in fieldValues) {\n    //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n    // }\n\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(values.email) ? \"\" : \"Email is not valid\";\n    } // if('departmentId' in fieldValues) {\n    //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n    // }\n\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(recordList, headCells, filterFn);\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  }; // useEffect(() =>{\n  //     if(recordForEdit != null){\n  //         setValues({\n  //             ...recordForEdit\n  //         })\n  //     }\n  // }, [recordForEdit])\n\n\n  return (\n    /*#__PURE__*/\n    // <Paper className={classes.pageContent}>\n    _jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"supName\",\n              label: \"Supplier Name\",\n              value: values.supName,\n              onChange: handleInputChange,\n              error: errors.supName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"address1\",\n              label: \"Address Line 1\",\n              value: values.address1,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"address2\",\n              label: \"Address Line 2\",\n              value: values.address2,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"address3\",\n              label: \"Address Line 3\",\n              value: values.address3,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"email\",\n              label: \"Email\",\n              value: values.email,\n              onChange: handleInputChange,\n              error: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"contact\",\n              label: \"Contact (Number 1, Number 2, ....)\",\n              value: values.contact,\n              onChange: handleInputChange,\n              error: errors.contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                marginLeft: 10\n              },\n              type: \"submit\",\n              text: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                marginLeft: 10\n              },\n              color: \"inherit\",\n              text: \"Reset\",\n              onClick: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), recordList ? /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordList.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 26\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(InvoiceForm, \"CJATnwBnZZO6Z2H23ldVsI4+3Ls=\", false, function () {\n  return [useStyles, useTable, useForm];\n});\n\n_c = InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js"],"names":["React","useEffect","useState","Grid","useForm","Form","Controls","InputAdornment","Paper","TableBody","TableCell","TableRow","Toolbar","makeStyles","useTable","initialFValues","id","cusId","cusName","itemId","itemName","quantity","amount","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","headCells","label","InvoiceForm","props","classes","addOrEdit","recordForEdit","recordList","filterFn","setFilterFn","fn","items","validate","fieldValues","values","temp","errors","email","test","setErrors","Object","every","x","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","supName","address1","address2","address3","contact","marginLeft","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,eAAnB;AACA,SAAQC,OAAR,EAAiBC,IAAjB,QAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAAQC,cAAR,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0CC,SAA1C,EAAqDC,QAArD,EAA+DC,OAA/D,QAA6E,eAA7E;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,EAAE,EAAE,CADe;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,MAAM,EAAC,EAJY;AAKnBC,EAAAA,QAAQ,EAAC,EALU;AAMnBC,EAAAA,QAAQ,EAAC,CANU;AAOnBC,EAAAA,MAAM,EAAC;AAPY,CAAvB;AAUA,MAAMC,SAAS,GAAGV,UAAU,CAACW,KAAK,KAAI;AAClCC,EAAAA,WAAW,EAAE;AACTC,IAAAA,MAAM,EAAE,EADC;AAETC,IAAAA,OAAO,EAAE;AAFA,GADqB;AAKlCC,EAAAA,WAAW,EAAC;AACRC,IAAAA,KAAK,EAAC;AADE,GALsB;AAQlCC,EAAAA,SAAS,EAAC;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,IAAI,EAAE,GAFA;AAGNC,IAAAA,OAAO,EAAC;AAHF;AARwB,CAAJ,CAAN,CAA5B;AAeA,MAAMC,SAAS,GAAG,CACd;AAAClB,EAAAA,EAAE,EAAE,UAAL;AAAiBmB,EAAAA,KAAK,EAAC;AAAvB,CADc,EAEd;AAACnB,EAAAA,EAAE,EAAE,UAAL;AAAiBmB,EAAAA,KAAK,EAAC;AAAvB,CAFc,EAGd;AAACnB,EAAAA,EAAE,EAAE,QAAL;AAAemB,EAAAA,KAAK,EAAC;AAArB,CAHc,CAAlB;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEvC,QAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,QAAM;AAACgB,IAAAA,SAAD;AAAYC,IAAAA,aAAZ;AAA2BC,IAAAA;AAA3B,MAAyCJ,KAA/C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAC;AAAC0C,IAAAA,EAAE,EAAEC,KAAK,IAAI;AAAC,aAAOA,KAAP;AAAc;AAA7B,GAAD,CAAxC;;AAEA,QAAMC,QAAQ,GAAG,CAACC,WAAW,GAAGC,MAAf,KAA0B;AACvC,QAAIC,IAAI,GAAG,EAAC,GAAGC;AAAJ,KAAX,CADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;;AACA,QAAG,WAAWH,WAAd,EAA2B;AACvBE,MAAAA,IAAI,CAACE,KAAL,GAAc,aAAD,CAAgBC,IAAhB,CAAqBJ,MAAM,CAACG,KAA5B,IAAqC,EAArC,GAA0C,oBAAvD;AACH,KAVsC,CAWvC;AACA;AACA;;;AACAE,IAAAA,SAAS,CAAC,EACN,GAAGJ;AADG,KAAD,CAAT;;AAGA,QAAGF,WAAW,IAAIC,MAAlB,EAA0B;AACtB,aAAOM,MAAM,CAACN,MAAP,CAAcC,IAAd,EAAoBM,KAApB,CAA0BC,CAAC,IAAIA,CAAC,IAAI,EAApC,CAAP;AACH;AACJ,GApBD;;AAsBA,QAAM;AACFC,IAAAA,YADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA;AAJE,MAKF9C,QAAQ,CAAC2B,UAAD,EAAaP,SAAb,EAAwBQ,QAAxB,CALZ;AAQA,QAAM;AACFM,IAAAA,MADE;AAEFa,IAAAA,SAFE;AAGFX,IAAAA,MAHE;AAIFG,IAAAA,SAJE;AAKFS,IAAAA,iBALE;AAMFC,IAAAA;AANE,MAOF3D,OAAO,CAACW,cAAD,EAAiB,IAAjB,EAAuB+B,QAAvB,CAPX;;AASA,QAAMkB,YAAY,GAAGC,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGpB,QAAQ,EAAX,EAAe;AACXP,MAAAA,SAAS,CAACS,MAAD,EAASe,SAAT,CAAT;AACH;AACJ,GAND,CA7CuC,CAqDvC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACI;AACA,YAAC,KAAD;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEC,YAAhB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,SAAS,EAAC,KAA1B;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,oCACI,QAAC,QAAD,CAAU,KAAV;AACI,cAAA,IAAI,EAAC,SADT;AAEI,cAAA,KAAK,EAAC,eAFV;AAGI,cAAA,KAAK,EAAEhB,MAAM,CAACmB,OAHlB;AAII,cAAA,QAAQ,EAAEL,iBAJd;AAKI,cAAA,KAAK,EAAEZ,MAAM,CAACiB;AALlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,QAAD,CAAU,KAAV;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAC,gBAFV;AAGI,cAAA,KAAK,EAAEnB,MAAM,CAACoB,QAHlB;AAII,cAAA,QAAQ,EAAEN;AAJd;AAAA;AAAA;AAAA;AAAA,oBATJ,eAgBI,QAAC,QAAD,CAAU,KAAV;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAC,gBAFV;AAGI,cAAA,KAAK,EAAEd,MAAM,CAACqB,QAHlB;AAII,cAAA,QAAQ,EAAEP;AAJd;AAAA;AAAA;AAAA;AAAA,oBAhBJ,eAuBI,QAAC,QAAD,CAAU,KAAV;AACI,cAAA,IAAI,EAAC,UADT;AAEI,cAAA,KAAK,EAAC,gBAFV;AAGI,cAAA,KAAK,EAAEd,MAAM,CAACsB,QAHlB;AAII,cAAA,QAAQ,EAAER;AAJd;AAAA;AAAA;AAAA;AAAA,oBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eA+BI,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAA,oCACI,QAAC,QAAD,CAAU,KAAV;AACI,cAAA,IAAI,EAAC,OADT;AAEI,cAAA,KAAK,EAAC,OAFV;AAGI,cAAA,KAAK,EAAEd,MAAM,CAACG,KAHlB;AAII,cAAA,QAAQ,EAAEW,iBAJd;AAKI,cAAA,KAAK,EAAEZ,MAAM,CAACC;AALlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,QAAD,CAAU,KAAV;AACI,cAAA,IAAI,EAAC,SADT;AAEI,cAAA,KAAK,EAAC,oCAFV;AAGI,cAAA,KAAK,EAAEH,MAAM,CAACuB,OAHlB;AAII,cAAA,QAAQ,EAAET,iBAJd;AAKI,cAAA,KAAK,EAAEZ,MAAM,CAACqB;AALlB;AAAA;AAAA;AAAA;AAAA,oBATJ,eAiBI,QAAC,QAAD,CAAU,MAAV;AACI,cAAA,KAAK,EAAE;AAACC,gBAAAA,UAAU,EAAE;AAAb,eADX;AAEI,cAAA,IAAI,EAAC,QAFT;AAGI,cAAA,IAAI,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAuBI,QAAC,QAAD,CAAU,MAAV;AACI,cAAA,KAAK,EAAE;AAACA,gBAAAA,UAAU,EAAE;AAAb,eADX;AAEI,cAAA,KAAK,EAAC,SAFV;AAGI,cAAA,IAAI,EAAC,OAHT;AAII,cAAA,OAAO,EAAET;AAJb;AAAA;AAAA;AAAA;AAAA,oBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,EAiECtB,UAAU,gBACX,QAAC,YAAD;AAAA,gCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAA,oBAEQA,UAAU,CAACgC,GAAX,CAAeC,IAAI,iBACd,QAAC,QAAD;AAAA,oCACG,QAAC,SAAD;AAAA,wBAAYA,IAAI,CAACtD;AAAjB;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG,QAAC,SAAD;AAAA,wBAAYsD,IAAI,CAACrD;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAFH,eAGG,QAAC,SAAD;AAAA,wBAAYqD,IAAI,CAACpD;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAHH;AAAA,aAAeoD,IAAI,CAAC1D,EAApB;AAAA;AAAA;AAAA;AAAA,kBADL;AAFR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,GAeT,IAhFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAsFH;;GAnJuBoB,W;UAEJb,S,EA+BZT,Q,EAUAV,O;;;KA3CgBgC,W","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport useTable from \"../../components/useTable\"\n\nconst initialFValues = {\n    id: 0,\n    cusId: '',\n    cusName: '',\n    itemId:'',\n    itemName:'',\n    quantity:0,\n    amount:0,\n}\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\nconst headCells = [\n    {id: 'itemName', label:'Item Name'},\n    {id: 'quantity', label:'Quantity'},\n    {id: 'amount', label:'Amount'},\n]\n\nexport default function InvoiceForm(props) {\n\n    const classes = useStyles();\n    const {addOrEdit, recordForEdit, recordList} = props\n    const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        // if('supName' in fieldValues) {\n        //     temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        // }\n        // if('contact' in fieldValues) {\n        //     temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n        // }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(recordList, headCells, filterFn);\n    \n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n\n        if(validate()) {\n            addOrEdit(values, resetForm);\n        }\n    }\n\n    // useEffect(() =>{\n    //     if(recordForEdit != null){\n    //         setValues({\n    //             ...recordForEdit\n    //         })\n    //     }\n    // }, [recordForEdit])\n\n    return (\n        // <Paper className={classes.pageContent}>\n        <Paper>\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"supName\"\n                        label=\"Supplier Name\"\n                        value={values.supName}\n                        onChange={handleInputChange}\n                        error={errors.supName}\n                    />\n\n                    <Controls.Input\n                        name=\"address1\"\n                        label=\"Address Line 1\"\n                        value={values.address1}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address2\"\n                        label=\"Address Line 2\"\n                        value={values.address2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address3\"\n                        label=\"Address Line 3\"\n                        value={values.address3}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact (Number 1, Number 2, ....)\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n        {recordList ? \n        <TblContainer>\n            <TblHead/>\n            <TableBody>\n                {   \n                    recordList.map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.itemName}</TableCell>\n                            <TableCell>{item.quantity}</TableCell>\n                            <TableCell>{item.amount}</TableCell>\n                        </TableRow>)\n                    )\n                }\n            </TableBody>\n            </TblContainer>\n        : null}\n        </Paper>\n        \n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}