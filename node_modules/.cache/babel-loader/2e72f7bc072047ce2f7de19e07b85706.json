{"ast":null,"code":"import axios from \"axios\";\nimport React, { useEffect, useState } from 'react';\nconst KEYS = {\n  suppliers: 'suppliers',\n  supplierId: 'supplierId'\n};\nexport const getDepartmentCollection = () => [{\n  id: '1',\n  title: 'Development'\n}, {\n  id: '2',\n  title: 'Marketing'\n}, {\n  id: '3',\n  title: 'IT'\n}, {\n  id: '4',\n  title: 'Accounting'\n}, {\n  id: '5',\n  title: 'HR'\n}, {\n  id: '6',\n  title: 'Finance'\n}];\nexport function insertSupplier(data) {\n  axios.post('http://localhost:8080/api/v1/supplier', data).then(response => {\n    console.log(\"Status: \", response.status);\n    console.log(\"Message: \", response);\n  }).catch(error => {\n    console.error('Something went wrong!', error);\n  });\n} // export function insertSupplier(data){\n//     console.log('data', data)\n//     let suppliers = getAllSuppliers();\n//     data['id'] = generateSupplierId();\n//     suppliers.push(data);\n//     localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n// }\n\nexport function updateSupplier(data) {\n  let suppliers = getAllSuppliers();\n  let recordIndex = suppliers.findIndex(x => x.id == data.id);\n  suppliers[recordIndex] = { ...data\n  };\n  localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers));\n}\nexport function deleteSupplier(id) {\n  let suppliers = getAllSuppliers();\n  suppliers = suppliers.filter(x => x.id != id);\n  localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers));\n}\nexport function generateSupplierId() {\n  if (localStorage.getItem(KEYS.supplierId) == null) {\n    localStorage.setItem(KEYS.supplierId, '0');\n  }\n\n  var id = parseInt(localStorage.getItem(KEYS.supplierId));\n  localStorage.setItem(KEYS.supplierId, (++id).toString());\n  return id;\n}\nexport function getAllSuppliers() {\n  if (localStorage.getItem(KEYS.suppliers) == null) {\n    localStorage.setItem(KEYS.suppliers, JSON.stringify([]));\n  }\n\n  return JSON.parse(localStorage.getItem(KEYS.suppliers));\n}\nexport async function getAllSuppliersAPI(setRecords) {\n  await axios.get('http://localhost:8080/api/v1/supplier/all').then(function (response) {\n    console.log(\"response.data.data\", response.data.data);\n    setRecords(response.data.data); // return list;\n  });\n}","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/services/supplierService.js"],"names":["axios","React","useEffect","useState","KEYS","suppliers","supplierId","getDepartmentCollection","id","title","insertSupplier","data","post","then","response","console","log","status","catch","error","updateSupplier","getAllSuppliers","recordIndex","findIndex","x","localStorage","setItem","JSON","stringify","deleteSupplier","filter","generateSupplierId","getItem","parseInt","toString","parse","getAllSuppliersAPI","setRecords","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, {useEffect, useState} from 'react';\n\nconst KEYS ={\n    suppliers: 'suppliers',\n    supplierId: 'supplierId'\n}\n\nexport const getDepartmentCollection = () => ([\n    {id: '1', title:'Development'},\n    {id: '2', title:'Marketing'},\n    {id: '3', title:'IT'},\n    {id: '4', title:'Accounting'},\n    {id: '5', title:'HR'},\n    {id: '6', title:'Finance'}\n])\n\nexport function insertSupplier(data){\n    axios.post('http://localhost:8080/api/v1/supplier', data)\n    .then(response => {\n      console.log(\"Status: \", response.status);\n      console.log(\"Message: \", response);\n    }).catch(error => {\n      console.error('Something went wrong!', error);\n    });\n}\n// export function insertSupplier(data){\n//     console.log('data', data)\n//     let suppliers = getAllSuppliers();\n//     data['id'] = generateSupplierId();\n//     suppliers.push(data);\n//     localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n// }\n\nexport function updateSupplier(data){\n    let suppliers = getAllSuppliers();\n    let recordIndex = suppliers.findIndex(x => x.id == data.id);\n    suppliers[recordIndex] = { ...data}\n    localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n}\n\nexport function deleteSupplier(id){\n    let suppliers = getAllSuppliers();\n    suppliers = suppliers.filter(x => x.id != id)\n    localStorage.setItem(KEYS.suppliers, JSON.stringify(suppliers))\n}\n\nexport function generateSupplierId(){\n    if(localStorage.getItem(KEYS.supplierId) == null){\n        localStorage.setItem(KEYS.supplierId, '0')\n    }\n    var id = parseInt(localStorage.getItem(KEYS.supplierId))\n    localStorage.setItem(KEYS.supplierId, (++id).toString())\n    return id;\n}\n\nexport function getAllSuppliers(){\n    if(localStorage.getItem(KEYS.suppliers) == null){\n        localStorage.setItem(KEYS.suppliers, JSON.stringify([]))\n    }\n    return JSON.parse(localStorage.getItem(KEYS.suppliers));\n}\n\nexport async function getAllSuppliersAPI(setRecords){\n    await axios.get('http://localhost:8080/api/v1/supplier/all')\n        .then((function (response){\n            console.log(\"response.data.data\", response.data.data)\n            setRecords(response.data.data)\n            // return list;\n        }))\n}\n"]},"metadata":{},"sourceType":"module"}