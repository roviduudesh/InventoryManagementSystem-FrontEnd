{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/SupplierForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport * as supplierService from \"../../services/supplierService\";\nimport axios from \"axios\";\nimport { getAllSuppliers, getDepartmentCollection } from \"../../services/supplierService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  supName: '',\n  address1: '',\n  address2: '',\n  address3: '',\n  email: '',\n  contact: '',\n  gender: 'male',\n  departmentId: ''\n};\nexport default function SupplierForm() {\n  _s();\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('supName' in fieldValues) {\n      temp.supName = fieldValues.supName ? \"\" : \"This field is required\";\n    }\n\n    if ('contact' in fieldValues) {\n      temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\";\n    }\n\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(values.email) ? \"\" : \"Email is not valid\";\n    } // if('departmentId' in fieldValues) {\n    //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n    // }\n\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n  const [supplier, setSupplier] = useState([]);\n\n  const getSupplierData = async () => {\n    try {\n      const data = await axios.get('http://localhost:8080/api/v1/supplier/all');\n      console.log('data.data', data.data.data);\n      setSupplier(data.data.data);\n    } catch (e) {}\n  };\n\n  useEffect(() => {\n    getSupplierData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getSupplierData();\n\n    if (validate()) {\n      window.alert('AAAA');\n      axios.post('http://localhost:8080/api/v1/supplier', values);\n      resetForm(); // console.log('values - ',values)\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     {\n    //         supplier.map((item) => {\n    //             return (\n    //                 <p>\n    //                     {item.id}\n    //                 </p>\n    //\n    //             )\n    //         })\n    //     }\n    // </div>\n    _jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"supName\",\n            label: \"Supplier Name\",\n            value: values.supName,\n            onChange: handleInputChange,\n            error: errors.supName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"address1\",\n            label: \"Address Line 1\",\n            value: values.address1,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"address2\",\n            label: \"Address Line 2\",\n            value: values.address2,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"address3\",\n            label: \"Address Line 3\",\n            value: values.address3,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"email\",\n            label: \"Email\",\n            value: values.email,\n            onChange: handleInputChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n            name: \"contact\",\n            label: \"Contact (Number 1, Number 2, ....)\",\n            value: values.contact,\n            onChange: handleInputChange,\n            error: errors.contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            style: {\n              marginLeft: 10\n            },\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            style: {\n              marginLeft: 10\n            },\n            color: \"error\",\n            text: \"Reset\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(SupplierForm, \"V5BSt2hLnlVL09DJ3lVSDQcq3IM=\", false, function () {\n  return [useForm];\n});\n\n_c = SupplierForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplierForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/supplier/SupplierForm.js"],"names":["React","useEffect","useState","Grid","useForm","Form","Controls","supplierService","axios","getAllSuppliers","getDepartmentCollection","initialFValues","id","supName","address1","address2","address3","email","contact","gender","departmentId","SupplierForm","validate","fieldValues","values","temp","errors","length","test","setErrors","Object","every","x","setValues","handleInputChange","resetForm","supplier","setSupplier","getSupplierData","data","get","console","log","e","handleSubmit","preventDefault","window","alert","post","marginLeft"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \"../../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport * as supplierService from \"../../services/supplierService\"\nimport axios from \"axios\";\nimport {getAllSuppliers, getDepartmentCollection} from \"../../services/supplierService\";\n\nconst initialFValues = {\n    id: 0,\n    supName: '',\n    address1:'',\n    address2:'',\n    address3:'',\n    email:'',\n    contact:'',\n    gender:'male',\n    departmentId:'',\n}\n\nexport default function SupplierForm() {\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('supName' in fieldValues) {\n            temp.supName = fieldValues.supName ? \"\" : \"This field is required\"\n        }\n        if('contact' in fieldValues) {\n            temp.contact = fieldValues.contact.length >= 10 ? \"\" : \"This field is required\"\n        }\n        if('email' in fieldValues) {\n            temp.email = (/$^|.+@.+..+/).test(values.email) ? \"\" : \"Email is not valid\"\n        }\n        // if('departmentId' in fieldValues) {\n        //     temp.departmentId = values.departmentId.length != 0 ? \"\" : \"Thid field is required\"\n        // }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const [supplier, setSupplier] = useState([]);\n\n    const getSupplierData = async () =>{\n        try{\n            const data = await axios.get('http://localhost:8080/api/v1/supplier/all');\n            console.log('data.data', data.data.data);\n            setSupplier(data.data.data);\n        } catch (e){\n\n        }\n    };\n\n    useEffect(() => {\n        getSupplierData();\n    }, [])\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n        getSupplierData();\n        if(validate()) {\n            window.alert('AAAA');\n            axios.post(\n                'http://localhost:8080/api/v1/supplier', values\n            )\n            resetForm();\n            // console.log('values - ',values)\n        }\n    }\n\n    return (\n        // <div>\n        //     {\n        //         supplier.map((item) => {\n        //             return (\n        //                 <p>\n        //                     {item.id}\n        //                 </p>\n        //\n        //             )\n        //         })\n        //     }\n        // </div>\n\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"supName\"\n                        label=\"Supplier Name\"\n                        value={values.supName}\n                        onChange={handleInputChange}\n                        error={errors.supName}\n                    />\n\n                    <Controls.Input\n                        name=\"address1\"\n                        label=\"Address Line 1\"\n                        value={values.address1}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address2\"\n                        label=\"Address Line 2\"\n                        value={values.address2}\n                        onChange={handleInputChange}\n                    />\n\n                    <Controls.Input\n                        name=\"address3\"\n                        label=\"Address Line 3\"\n                        value={values.address3}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n\n                    <Controls.Input\n                        name=\"contact\"\n                        label=\"Contact (Number 1, Number 2, ....)\"\n                        value={values.contact}\n                        onChange={handleInputChange}\n                        error={errors.contact}\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        type=\"submit\"\n                        text=\"Submit\"\n                    />\n\n                    <Controls.Button\n                        style={{marginLeft: 10}}\n                        color=\"error\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}