{"ast":null,"code":"var _jsxFileName = \"/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from \"@mui/material\";\nimport { useForm, Form } from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport { InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport useTable from \"../../components/useTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFValues = {\n  id: 0,\n  customerId: '',\n  customerName: '',\n  itemId: '',\n  itemName: '',\n  quantity: '',\n  amount: ''\n};\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: 20,\n    padding: 20\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    left: 100,\n    spacing: 24\n  }\n}));\nconst headCells = [{\n  id: 'itemName',\n  label: 'Item Name'\n}, {\n  id: 'quantity',\n  label: 'Quantity'\n}, {\n  id: 'amount',\n  label: 'Amount'\n}];\nexport default function InvoiceForm(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    addOrEdit,\n    recordForEdit,\n    addToTable,\n    recordList,\n    customerOptions,\n    itemOptions\n  } = props;\n  const [disableCustomer, setDisableCustomer] = useState(false);\n  const [disableSubmit, setDisableSubmit] = useState(true);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  }); // console.log('recordList', recordList)\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n\n    if ('itemId' in fieldValues) {\n      temp.itemId = fieldValues.itemId ? \"\" : \"This field is required\";\n    }\n\n    if ('quantity' in fieldValues) {\n      console.log('fieldValues.quantity', fieldValues.quantity);\n      temp.quantity = Number(fieldValues.quantity) != 0 ? \"\" : \"Invalid Quantity\";\n    }\n\n    if ('amount' in fieldValues) {\n      temp.amount = values.amount > 0 ? \"\" : \"Invalid Amount\";\n    }\n\n    setErrors({ ...temp\n    });\n\n    if (fieldValues == values) {\n      return Object.values(temp).every(x => x == \"\");\n    }\n  };\n\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(recordList, headCells, filterFn);\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    console.log('recordList', recordList); // e.preventDefault();\n    // if(validate()) {\n\n    addOrEdit(recordList, resetForm); // }\n  };\n\n  const addValue = e => {\n    if (validate()) {\n      addToTable(values, resetForm);\n      setDisableSubmit(false);\n      setDisableCustomer(true);\n    }\n  }; // useEffect(() =>{\n  //     if(recordForEdit != null){\n  //         setValues({\n  //             ...recordForEdit\n  //         })\n  //     }\n  // }, [recordForEdit])\n\n\n  return (\n    /*#__PURE__*/\n    // <Paper className={classes.pageContent}>\n    _jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Select, {\n              name: \"customerId\",\n              label: \"Select Customer\",\n              options: customerOptions,\n              value: recordList.length > 0 ? recordList[0].customerId : values.customerId,\n              onChange: handleInputChange,\n              error: errors.customerId,\n              disabled: disableCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n              name: \"itemId\",\n              label: \"Select Item\",\n              options: itemOptions,\n              value: values.itemId,\n              onChange: handleInputChange,\n              error: errors.itemId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"quantity\",\n              label: \"Quantity\",\n              value: values.quantity,\n              onChange: handleInputChange,\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n              name: \"amount\",\n              label: \"Amount\",\n              value: values.amount,\n              onChange: handleInputChange,\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                margin: 10,\n                marginTop: '70px',\n                maxWidth: '60px',\n                minWidth: '100px'\n              },\n              text: \"Add\",\n              onClick: addValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                margin: 10\n              } // type=\"submit\"\n              ,\n              onClick: handleSubmit,\n              text: \"Submit\",\n              disabled: disableSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n              style: {\n                margin: 10,\n                maxWidth: '60px',\n                minWidth: '100px'\n              },\n              color: \"inherit\",\n              text: \"Reset\",\n              onClick: resetForm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), recordList.length > 0 ? /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordList.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 26\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(InvoiceForm, \"yj5uOD3iJf4AqcOflw9pEkmkAUU=\", false, function () {\n  return [useStyles, useTable, useForm];\n});\n\n_c = InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/miltonbelpage/Documents/CareerCalling/InventoryManagementSystem-FrontEnd/inventory-frontend/src/pages/Invoice/InvoiceForm.js"],"names":["React","useEffect","useState","Grid","useForm","Form","Controls","InputAdornment","Paper","TableBody","TableCell","TableRow","Toolbar","makeStyles","useTable","initialFValues","id","customerId","customerName","itemId","itemName","quantity","amount","useStyles","theme","pageContent","margin","padding","searchInput","width","newButton","position","left","spacing","headCells","label","InvoiceForm","props","classes","addOrEdit","recordForEdit","addToTable","recordList","customerOptions","itemOptions","disableCustomer","setDisableCustomer","disableSubmit","setDisableSubmit","filterFn","setFilterFn","fn","items","validate","fieldValues","values","temp","errors","console","log","Number","setErrors","Object","every","x","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","setValues","handleInputChange","resetForm","handleSubmit","e","addValue","length","marginTop","maxWidth","minWidth","map","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Grid} from \"@mui/material\";\nimport {useForm, Form} from \".././../components/useForm\";\nimport Controls from \"../../components/controls/Controls\";\nimport {InputAdornment, Paper, TableBody, TableCell, TableRow, Toolbar} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport useTable from \"../../components/useTable\"\n\nconst initialFValues = {\n    id: 0,\n    customerId: '',\n    customerName: '',\n    itemId:'',\n    itemName:'',\n    quantity:'',\n    amount:'',\n}\n\nconst useStyles = makeStyles(theme =>({\n    pageContent: {\n        margin: 20,\n        padding: 20\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton:{\n        position: 'absolute',\n        left: 100,\n        spacing:24\n    }\n}));\n\nconst headCells = [\n    {id: 'itemName', label:'Item Name'},\n    {id: 'quantity', label:'Quantity'},\n    {id: 'amount', label:'Amount'},\n]\n\nexport default function InvoiceForm(props) {\n\n    const classes = useStyles();\n    const {addOrEdit, recordForEdit, addToTable, recordList, customerOptions, itemOptions} = props\n    const [disableCustomer, setDisableCustomer] = useState(false);\n    const [disableSubmit, setDisableSubmit] = useState(true);\n    const [filterFn, setFilterFn] = useState({fn: items => {return items;}})\n    // console.log('recordList', recordList)\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('itemId' in fieldValues) {\n            temp.itemId = fieldValues.itemId ? \"\" : \"This field is required\"\n        }\n        if('quantity' in fieldValues) {\n        console.log('fieldValues.quantity', fieldValues.quantity)\n            temp.quantity = Number(fieldValues.quantity) != 0 ? \"\" : \"Invalid Quantity\"\n        }\n        if('amount' in fieldValues) {\n            temp.amount = values.amount > 0 ? \"\" : \"Invalid Amount\"\n        }\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values) {\n            return Object.values(temp).every(x => x == \"\")\n        }\n    }\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(recordList, headCells, filterFn);\n    \n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate)\n\n    const handleSubmit = e =>{\n        console.log('recordList', recordList)\n        // e.preventDefault();\n\n        // if(validate()) {\n            addOrEdit(recordList, resetForm);\n        // }\n    }\n\n    const addValue = e =>{\n        if(validate()){\n            addToTable(values, resetForm);\n            setDisableSubmit(false);\n            setDisableCustomer(true);\n        }\n    }\n\n    // useEffect(() =>{\n    //     if(recordForEdit != null){\n    //         setValues({\n    //             ...recordForEdit\n    //         })\n    //     }\n    // }, [recordForEdit])\n    return (\n        \n        // <Paper className={classes.pageContent}>\n        <Paper>\n        <Form onSubmit={handleSubmit}>\n            <Grid container direction=\"row\">\n                <Grid item xs={8}>\n                <Controls.Select\n                        name=\"customerId\"\n                        label=\"Select Customer\"\n                        options={customerOptions}\n                        value={recordList.length > 0 ? recordList[0].customerId : values.customerId}\n                        onChange={handleInputChange}\n                        error={errors.customerId}\n                        disabled={disableCustomer}\n                    />\n\n                    <Controls.Select\n                        name=\"itemId\"\n                        label=\"Select Item\"\n                        options={itemOptions}\n                        value={values.itemId}\n                        onChange={handleInputChange}\n                        error={errors.itemId}\n                    />\n\n                    <Controls.Input\n                        name=\"quantity\"\n                        label=\"Quantity\"\n                        value={values.quantity}\n                        onChange={handleInputChange}\n                        type='number'\n                    />\n\n                    <Controls.Input\n                        name=\"amount\"\n                        label=\"Amount\"\n                        value={values.amount}\n                        onChange={handleInputChange}\n                        type='number'\n                    />\n                </Grid>\n                \n                <Grid item xs={4}>\n                    <Controls.Button\n                        style={{margin: 10, marginTop:'70px', maxWidth: '60px', minWidth: '100px'}}\n                        text=\"Add\"\n                        onClick={addValue}\n                    />\n                    <Controls.Button\n                        style={{margin: 10}}\n                        // type=\"submit\"\n                        onClick={handleSubmit}\n                        text=\"Submit\"\n                        disabled={disableSubmit}\n                    />\n\n                    <Controls.Button\n                        style={{margin: 10, maxWidth: '60px', minWidth: '100px'}}\n                        color=\"inherit\"\n                        text=\"Reset\"\n                        onClick={resetForm}\n                    />\n                </Grid>\n            </Grid>\n        </Form>\n        {recordList.length > 0 ? \n        <TblContainer>\n            <TblHead/>\n            <TableBody>\n                {   \n                    recordList.map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.itemName}</TableCell>\n                            <TableCell>{item.quantity}</TableCell>\n                            <TableCell>{item.amount}</TableCell>\n                        </TableRow>)\n                    )\n                }\n            </TableBody>\n            </TblContainer>\n        : null}\n        </Paper>\n        \n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}